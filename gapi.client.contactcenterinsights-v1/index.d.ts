/* Type definitions for non-npm package Contact Center AI Insights API v1 0.0 */
// Project: https://cloud.google.com/contact-center/insights/docs
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://contactcenterinsights.googleapis.com/$discovery/rest?version=v1
// Revision: 20250701

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Contact Center AI Insights API v1 */
  function load(
    urlOrObject: 'https://contactcenterinsights.googleapis.com/$discovery/rest?version=v1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'contactcenterinsights', version: 'v1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'contactcenterinsights',
    version: 'v1',
    callback: () => any,
  ): void;

  namespace contactcenterinsights {
    interface GoogleCloudContactcenterinsightsV1alpha1Analysis {
      /** Output only. The result of the analysis, which is populated when the analysis finishes. */
      analysisResult?: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult;
      /** To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector;
      /** Output only. The time at which the analysis was created, which occurs when the long-running operation completes. */
      createTime?: string;
      /** Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis} */
      name?: string;
      /** Output only. The time at which the analysis was requested. */
      requestTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnalysisResult {
      /** Call-specific metadata created by the analysis. */
      callAnalysisMetadata?: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata;
      /** The time at which the analysis ended. */
      endTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata {
      /** A list of call annotations that apply to this call. */
      annotations?: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation[];
      /** All the entities in the call. */
      entities?: {
        [P in string]: GoogleCloudContactcenterinsightsV1alpha1Entity;
      };
      /** All the matched intents in the call. */
      intents?: {[P in string]: GoogleCloudContactcenterinsightsV1alpha1Intent};
      /** Overall conversation-level issue modeling result. */
      issueModelResult?: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult;
      /** All the matched phrase matchers in the call. */
      phraseMatchers?: {
        [P in string]: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData;
      };
      /** Results of scoring QaScorecards. */
      qaScorecardResults?: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult[];
      /** Overall conversation-level sentiment for each channel of the call. */
      sentiments?: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment[];
      /** Overall conversation-level silence during the call. */
      silence?: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary {
      /** The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero. */
      transcriptIndex?: number;
      /** The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero. */
      wordIndex?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector {
      /** The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference. */
      issueModels?: string[];
      /** The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher} */
      phraseMatchers?: string[];
      /** Configuration for the QA annotator. */
      qaConfig?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig;
      /** Whether to run the entity annotator. */
      runEntityAnnotator?: boolean;
      /** Whether to run the intent annotator. */
      runIntentAnnotator?: boolean;
      /** Whether to run the interruption annotator. */
      runInterruptionAnnotator?: boolean;
      /** Whether to run the issue model annotator. A model should have already been deployed for this to take effect. */
      runIssueModelAnnotator?: boolean;
      /** Whether to run the active phrase matcher annotator(s). */
      runPhraseMatcherAnnotator?: boolean;
      /** Whether to run the QA annotator. */
      runQaAnnotator?: boolean;
      /** Whether to run the sentiment annotator. */
      runSentimentAnnotator?: boolean;
      /** Whether to run the silence annotator. */
      runSilenceAnnotator?: boolean;
      /** Whether to run the summarization annotator. */
      runSummarizationAnnotator?: boolean;
      /** Configuration for the summarization annotator. */
      summarizationConfig?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig {
      /** A manual list of scorecards to score. */
      scorecardList?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList {
      /** List of QaScorecardRevisions. */
      qaScorecardRevisions?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig {
      /** Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile} */
      conversationProfile?: string;
      /** The resource name of the existing created generator. Format: projects//locations//generators/ */
      generator?: string;
      /** Default summarization model to be used. */
      summarizationModel?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback {
      /** Indicates whether an answer or item was clicked by the human agent. */
      clicked?: boolean;
      /** The correctness level of an answer. */
      correctnessLevel?: string;
      /** Indicates whether an answer or item was displayed to the human agent in the agent desktop UI. */
      displayed?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData {
      /** The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Article Suggestion and the document that it originates from. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document} */
      source?: string;
      /** Article title. */
      title?: string;
      /** Article URI. */
      uri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata {
      /** The number of requested analyses that have completed successfully so far. */
      completedAnalysesCount?: number;
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The number of requested analyses that have failed so far. */
      failedAnalysesCount?: number;
      /** Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for bulk analyze. */
      request?: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest;
      /** Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request. */
      totalRequestedAnalysesCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest {
      /** Required. Percentage of selected conversation to analyze, between [0, 100]. */
      analysisPercentage?: number;
      /** To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector;
      /** Required. Filter used to select the subset of conversations to analyze. */
      filter?: string;
      /** Required. The parent resource to create analyses in. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse {
      /** Count of failed analyses. */
      failedAnalysisCount?: number;
      /** Count of successful analyses. */
      successfulAnalysisCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for bulk delete. */
      request?: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest {
      /** Filter used to select the subset of conversations to delete. */
      filter?: string;
      /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses. */
      force?: boolean;
      /** Maximum number of conversations to delete. */
      maxDeleteCount?: number;
      /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsMetadata {
      /** Partial errors during deletion operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for delete. */
      request?: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsRequest {
      /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
      filter?: string;
      /** Required. The parent resource for new feedback labels. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1CallAnnotation {
      /** The boundary in the conversation where the annotation ends, inclusive. */
      annotationEndBoundary?: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary;
      /** The boundary in the conversation where the annotation starts, inclusive. */
      annotationStartBoundary?: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary;
      /** The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated. */
      channelTag?: number;
      /** Data specifying an entity mention. */
      entityMentionData?: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData;
      /** Data specifying a hold. */
      holdData?: any;
      /** Data specifying an intent match. */
      intentMatchData?: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData;
      /** Data specifying an interruption. */
      interruptionData?: any;
      /** Data specifying an issue match. */
      issueMatchData?: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData;
      /** Data specifying a phrase match. */
      phraseMatchData?: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData;
      /** Data specifying sentiment. */
      sentimentData?: GoogleCloudContactcenterinsightsV1alpha1SentimentData;
      /** Data specifying silence. */
      silenceData?: any;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1Conversation {
      /** An opaque, user-specified string representing the human agent who handled the conversation. */
      agentId?: string;
      /** Call-specific metadata. */
      callMetadata?: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata;
      /** Output only. The time at which the conversation was created. */
      createTime?: string;
      /** The source of the audio and transcription for the conversation. */
      dataSource?: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource;
      /** Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent} */
      dialogflowIntents?: {
        [P in string]: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent;
      };
      /** Output only. The duration of the conversation. */
      duration?: string;
      /** The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted. */
      expireTime?: string;
      /** A map for the user to specify any custom fields. A maximum of 100 labels per conversation is allowed, with a maximum of 256 characters per entry. */
      labels?: {[P in string]: string};
      /** A user-specified language code for the conversation. */
      languageCode?: string;
      /** Output only. The conversation's latest analysis, if one exists. */
      latestAnalysis?: GoogleCloudContactcenterinsightsV1alpha1Analysis;
      /** Output only. Latest summary of the conversation. */
      latestSummary?: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData;
      /** Immutable. The conversation medium, if unspecified will default to PHONE_CALL. */
      medium?: string;
      /** Input only. JSON metadata encoded as a string. This field is primarily used by Insights integrations with various telephony systems and must be in one of Insight's supported formats. */
      metadataJson?: string;
      /** Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation} */
      name?: string;
      /** Obfuscated user ID which the customer sent to us. */
      obfuscatedUserId?: string;
      /** Conversation metadata related to quality management. */
      qualityMetadata?: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata;
      /** Output only. The annotations that were generated during the customer and agent interaction. */
      runtimeAnnotations?: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation[];
      /** The time at which the conversation started. */
      startTime?: string;
      /** Output only. The conversation transcript. */
      transcript?: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript;
      /** Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time. */
      ttl?: string;
      /** Output only. The number of turns in the conversation. */
      turnCount?: number;
      /** Output only. The most recent time at which the conversation was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata {
      /** The audio channel that contains the agent. */
      agentChannel?: number;
      /** The audio channel that contains the customer. */
      customerChannel?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource {
      /** The source when the conversation comes from Dialogflow. */
      dialogflowSource?: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource;
      /** A Cloud Storage location specification for the audio and transcript. */
      gcsSource?: GoogleCloudContactcenterinsightsV1alpha1GcsSource;
      /** Cloud Storage URI that points to a file that contains the conversation metadata. */
      metadataUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment {
      /** The channel of the audio that the data applies to. */
      channelTag?: number;
      /** Data specifying sentiment. */
      sentimentData?: GoogleCloudContactcenterinsightsV1alpha1SentimentData;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence {
      /** Amount of time calculated to be in silence. */
      silenceDuration?: string;
      /** Percentage of the total conversation spent in silence. */
      silencePercentage?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant {
      /** Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant} */
      dialogflowParticipant?: string;
      /** The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant} */
      dialogflowParticipantName?: string;
      /** Obfuscated user ID from Dialogflow. */
      obfuscatedExternalUserId?: string;
      /** The role of the participant. */
      role?: string;
      /** A user-specified ID representing the participant. */
      userId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata {
      /** Information about agents involved in the call. */
      agentInfo?: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo[];
      /** An arbitrary integer value indicating the customer's satisfaction rating. */
      customerSatisfactionRating?: number;
      /** An arbitrary string value specifying the menu path the customer took. */
      menuPath?: string;
      /** The amount of time the customer waited to connect with an agent. */
      waitDuration?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo {
      /** A user-specified string representing the agent. */
      agentId?: string;
      /** The agent type, e.g. HUMAN_AGENT. */
      agentType?: string;
      /** The agent's name. */
      displayName?: string;
      /** A user-provided string indicating the outcome of the agent's segment of the call. */
      dispositionCode?: string;
      /** The agent's location. */
      location?: string;
      /** A user-specified string representing the agent's team. Deprecated in favor of the `teams` field. */
      team?: string;
      /** User-specified strings representing the agent's teams. */
      teams?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData {
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      answerRecord?: string;
      /** The confidence score of the summarization. */
      confidence?: number;
      /** The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model} */
      conversationModel?: string;
      /** A map that contains metadata about the summarization and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The summarization content that is concatenated into one string. */
      text?: string;
      /** The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value. */
      textSections?: {[P in string]: string};
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript {
      /** A list of sequential transcript segments that comprise the conversation. */
      transcriptSegments?: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment {
      /** For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono. */
      channelTag?: number;
      /** A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset. */
      confidence?: number;
      /** CCAI metadata relating to the current transcript segment. */
      dialogflowSegmentMetadata?: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata;
      /** The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". */
      languageCode?: string;
      /** The time that the message occurred, if provided. */
      messageTime?: string;
      /** The participant of this segment. */
      segmentParticipant?: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant;
      /** The sentiment for this transcript segment. */
      sentiment?: GoogleCloudContactcenterinsightsV1alpha1SentimentData;
      /** The text of this segment. */
      text?: string;
      /** A list of the word-specific information for each word in the segment. */
      words?: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata {
      /** Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist. */
      smartReplyAllowlistCovered?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo {
      /** A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset. */
      confidence?: number;
      /** Time offset of the end of this word relative to the beginning of the total conversation. */
      endOffset?: string;
      /** Time offset of the start of this word relative to the beginning of the total conversation. */
      startOffset?: string;
      /** The word itself. Includes punctuation marks that surround the word. */
      word?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata {
      /** Output only. The annotator selector used for the analysis (if any). */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector;
      /** Output only. The Conversation that this Analysis Operation belongs to. */
      conversation?: string;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1CreateIssueMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for creation. */
      request?: GoogleCloudContactcenterinsightsV1alpha1CreateIssueRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for creation. */
      request?: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest {
      /** Required. The issue model to create. */
      issueModel?: GoogleCloudContactcenterinsightsV1alpha1IssueModel;
      /** Required. The parent resource of the issue model. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1CreateIssueRequest {
      /** Required. The values for the new issue. */
      issue?: GoogleCloudContactcenterinsightsV1alpha1Issue;
      /** Required. The parent resource of the issue. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1Dataset {
      /** Output only. Dataset create time. */
      createTime?: string;
      /** Dataset description. */
      description?: string;
      /** Display name for the dataaset */
      displayName?: string;
      /** Immutable. Identifier. Resource name of the dataset. Format: projects/{project}/locations/{location}/datasets/{dataset} */
      name?: string;
      /** Optional. Option TTL for the dataset. */
      ttl?: string;
      /** Dataset usage type. */
      type?: string;
      /** Output only. Dataset update time. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for deletion. */
      request?: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest {
      /** Required. The name of the issue model to delete. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagRequest {
      /** Required. The name of the QaQuestionTag to delete. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for deployment. */
      request?: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest {
      /** Required. The issue model to deploy. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent {
      /** The human-readable name of the intent. */
      displayName?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData {
      /** The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidence?: number;
      /** The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent} */
      dialogflowIntentId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DialogflowSource {
      /** Cloud Storage URI that points to a file that contains the conversation audio. */
      audioUri?: string;
      /** Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation} */
      dialogflowConversation?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1Dimension {
      /** Output only. Metadata about the agent dimension. */
      agentDimensionMetadata?: GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata;
      /** The key of the dimension. */
      dimensionKey?: string;
      /** Output only. Metadata about the issue dimension. */
      issueDimensionMetadata?: GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata;
      /** Output only. Metadata about the QA question-answer dimension. */
      qaQuestionAnswerDimensionMetadata?: GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata;
      /** Output only. Metadata about the QA question dimension. */
      qaQuestionDimensionMetadata?: GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata {
      /** Optional. The agent's name */
      agentDisplayName?: string;
      /** Optional. A user-specified string representing the agent. */
      agentId?: string;
      /** Optional. A user-specified string representing the agent's team. */
      agentTeam?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata {
      /** The issue display name. */
      issueDisplayName?: string;
      /** The issue ID. */
      issueId?: string;
      /** The parent issue model ID. */
      issueModelId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata {
      /** Optional. The full body of the question. */
      answerValue?: string;
      /** Optional. The QA question ID. */
      qaQuestionId?: string;
      /** Optional. The QA scorecard ID. */
      qaScorecardId?: string;
      /** Optional. The full body of the question. */
      questionBody?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata {
      /** Optional. The QA question ID. */
      qaQuestionId?: string;
      /** Optional. The QA scorecard ID. */
      qaScorecardId?: string;
      /** Optional. The full body of the question. */
      questionBody?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec {
      /** Required. The name of customer-managed encryption key that is used to secure a resource and its sub-resources. If empty, the resource is secured by our default encryption key. Only the key in the same location as this resource is allowed to be used for encryption. Format: `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}` */
      kmsKey?: string;
      /** Immutable. The resource name of the encryption key specification resource. Format: projects/{project}/locations/{location}/encryptionSpec */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1Entity {
      /** The representative name for the entity. */
      displayName?: string;
      /** Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below. */
      metadata?: {[P in string]: string};
      /** The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient. */
      salience?: number;
      /** The aggregate sentiment expressed for this entity in the conversation. */
      sentiment?: GoogleCloudContactcenterinsightsV1alpha1SentimentData;
      /** The entity type. */
      type?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1EntityMentionData {
      /** The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to. */
      entityUniqueId?: string;
      /** Sentiment expressed for this mention of the entity. */
      sentiment?: GoogleCloudContactcenterinsightsV1alpha1SentimentData;
      /** The type of the entity mention. */
      type?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata {
      /** The number of conversations that were exported successfully. */
      completedExportCount?: number;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The number of conversations that failed to be exported. */
      failedExportCount?: number;
      /** Partial errors during export operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for export. */
      request?: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest {
      /** Specified if sink is a BigQuery table. */
      bigQueryDestination?: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination;
      /** Optional. Version of the export schema. */
      exportSchemaVersion?: string;
      /** A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties. */
      filter?: string;
      /** A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version} */
      kmsKey?: string;
      /** Required. The parent resource to export data from. */
      parent?: string;
      /** Options for what to do if the destination table already exists. */
      writeDisposition?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination {
      /** Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error. */
      dataset?: string;
      /** A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used. */
      projectId?: string;
      /** The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error. */
      table?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The original export request. */
      request?: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest {
      /** Google Cloud Storage URI to export the issue model to. */
      gcsDestination?: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination;
      /** Required. The issue model to export. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination {
      /** Required. Format: `gs:///` */
      objectUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData {
      /** The piece of text from the `source` knowledge base document. */
      answer?: string;
      /** The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the FAQ answer and the document that it originates from. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The corresponding FAQ question. */
      question?: string;
      /** The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}. */
      source?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel {
      /** Output only. Create time of the label. */
      createTime?: string;
      /** String label used for Topic Modeling. */
      label?: string;
      /** Name of the resource to be labeled. Supported resources are: * `projects/{project}/locations/{location}/qaScorecards/{scorecard}/revisions/{revision}/qaQuestions/{question}` * `projects/{project}/locations/{location}/issueModels/{issue_model}` * `projects/{project}/locations/{location}/generators/{generator_id}` */
      labeledResource?: string;
      /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
      name?: string;
      /** QaAnswer label used for Quality AI example conversations. */
      qaAnswerLabel?: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue;
      /** Output only. Update time of the label. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1GcsSource {
      /** Cloud Storage URI that points to a file that contains the conversation audio. */
      audioUri?: string;
      /** Immutable. Cloud Storage URI that points to a file that contains the conversation transcript. */
      transcriptUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1HoldData {}
    interface GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The original import request. */
      request?: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest {
      /** Optional. If set to true, will create an issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file. */
      createNewModel?: boolean;
      /** Google Cloud Storage source message. */
      gcsSource?: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource;
      /** Required. The parent resource of the issue model. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource {
      /** Required. Format: `gs:///` */
      objectUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse {
      /** The issue model that was imported. */
      issueModel?: GoogleCloudContactcenterinsightsV1alpha1IssueModel;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Statistics for IngestConversations operation. */
      ingestConversationsStats?: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats;
      /** Output only. Partial errors during ingest operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for ingest. */
      request?: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats {
      /** Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested. */
      duplicatesSkippedCount?: number;
      /** Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field. */
      failedIngestCount?: number;
      /** Output only. The number of objects processed during the ingest operation. */
      processedObjectCount?: number;
      /** Output only. The number of new conversations added during this ingest operation. */
      successfulIngestCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest {
      /** Configuration that applies to all conversations. */
      conversationConfig?: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig;
      /** A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication. */
      gcsSource?: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource;
      /** Required. The parent resource for new conversations. */
      parent?: string;
      /** Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings. */
      redactionConfig?: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig;
      /** Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Unless they are first deleted, conversations produced through sampling won't be ingested by subsequent ingest requests. */
      sampleSize?: number;
      /** Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings. */
      speechConfig?: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig;
      /** Configuration for when `source` contains conversation transcripts. */
      transcriptObjectConfig?: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig {
      /** Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed. */
      agentChannel?: number;
      /** Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided through the `metadata_bucket_uri`. */
      agentId?: string;
      /** Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed. */
      customerChannel?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource {
      /** Optional. The Cloud Storage path to the conversation audio file if already transcribed. Note that: [1] Don't set this field if the audio is not transcribed. [2] Audio files and transcript files must be in separate buckets / folders. [3] A source file and its corresponding audio file must share the same name to be properly ingested, E.g. `gs://bucket/transcript/conversation1.json` and `gs://bucket/audio/conversation1.mp3`. */
      audioBucketUri?: string;
      /** Optional. Specifies the type of the objects in `bucket_uri`. */
      bucketObjectType?: string;
      /** Required. The Cloud Storage bucket containing source objects. */
      bucketUri?: string;
      /** Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 100 labels per conversation. */
      customMetadataKeys?: string[];
      /** Optional. The Cloud Storage path to the conversation metadata. Note that: [1] Metadata files are expected to be in JSON format. [2] Metadata and source files (transcripts or audio) must be in separate buckets / folders. [3] A source file and its corresponding metadata file must share the same name to be properly ingested, E.g. `gs://bucket/audio/conversation1.mp3` and `gs://bucket/metadata/conversation1.json`. */
      metadataBucketUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig {
      /** Required. The medium transcript objects represent. */
      medium?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Partial errors during initializing operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for initialization. */
      request?: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest {
      /** Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same key will be used for all provisioned resources, if encryption is available. If the `kms_key_name` field is left empty, no encryption will be enforced. */
      encryptionSpec?: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1Intent {
      /** The human-readable name of the intent. */
      displayName?: string;
      /** The unique identifier of the intent. */
      id?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IntentMatchData {
      /** The id of the matched intent. Can be used to retrieve the corresponding intent information. */
      intentUniqueId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1InterruptionData {}
    interface GoogleCloudContactcenterinsightsV1alpha1Issue {
      /** Output only. The time at which this issue was created. */
      createTime?: string;
      /** Representative description of the issue. */
      displayDescription?: string;
      /** The representative name for the issue. */
      displayName?: string;
      /** Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
      name?: string;
      /** Output only. Resource names of the sample representative utterances that match to this issue. */
      sampleUtterances?: string[];
      /** Output only. The most recent time that this issue was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueAssignment {
      /** Immutable. Display name of the assigned issue. This field is set at time of analysis and immutable since then. */
      displayName?: string;
      /** Resource name of the assigned issue. */
      issue?: string;
      /** Score indicating the likelihood of the issue assignment. currently bounded on [0,1]. */
      score?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueMatchData {
      /** Information about the issue's assignment. */
      issueAssignment?: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueModel {
      /** Output only. The time at which this issue model was created. */
      createTime?: string;
      /** The representative name for the issue model. */
      displayName?: string;
      /** Configs for the input data that used to create the issue model. */
      inputDataConfig?: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig;
      /** Output only. Number of issues in this issue model. */
      issueCount?: string;
      /** Language of the model. */
      languageCode?: string;
      /** Type of the model. */
      modelType?: string;
      /** Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
      name?: string;
      /** Output only. State of the model. */
      state?: string;
      /** Output only. Immutable. The issue model's label statistics on its training data. */
      trainingStats?: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats;
      /** Output only. The most recent time at which the issue model was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig {
      /** A filter to reduce the conversations used for training the model to a specific subset. Refer to https://cloud.google.com/contact-center/insights/docs/filtering for details. */
      filter?: string;
      /** Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`. */
      medium?: string;
      /** Output only. Number of conversations used in training. Output only. */
      trainingConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats {
      /** Number of conversations the issue model has analyzed at this point in time. */
      analyzedConversationsCount?: string;
      /** Statistics on each issue. Key is the issue's resource name. */
      issueStats?: {
        [P in string]: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats;
      };
      /** Number of analyzed conversations for which no issue was applicable at this point in time. */
      unclassifiedConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats {
      /** Display name of the issue. */
      displayName?: string;
      /** Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
      issue?: string;
      /** Number of conversations attached to the issue at this point in time. */
      labeledConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1IssueModelResult {
      /** Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
      issueModel?: string;
      /** All the matched issues. */
      issues?: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ListAllFeedbackLabelsResponse {
      /** The feedback labels that match the request. */
      feedbackLabels?: GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1ListFeedbackLabelsResponse {
      /** The feedback labels that match the request. */
      feedbackLabels?: GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel[];
      /** The next page token. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData {
      /** The human-readable name of the phrase matcher. */
      displayName?: string;
      /** The unique identifier (the resource name) of the phrase matcher. */
      phraseMatcher?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaAnswer {
      /** List of all individual answers given to the question. */
      answerSources?: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource[];
      /** The main answer value, incorporating any manual edits if they exist. */
      answerValue?: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue;
      /** The conversation the answer applies to. */
      conversation?: string;
      /** The QaQuestion answered by this answer. */
      qaQuestion?: string;
      /** Question text. E.g., "Did the agent greet the customer?" */
      questionBody?: string;
      /** User-defined list of arbitrary tags. Matches the value from QaScorecard.ScorecardQuestion.tags. Used for grouping/organization and for weighting the score of each answer. */
      tags?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource {
      /** The answer value from this source. */
      answerValue?: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue;
      /** What created the answer. */
      sourceType?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue {
      /** Boolean value. */
      boolValue?: boolean;
      /** A short string used as an identifier. Matches the value used in QaQuestion.AnswerChoice.key. */
      key?: string;
      /** A value of "Not Applicable (N/A)". Should only ever be `true`. */
      naValue?: boolean;
      /** Output only. Normalized score of the questions. Calculated as score / potential_score. */
      normalizedScore?: number;
      /** Numerical value. */
      numValue?: number;
      /** Output only. The maximum potential score of the question. */
      potentialScore?: number;
      /** Output only. Numerical score of the answer. */
      score?: number;
      /** String value. */
      strValue?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaQuestionTag {
      /** Output only. The time at which the question tag was created. */
      createTime?: string;
      /** Required. A user-specified display name for the tag. */
      displayName?: string;
      /** Identifier. Resource name for the QaQuestionTag Format projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag} In the above format, the last segment, i.e., qa_question_tag, is a server-generated ID corresponding to the tag resource. */
      name?: string;
      /** Optional. The list of Scorecard Question IDs that the tag applies to. Each QaQuestionId is represented as a full resource name containing the Question ID. Lastly, Since a tag may not necessarily be referenced by any Scorecard Questions, we treat this field as optional. */
      qaQuestionIds?: string[];
      /** Output only. The most recent time at which the question tag was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult {
      /** ID of the agent that handled the conversation. */
      agentId?: string;
      /** The conversation scored by this result. */
      conversation?: string;
      /** Output only. The timestamp that the revision was created. */
      createTime?: string;
      /** Identifier. The name of the scorecard result. Format: projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result} */
      name?: string;
      /** The normalized score, which is the score divided by the potential score. Any manual edits are included if they exist. */
      normalizedScore?: number;
      /** The maximum potential overall score of the scorecard. Any questions answered using `na_value` are excluded from this calculation. */
      potentialScore?: number;
      /** Set of QaAnswers represented in the result. */
      qaAnswers?: GoogleCloudContactcenterinsightsV1alpha1QaAnswer[];
      /** The QaScorecardRevision scored by this result. */
      qaScorecardRevision?: string;
      /** Collection of tags and their scores. */
      qaTagResults?: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult[];
      /** The overall numerical score of the result, incorporating any manual edits if they exist. */
      score?: number;
      /** List of all individual score sets. */
      scoreSources?: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult {
      /** The normalized score the tag applies to. */
      normalizedScore?: number;
      /** The potential score the tag applies to. */
      potentialScore?: number;
      /** The score the tag applies to. */
      score?: number;
      /** The tag the score applies to. */
      tag?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource {
      /** The normalized score, which is the score divided by the potential score. */
      normalizedScore?: number;
      /** The maximum potential overall score of the scorecard. Any questions answered using `na_value` are excluded from this calculation. */
      potentialScore?: number;
      /** Collection of tags and their scores. */
      qaTagResults?: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult[];
      /** The overall numerical score of the result. */
      score?: number;
      /** What created the score. */
      sourceType?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsMetadata {
      /** Whether the result rows were truncated because the result row size is too large to materialize. */
      resultIsTruncated?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponse {
      /** Required. The location of the data. "projects/{project}/locations/{location}" */
      location?: string;
      /** The macro average slice contains aggregated averages across the selected dimension. i.e. if group_by agent is specified this field will contain the average across all agents. This field is only populated if the request specifies a Dimension. */
      macroAverageSlice?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice;
      /** A slice contains a total and (if the request specified a time granularity) a time series of metric values. Each slice contains a unique combination of the cardinality of dimensions from the request. */
      slices?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice[];
      /** The metrics last update time. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice {
      /** A unique combination of dimensions that this slice represents. */
      dimensions?: GoogleCloudContactcenterinsightsV1alpha1Dimension[];
      /** A time series of metric values. This is only populated if the request specifies a time granularity other than NONE. */
      timeSeries?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries;
      /** The total metric value. The interval of this data point is [starting create time, ending create time) from the request. */
      total?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint {
      /** The measure related to conversations. */
      conversationMeasure?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure;
      /** The interval that this data point represents. * If this is the total data point, the interval is [starting create time, ending create time) from the request. * If this a data point from the time series, the interval is [time, time + time granularity from the request). */
      interval?: GoogleTypeInterval;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure {
      /** The average agent's sentiment score. */
      averageAgentSentimentScore?: number;
      /** The average client's sentiment score. */
      averageClientSentimentScore?: number;
      /** The average customer satisfaction rating. */
      averageCustomerSatisfactionRating?: number;
      /** The average duration. */
      averageDuration?: string;
      /** Average QA normalized score. Will exclude 0's in average calculation. */
      averageQaNormalizedScore?: number;
      /** Average QA normalized score averaged for questions averaged across all revisions of the parent scorecard. Will be only populated if the request specifies a dimension of QA_QUESTION_ID. */
      averageQaQuestionNormalizedScore?: number;
      /** The average silence percentage. */
      averageSilencePercentage?: number;
      /** The average turn count. */
      averageTurnCount?: number;
      /** The conversation count. */
      conversationCount?: number;
      /** Average QA normalized score for all the tags. */
      qaTagScores?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore {
      /** Average tag normalized score per tag. */
      averageTagNormalizedScore?: number;
      /** Tag name. */
      tag?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries {
      /** The data points that make up the time series . */
      dataPoints?: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint[];
    }
    interface GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewMetadata {}
    interface GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewResponse {
      /** The summary text of the performance. */
      summaryText?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1RedactionConfig {
      /** The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}` */
      deidentifyTemplate?: string;
      /** The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}` */
      inspectTemplate?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation {
      /** The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation} */
      annotationId?: string;
      /** The feedback that the customer has about the answer in `data`. */
      answerFeedback?: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback;
      /** Agent Assist Article Suggestion data. */
      articleSuggestion?: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData;
      /** Conversation summarization suggestion data. */
      conversationSummarizationSuggestion?: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData;
      /** The time at which this annotation was created. */
      createTime?: string;
      /** Dialogflow interaction data. */
      dialogflowInteraction?: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData;
      /** The boundary in the conversation where the annotation ends, inclusive. */
      endBoundary?: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary;
      /** Agent Assist FAQ answer data. */
      faqAnswer?: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData;
      /** Agent Assist Smart Compose suggestion data. */
      smartComposeSuggestion?: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData;
      /** Agent Assist Smart Reply data. */
      smartReply?: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData;
      /** The boundary in the conversation where the annotation starts, inclusive. */
      startBoundary?: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary;
      /** Explicit input used for generating the answer */
      userInput?: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput {
      /** The resource name of associated generator. Format: `projects//locations//generators/` */
      generatorName?: string;
      /** Query text. Article Search uses this to store the input query used to generate the search results. */
      query?: string;
      /** Query source for the answer. */
      querySource?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Partial errors during sample conversations operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for sample conversations to dataset. */
      request?: GoogleCloudContactcenterinsightsV1alpha1SampleConversationsRequest;
      /** Output only. Statistics for SampleConversations operation. */
      sampleConversationsStats?: GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadataSampleConversationsStats;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadataSampleConversationsStats {
      /** Output only. The number of objects which were unable to be sampled due to errors. The errors are populated in the partial_errors field. */
      failedSampleCount?: number;
      /** Output only. The number of new conversations added during this sample operation. */
      successfulSampleCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SampleConversationsRequest {
      /** The dataset resource to copy the sampled conversations to. */
      destinationDataset?: GoogleCloudContactcenterinsightsV1alpha1Dataset;
      /** Required. The parent resource of the dataset. */
      parent?: string;
      /** Optional. The sample rule used for sampling conversations. */
      sampleRule?: GoogleCloudContactcenterinsightsV1alpha1SampleRule;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SampleConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1SampleRule {
      /** To specify the filter for the conversions that should apply this sample rule. An empty filter means this sample rule applies to all conversations. */
      conversationFilter?: string;
      /** Optional. Group by dimension to sample the conversation. If no dimension is provided, the sampling will be applied to the project level. Current supported dimensions is 'quality_metadata.agent_info.agent_id'. */
      dimension?: string;
      /** Percentage of conversations that we should sample based on the dimension between [0, 100]. */
      samplePercentage?: number;
      /** Number of the conversations that we should sample based on the dimension. */
      sampleRow?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SentimentData {
      /** A non-negative number from 0 to infinity which represents the absolute magnitude of sentiment regardless of score. */
      magnitude?: number;
      /** The sentiment score between -1.0 (negative) and 1.0 (positive). */
      score?: number;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SilenceData {}
    interface GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData {
      /** The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Smart Compose suggestion and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The content of the suggestion. */
      suggestion?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SmartReplyData {
      /** The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Smart Reply and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The content of the reply. */
      reply?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1SpeechConfig {
      /** The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}` */
      speechRecognizer?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for undeployment. */
      request?: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest {
      /** Required. The issue model to undeploy. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagRequest {
      /** Required. The QaQuestionTag to update. */
      qaQuestionTag?: GoogleCloudContactcenterinsightsV1alpha1QaQuestionTag;
      /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `qa_question_tag_name` - the name of the tag * `qa_question_ids` - the list of questions the tag applies to */
      updateMask?: string;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata {
      /** Output only. The operation name for a successfully created analysis operation, if any. */
      analysisOperation?: string;
      /** Output only. The redaction config applied to the uploaded conversation. */
      appliedRedactionConfig?: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest;
    }
    interface GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest {
      /** Required. The conversation resource to create. */
      conversation?: GoogleCloudContactcenterinsightsV1alpha1Conversation;
      /** Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-` */
      conversationId?: string;
      /** Required. The parent resource of the conversation. */
      parent?: string;
      /** Optional. DLP settings for transcript redaction. Will default to the config specified in Settings. */
      redactionConfig?: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig;
      /** Optional. Speech-to-Text configuration. Will default to the config specified in Settings. */
      speechConfig?: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig;
    }
    interface GoogleCloudContactcenterinsightsV1Analysis {
      /** Output only. The result of the analysis, which is populated when the analysis finishes. */
      analysisResult?: GoogleCloudContactcenterinsightsV1AnalysisResult;
      /** To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1AnnotatorSelector;
      /** Output only. The time at which the analysis was created, which occurs when the long-running operation completes. */
      createTime?: string;
      /** Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis} */
      name?: string;
      /** Output only. The time at which the analysis was requested. */
      requestTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AnalysisResult {
      /** Call-specific metadata created by the analysis. */
      callAnalysisMetadata?: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata;
      /** The time at which the analysis ended. */
      endTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata {
      /** A list of call annotations that apply to this call. */
      annotations?: GoogleCloudContactcenterinsightsV1CallAnnotation[];
      /** All the entities in the call. */
      entities?: {[P in string]: GoogleCloudContactcenterinsightsV1Entity};
      /** All the matched intents in the call. */
      intents?: {[P in string]: GoogleCloudContactcenterinsightsV1Intent};
      /** Overall conversation-level issue modeling result. */
      issueModelResult?: GoogleCloudContactcenterinsightsV1IssueModelResult;
      /** All the matched phrase matchers in the call. */
      phraseMatchers?: {
        [P in string]: GoogleCloudContactcenterinsightsV1PhraseMatchData;
      };
      /** Results of scoring QaScorecards. */
      qaScorecardResults?: GoogleCloudContactcenterinsightsV1QaScorecardResult[];
      /** Overall conversation-level sentiment for each channel of the call. */
      sentiments?: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment[];
      /** Overall conversation-level silence during the call. */
      silence?: GoogleCloudContactcenterinsightsV1ConversationLevelSilence;
    }
    interface GoogleCloudContactcenterinsightsV1AnalysisRule {
      /** If true, apply this rule to conversations. Otherwise, this rule is inactive and saved as a draft. */
      active?: boolean;
      /** Percentage of conversations that we should apply this analysis setting automatically, between [0, 1]. For example, 0.1 means 10%. Conversations are sampled in a determenestic way. The original runtime_percentage & upload percentage will be replaced by defining filters on the conversation. */
      analysisPercentage?: number;
      /** Selector of annotators to run and the phrase matchers to use for conversations that matches the conversation_filter. If not specified, NO annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1AnnotatorSelector;
      /** Filter for the conversations that should apply this analysis rule. An empty filter means this analysis rule applies to all conversations. Refer to https://cloud.google.com/contact-center/insights/docs/filtering for details. */
      conversationFilter?: string;
      /** Output only. The time at which this analysis rule was created. */
      createTime?: string;
      /** Display Name of the analysis rule. */
      displayName?: string;
      /** Identifier. The resource name of the analysis rule. Format: projects/{project}/locations/{location}/analysisRules/{analysis_rule} */
      name?: string;
      /** Output only. The most recent time at which this analysis rule was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AnnotationBoundary {
      /** The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero. */
      transcriptIndex?: number;
      /** The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero. */
      wordIndex?: number;
    }
    interface GoogleCloudContactcenterinsightsV1AnnotatorSelector {
      /** The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference. */
      issueModels?: string[];
      /** The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher} */
      phraseMatchers?: string[];
      /** Configuration for the QA annotator. */
      qaConfig?: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig;
      /** Whether to run the entity annotator. */
      runEntityAnnotator?: boolean;
      /** Whether to run the intent annotator. */
      runIntentAnnotator?: boolean;
      /** Whether to run the interruption annotator. */
      runInterruptionAnnotator?: boolean;
      /** Whether to run the issue model annotator. A model should have already been deployed for this to take effect. */
      runIssueModelAnnotator?: boolean;
      /** Whether to run the active phrase matcher annotator(s). */
      runPhraseMatcherAnnotator?: boolean;
      /** Whether to run the QA annotator. */
      runQaAnnotator?: boolean;
      /** Whether to run the sentiment annotator. */
      runSentimentAnnotator?: boolean;
      /** Whether to run the silence annotator. */
      runSilenceAnnotator?: boolean;
      /** Whether to run the summarization annotator. */
      runSummarizationAnnotator?: boolean;
      /** Configuration for the summarization annotator. */
      summarizationConfig?: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig;
    }
    interface GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig {
      /** A manual list of scorecards to score. */
      scorecardList?: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList;
    }
    interface GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList {
      /** List of QaScorecardRevisions. */
      qaScorecardRevisions?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig {
      /** Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile} */
      conversationProfile?: string;
      /** The resource name of the existing created generator. Format: projects//locations//generators/ */
      generator?: string;
      /** Default summarization model to be used. */
      summarizationModel?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AnswerFeedback {
      /** Indicates whether an answer or item was clicked by the human agent. */
      clicked?: boolean;
      /** The correctness level of an answer. */
      correctnessLevel?: string;
      /** Indicates whether an answer or item was displayed to the human agent in the agent desktop UI. */
      displayed?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1AppealAssessmentRequest {}
    interface GoogleCloudContactcenterinsightsV1ArticleSuggestionData {
      /** The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Article Suggestion and the document that it originates from. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document} */
      source?: string;
      /** Article title. */
      title?: string;
      /** Article URI. */
      uri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1Assessment {
      /** Information about the agent the assessment is for. */
      agentInfo?: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo;
      /** Output only. The time at which the assessment was created. */
      createTime?: string;
      /** Identifier. The resource name of the assessment. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment} */
      name?: string;
      /** Output only. The state of the assessment. */
      state?: string;
      /** Output only. The time at which the assessment was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AssessmentRule {
      /** If true, apply this rule to conversations. Otherwise, this rule is inactive. */
      active?: boolean;
      /** Output only. The time at which this assessment rule was created. */
      createTime?: string;
      /** Display Name of the assessment rule. */
      displayName?: string;
      /** Identifier. The resource name of the assessment rule. Format: projects/{project}/locations/{location}/assessmentRules/{assessment_rule} */
      name?: string;
      /** The sample rule for the assessment rule. */
      sampleRule?: GoogleCloudContactcenterinsightsV1SampleRule;
      /** Schedule info for the assessment rule. */
      scheduleInfo?: GoogleCloudContactcenterinsightsV1ScheduleInfo;
      /** Output only. The most recent time at which this assessment rule was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AuthorizedView {
      /** A filter to reduce conversation results to a specific subset. The AuthorizedView's assigned permission (read/write) could be applied to the subset of conversations. If conversation_filter is empty, there is no restriction on the conversations that the AuthorizedView can access. Having *authorizedViews.get* access to the AuthorizedView means having the same read/write access to the Conversations (as well as metadata/annotations linked to the conversation) that this AuthorizedView has. */
      conversationFilter?: string;
      /** Output only. The time at which the authorized view was created. */
      createTime?: string;
      /** Display Name. Limit 64 characters. */
      displayName?: string;
      /** Identifier. The resource name of the AuthorizedView. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set}/authorizedViews/{authorized_view} */
      name?: string;
      /** Output only. The most recent time at which the authorized view was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1AuthorizedViewSet {
      /** Output only. Create time. */
      createTime?: string;
      /** Display Name. Limit 64 characters. */
      displayName?: string;
      /** Identifier. The resource name of the AuthorizedViewSet. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set} */
      name?: string;
      /** Output only. Update time. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata {
      /** The number of requested analyses that have completed successfully so far. */
      completedAnalysesCount?: number;
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The number of requested analyses that have failed so far. */
      failedAnalysesCount?: number;
      /** Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for bulk analyze. */
      request?: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest;
      /** Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request. */
      totalRequestedAnalysesCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest {
      /** Required. Percentage of selected conversation to analyze, between [0, 100]. */
      analysisPercentage?: number;
      /** To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1AnnotatorSelector;
      /** Required. Filter used to select the subset of conversations to analyze. */
      filter?: string;
      /** Required. The parent resource to create analyses in. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse {
      /** Count of failed analyses. */
      failedAnalysisCount?: number;
      /** Count of successful analyses. */
      successfulAnalysisCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for bulk delete. */
      request?: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest {
      /** Filter used to select the subset of conversations to delete. */
      filter?: string;
      /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses. */
      force?: boolean;
      /** Maximum number of conversations to delete. */
      maxDeleteCount?: number;
      /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsMetadata {
      /** Partial errors during deletion operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for delete. */
      request?: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest {
      /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
      filter?: string;
      /** Required. The parent resource for new feedback labels. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsResponse {}
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. Statistics for BulkDownloadFeedbackLabels operation. */
      downloadStats?: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Partial errors during ingest operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for download. */
      request?: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats {
      /** Output only. Full name of the files written to Cloud storage. */
      fileNames?: string[];
      /** The number of objects processed during the download operation. */
      processedObjectCount?: number;
      /** The number of new feedback labels downloaded during this operation. Different from "processed" because some labels might not be downloaded because an error. */
      successfulDownloadCount?: number;
      /** Total number of files written to the provided Cloud Storage bucket. */
      totalFilesWritten?: number;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest {
      /** Optional. Filter parent conversations to download feedback labels for. When specified, the feedback labels will be downloaded for the conversations that match the filter. If `template_qa_scorecard_id` is set, all the conversations that match the filter will be paired with the questions under the scorecard for labeling. */
      conversationFilter?: string;
      /** Optional. The type of feedback labels that will be downloaded. */
      feedbackLabelType?: string;
      /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
      filter?: string;
      /** A cloud storage bucket destination. */
      gcsDestination?: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination;
      /** Optional. Limits the maximum number of feedback labels that will be downloaded. The first `N` feedback labels will be downloaded. */
      maxDownloadCount?: number;
      /** Required. The parent resource for new feedback labels. */
      parent?: string;
      /** A sheets document destination. */
      sheetsDestination?: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination;
      /** Optional. If set, a template for labeling conversations and scorecard questions will be created from the conversation_filter and the questions under the scorecard(s). The feedback label `filter` will be ignored. */
      templateQaScorecardId?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination {
      /** Optional. Add whitespace to the JSON file. Makes easier to read, but increases file size. Only applicable for JSON format. */
      addWhitespace?: boolean;
      /** Optional. Always print fields with no presence. This is useful for printing fields that are not set, like implicit 0 value or empty lists/maps. Only applicable for JSON format. */
      alwaysPrintEmptyFields?: boolean;
      /** Required. File format in which the labels will be exported. */
      format?: string;
      /** Required. The Google Cloud Storage URI to write the feedback labels to. The file name will be used as a prefix for the files written to the bucket if the output needs to be split across multiple files, otherwise it will be used as is. The file extension will be appended to the file name based on the format selected. E.g. `gs://bucket_name/object_uri_prefix` */
      objectUri?: string;
      /** Optional. The number of records per file. Applicable for either format. */
      recordsPerFileCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination {
      /** Optional. The title of the new sheet to write the feedback labels to. */
      sheetTitle?: string;
      /** Required. The Google Sheets document to write the feedback labels to. Retrieved from Google Sheets URI. E.g. `https://docs.google.com/spreadsheets/d/1234567890` The spreadsheet must be shared with the Insights P4SA. The spreadsheet ID written to will be returned as `file_names` in the BulkDownloadFeedbackLabelsMetadata. */
      spreadsheetUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsResponse {}
    interface GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest {
      /** A cloud storage bucket source. */
      gcsSource?: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource;
      /** A sheets document source. */
      sheetsSource?: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestSheetsSource;
      /** Optional. If set, upload will not happen and the labels will be validated. If not set, then default behavior will be to upload the labels after validation is complete. */
      validateOnly?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource {
      /** Required. File format which will be ingested. */
      format?: string;
      /** Required. The Google Cloud Storage URI of the file to import. Format: `gs://bucket_name/object_name` */
      objectUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestSheetsSource {
      /** Required. The Google Sheets document to write the feedback labels to. Retrieved from Google Sheets URI. E.g. `https://docs.google.com/spreadsheets/d/1234567890` The spreadsheet must be shared with the Insights P4SA. */
      spreadsheetUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse {
      /** The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment. */
      currentStats?: GoogleCloudContactcenterinsightsV1IssueModelLabelStats;
    }
    interface GoogleCloudContactcenterinsightsV1CalculateStatsRequest {
      /** A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties. */
      filter?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CalculateStatsResponse {
      /** The average duration of all conversations. The average is calculated using only conversations that have a time duration. */
      averageDuration?: string;
      /** The average number of turns per conversation. */
      averageTurnCount?: number;
      /** The total number of conversations. */
      conversationCount?: number;
      /** A time series representing the count of conversations created over time that match that requested filter criteria. */
      conversationCountTimeSeries?: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries;
      /** A map associating each custom highlighter resource name with its respective number of matches in the set of conversations. */
      customHighlighterMatches?: {[P in string]: number};
      /** A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead. */
      issueMatches?: {[P in string]: number};
      /** A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` */
      issueMatchesStats?: {
        [P in string]: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats;
      };
      /** A map associating each smart highlighter display name with its respective number of matches in the set of conversations. */
      smartHighlighterMatches?: {[P in string]: number};
    }
    interface GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries {
      /** The duration of each interval. */
      intervalDuration?: string;
      /** An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window. */
      points?: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval[];
    }
    interface GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval {
      /** The number of conversations created in this interval. */
      conversationCount?: number;
      /** The start time of this interval. */
      startTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CallAnnotation {
      /** The boundary in the conversation where the annotation ends, inclusive. */
      annotationEndBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;
      /** The boundary in the conversation where the annotation starts, inclusive. */
      annotationStartBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;
      /** The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated. */
      channelTag?: number;
      /** Data specifying an entity mention. */
      entityMentionData?: GoogleCloudContactcenterinsightsV1EntityMentionData;
      /** Data specifying a hold. */
      holdData?: any;
      /** Data specifying an intent match. */
      intentMatchData?: GoogleCloudContactcenterinsightsV1IntentMatchData;
      /** Data specifying an interruption. */
      interruptionData?: any;
      /** Data specifying an issue match. */
      issueMatchData?: GoogleCloudContactcenterinsightsV1IssueMatchData;
      /** Data specifying a phrase match. */
      phraseMatchData?: GoogleCloudContactcenterinsightsV1PhraseMatchData;
      /** Data specifying sentiment. */
      sentimentData?: GoogleCloudContactcenterinsightsV1SentimentData;
      /** Data specifying silence. */
      silenceData?: any;
    }
    interface GoogleCloudContactcenterinsightsV1Conversation {
      /** An opaque, user-specified string representing the human agent who handled the conversation. */
      agentId?: string;
      /** Call-specific metadata. */
      callMetadata?: GoogleCloudContactcenterinsightsV1ConversationCallMetadata;
      /** Output only. The time at which the conversation was created. */
      createTime?: string;
      /** The source of the audio and transcription for the conversation. */
      dataSource?: GoogleCloudContactcenterinsightsV1ConversationDataSource;
      /** Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent} */
      dialogflowIntents?: {
        [P in string]: GoogleCloudContactcenterinsightsV1DialogflowIntent;
      };
      /** Output only. The duration of the conversation. */
      duration?: string;
      /** The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted. */
      expireTime?: string;
      /** A map for the user to specify any custom fields. A maximum of 100 labels per conversation is allowed, with a maximum of 256 characters per entry. */
      labels?: {[P in string]: string};
      /** A user-specified language code for the conversation. */
      languageCode?: string;
      /** Output only. The conversation's latest analysis, if one exists. */
      latestAnalysis?: GoogleCloudContactcenterinsightsV1Analysis;
      /** Output only. Latest summary of the conversation. */
      latestSummary?: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData;
      /** Immutable. The conversation medium, if unspecified will default to PHONE_CALL. */
      medium?: string;
      /** Input only. JSON metadata encoded as a string. This field is primarily used by Insights integrations with various telephony systems and must be in one of Insight's supported formats. */
      metadataJson?: string;
      /** Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation} */
      name?: string;
      /** Obfuscated user ID which the customer sent to us. */
      obfuscatedUserId?: string;
      /** Conversation metadata related to quality management. */
      qualityMetadata?: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata;
      /** Output only. The annotations that were generated during the customer and agent interaction. */
      runtimeAnnotations?: GoogleCloudContactcenterinsightsV1RuntimeAnnotation[];
      /** The time at which the conversation started. */
      startTime?: string;
      /** Output only. The conversation transcript. */
      transcript?: GoogleCloudContactcenterinsightsV1ConversationTranscript;
      /** Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time. */
      ttl?: string;
      /** Output only. The number of turns in the conversation. */
      turnCount?: number;
      /** Output only. The most recent time at which the conversation was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationCallMetadata {
      /** The audio channel that contains the agent. */
      agentChannel?: number;
      /** The audio channel that contains the customer. */
      customerChannel?: number;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationDataSource {
      /** The source when the conversation comes from Dialogflow. */
      dialogflowSource?: GoogleCloudContactcenterinsightsV1DialogflowSource;
      /** A Cloud Storage location specification for the audio and transcript. */
      gcsSource?: GoogleCloudContactcenterinsightsV1GcsSource;
      /** Cloud Storage URI that points to a file that contains the conversation metadata. */
      metadataUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationLevelSentiment {
      /** The channel of the audio that the data applies to. */
      channelTag?: number;
      /** Data specifying sentiment. */
      sentimentData?: GoogleCloudContactcenterinsightsV1SentimentData;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationLevelSilence {
      /** Amount of time calculated to be in silence. */
      silenceDuration?: string;
      /** Percentage of the total conversation spent in silence. */
      silencePercentage?: number;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationParticipant {
      /** Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant} */
      dialogflowParticipant?: string;
      /** The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant} */
      dialogflowParticipantName?: string;
      /** Obfuscated user ID from Dialogflow. */
      obfuscatedExternalUserId?: string;
      /** The role of the participant. */
      role?: string;
      /** A user-specified ID representing the participant. */
      userId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationQualityMetadata {
      /** Information about agents involved in the call. */
      agentInfo?: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo[];
      /** An arbitrary integer value indicating the customer's satisfaction rating. */
      customerSatisfactionRating?: number;
      /** An arbitrary string value specifying the menu path the customer took. */
      menuPath?: string;
      /** The amount of time the customer waited to connect with an agent. */
      waitDuration?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo {
      /** A user-specified string representing the agent. */
      agentId?: string;
      /** The agent type, e.g. HUMAN_AGENT. */
      agentType?: string;
      /** The agent's name. */
      displayName?: string;
      /** A user-provided string indicating the outcome of the agent's segment of the call. */
      dispositionCode?: string;
      /** The agent's location. */
      location?: string;
      /** A user-specified string representing the agent's team. Deprecated in favor of the `teams` field. */
      team?: string;
      /** User-specified strings representing the agent's teams. */
      teams?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData {
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      answerRecord?: string;
      /** The confidence score of the summarization. */
      confidence?: number;
      /** The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model} */
      conversationModel?: string;
      /** A map that contains metadata about the summarization and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The summarization content that is concatenated into one string. */
      text?: string;
      /** The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value. */
      textSections?: {[P in string]: string};
    }
    interface GoogleCloudContactcenterinsightsV1ConversationTranscript {
      /** A list of sequential transcript segments that comprise the conversation. */
      transcriptSegments?: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment[];
    }
    interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment {
      /** For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono. */
      channelTag?: number;
      /** A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset. */
      confidence?: number;
      /** CCAI metadata relating to the current transcript segment. */
      dialogflowSegmentMetadata?: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata;
      /** The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". */
      languageCode?: string;
      /** The time that the message occurred, if provided. */
      messageTime?: string;
      /** The participant of this segment. */
      segmentParticipant?: GoogleCloudContactcenterinsightsV1ConversationParticipant;
      /** The sentiment for this transcript segment. */
      sentiment?: GoogleCloudContactcenterinsightsV1SentimentData;
      /** The text of this segment. */
      text?: string;
      /** A list of the word-specific information for each word in the segment. */
      words?: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo[];
    }
    interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata {
      /** Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist. */
      smartReplyAllowlistCovered?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo {
      /** A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset. */
      confidence?: number;
      /** Time offset of the end of this word relative to the beginning of the total conversation. */
      endOffset?: string;
      /** Time offset of the start of this word relative to the beginning of the total conversation. */
      startOffset?: string;
      /** The word itself. Includes punctuation marks that surround the word. */
      word?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata {
      /** Output only. The annotator selector used for the analysis (if any). */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1AnnotatorSelector;
      /** Output only. The Conversation that this Analysis Operation belongs to. */
      conversation?: string;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CreateIssueMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for creation. */
      request?: GoogleCloudContactcenterinsightsV1CreateIssueRequest;
    }
    interface GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for creation. */
      request?: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1CreateIssueModelRequest {
      /** Required. The issue model to create. */
      issueModel?: GoogleCloudContactcenterinsightsV1IssueModel;
      /** Required. The parent resource of the issue model. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1CreateIssueRequest {
      /** Required. The values for the new issue. */
      issue?: GoogleCloudContactcenterinsightsV1Issue;
      /** Required. The parent resource of the issue. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1Dataset {
      /** Output only. Dataset create time. */
      createTime?: string;
      /** Dataset description. */
      description?: string;
      /** Display name for the dataaset */
      displayName?: string;
      /** Immutable. Identifier. Resource name of the dataset. Format: projects/{project}/locations/{location}/datasets/{dataset} */
      name?: string;
      /** Optional. Option TTL for the dataset. */
      ttl?: string;
      /** Dataset usage type. */
      type?: string;
      /** Output only. Dataset update time. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for deletion. */
      request?: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest {
      /** Required. The name of the issue model to delete. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagRequest;
    }
    interface GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagRequest {
      /** Required. The name of the QaQuestionTag to delete. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for deployment. */
      request?: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1DeployIssueModelRequest {
      /** Required. The issue model to deploy. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DeployIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest {}
    interface GoogleCloudContactcenterinsightsV1DialogflowIntent {
      /** The human-readable name of the intent. */
      displayName?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DialogflowInteractionData {
      /** The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidence?: number;
      /** The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent} */
      dialogflowIntentId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DialogflowSource {
      /** Cloud Storage URI that points to a file that contains the conversation audio. */
      audioUri?: string;
      /** Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation} */
      dialogflowConversation?: string;
    }
    interface GoogleCloudContactcenterinsightsV1Dimension {
      /** Output only. Metadata about the agent dimension. */
      agentDimensionMetadata?: GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata;
      /** The key of the dimension. */
      dimensionKey?: string;
      /** Output only. Metadata about the issue dimension. */
      issueDimensionMetadata?: GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata;
      /** Output only. Metadata about the QA question-answer dimension. */
      qaQuestionAnswerDimensionMetadata?: GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata;
      /** Output only. Metadata about the QA question dimension. */
      qaQuestionDimensionMetadata?: GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata;
    }
    interface GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata {
      /** Optional. The agent's name */
      agentDisplayName?: string;
      /** Optional. A user-specified string representing the agent. */
      agentId?: string;
      /** Optional. A user-specified string representing the agent's team. */
      agentTeam?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata {
      /** The issue display name. */
      issueDisplayName?: string;
      /** The issue ID. */
      issueId?: string;
      /** The parent issue model ID. */
      issueModelId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata {
      /** Optional. The full body of the question. */
      answerValue?: string;
      /** Optional. The QA question ID. */
      qaQuestionId?: string;
      /** Optional. The QA scorecard ID. */
      qaScorecardId?: string;
      /** Optional. The full body of the question. */
      questionBody?: string;
    }
    interface GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata {
      /** Optional. The QA question ID. */
      qaQuestionId?: string;
      /** Optional. The QA scorecard ID. */
      qaScorecardId?: string;
      /** Optional. The full body of the question. */
      questionBody?: string;
    }
    interface GoogleCloudContactcenterinsightsV1EncryptionSpec {
      /** Required. The name of customer-managed encryption key that is used to secure a resource and its sub-resources. If empty, the resource is secured by our default encryption key. Only the key in the same location as this resource is allowed to be used for encryption. Format: `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}` */
      kmsKey?: string;
      /** Immutable. The resource name of the encryption key specification resource. Format: projects/{project}/locations/{location}/encryptionSpec */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1Entity {
      /** The representative name for the entity. */
      displayName?: string;
      /** Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below. */
      metadata?: {[P in string]: string};
      /** The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient. */
      salience?: number;
      /** The aggregate sentiment expressed for this entity in the conversation. */
      sentiment?: GoogleCloudContactcenterinsightsV1SentimentData;
      /** The entity type. */
      type?: string;
    }
    interface GoogleCloudContactcenterinsightsV1EntityMentionData {
      /** The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to. */
      entityUniqueId?: string;
      /** Sentiment expressed for this mention of the entity. */
      sentiment?: GoogleCloudContactcenterinsightsV1SentimentData;
      /** The type of the entity mention. */
      type?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ExactMatchConfig {
      /** Whether to consider case sensitivity when performing an exact match. */
      caseSensitive?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata {
      /** The number of conversations that were exported successfully. */
      completedExportCount?: number;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The number of conversations that failed to be exported. */
      failedExportCount?: number;
      /** Partial errors during export operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** The original request for export. */
      request?: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest;
    }
    interface GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest {
      /** Specified if sink is a BigQuery table. */
      bigQueryDestination?: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination;
      /** Optional. Version of the export schema. */
      exportSchemaVersion?: string;
      /** A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties. */
      filter?: string;
      /** A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version} */
      kmsKey?: string;
      /** Required. The parent resource to export data from. */
      parent?: string;
      /** Options for what to do if the destination table already exists. */
      writeDisposition?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination {
      /** Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error. */
      dataset?: string;
      /** A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used. */
      projectId?: string;
      /** The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error. */
      table?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse {}
    interface GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The original export request. */
      request?: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1ExportIssueModelRequest {
      /** Google Cloud Storage URI to export the issue model to. */
      gcsDestination?: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination;
      /** Required. The issue model to export. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination {
      /** Required. Format: `gs:///` */
      objectUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ExportIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1FaqAnswerData {
      /** The piece of text from the `source` knowledge base document. */
      answer?: string;
      /** The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the FAQ answer and the document that it originates from. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The corresponding FAQ question. */
      question?: string;
      /** The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}. */
      source?: string;
    }
    interface GoogleCloudContactcenterinsightsV1FeedbackLabel {
      /** Output only. Create time of the label. */
      createTime?: string;
      /** String label used for Topic Modeling. */
      label?: string;
      /** Name of the resource to be labeled. Supported resources are: * `projects/{project}/locations/{location}/qaScorecards/{scorecard}/revisions/{revision}/qaQuestions/{question}` * `projects/{project}/locations/{location}/issueModels/{issue_model}` * `projects/{project}/locations/{location}/generators/{generator_id}` */
      labeledResource?: string;
      /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
      name?: string;
      /** QaAnswer label used for Quality AI example conversations. */
      qaAnswerLabel?: GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue;
      /** Output only. Update time of the label. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest {}
    interface GoogleCloudContactcenterinsightsV1GcsSource {
      /** Cloud Storage URI that points to a file that contains the conversation audio. */
      audioUri?: string;
      /** Immutable. Cloud Storage URI that points to a file that contains the conversation transcript. */
      transcriptUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1HoldData {}
    interface GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata {
      /** The time the operation was created. */
      createTime?: string;
      /** The time the operation finished running. */
      endTime?: string;
      /** The original import request. */
      request?: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1ImportIssueModelRequest {
      /** Optional. If set to true, will create an issue model from the imported file with randomly generated IDs for the issue model and corresponding issues. Otherwise, replaces an existing model with the same ID as the file. */
      createNewModel?: boolean;
      /** Google Cloud Storage source message. */
      gcsSource?: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource;
      /** Required. The parent resource of the issue model. */
      parent?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource {
      /** Required. Format: `gs:///` */
      objectUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ImportIssueModelResponse {
      /** The issue model that was imported. */
      issueModel?: GoogleCloudContactcenterinsightsV1IssueModel;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Statistics for IngestConversations operation. */
      ingestConversationsStats?: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats;
      /** Output only. Partial errors during ingest operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for ingest. */
      request?: GoogleCloudContactcenterinsightsV1IngestConversationsRequest;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats {
      /** Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested. */
      duplicatesSkippedCount?: number;
      /** Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field. */
      failedIngestCount?: number;
      /** Output only. The number of objects processed during the ingest operation. */
      processedObjectCount?: number;
      /** Output only. The number of new conversations added during this ingest operation. */
      successfulIngestCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsRequest {
      /** Configuration that applies to all conversations. */
      conversationConfig?: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig;
      /** A cloud storage bucket source. Note that any previously ingested objects from the source will be skipped to avoid duplication. */
      gcsSource?: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource;
      /** Required. The parent resource for new conversations. */
      parent?: string;
      /** Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings. */
      redactionConfig?: GoogleCloudContactcenterinsightsV1RedactionConfig;
      /** Optional. If set, this fields indicates the number of objects to ingest from the Cloud Storage bucket. If empty, the entire bucket will be ingested. Unless they are first deleted, conversations produced through sampling won't be ingested by subsequent ingest requests. */
      sampleSize?: number;
      /** Optional. Default Speech-to-Text configuration. Optional, will default to the config specified in Settings. */
      speechConfig?: GoogleCloudContactcenterinsightsV1SpeechConfig;
      /** Configuration for when `source` contains conversation transcripts. */
      transcriptObjectConfig?: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig {
      /** Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed. */
      agentChannel?: number;
      /** Optional. An opaque, user-specified string representing a human agent who handled all conversations in the import. Note that this will be overridden if per-conversation metadata is provided through the `metadata_bucket_uri`. */
      agentId?: string;
      /** Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed. */
      customerChannel?: number;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource {
      /** Optional. The Cloud Storage path to the conversation audio file if already transcribed. Note that: [1] Don't set this field if the audio is not transcribed. [2] Audio files and transcript files must be in separate buckets / folders. [3] A source file and its corresponding audio file must share the same name to be properly ingested, E.g. `gs://bucket/transcript/conversation1.json` and `gs://bucket/audio/conversation1.mp3`. */
      audioBucketUri?: string;
      /** Optional. Specifies the type of the objects in `bucket_uri`. */
      bucketObjectType?: string;
      /** Required. The Cloud Storage bucket containing source objects. */
      bucketUri?: string;
      /** Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 100 labels per conversation. */
      customMetadataKeys?: string[];
      /** Optional. The Cloud Storage path to the conversation metadata. Note that: [1] Metadata files are expected to be in JSON format. [2] Metadata and source files (transcripts or audio) must be in separate buckets / folders. [3] A source file and its corresponding metadata file must share the same name to be properly ingested, E.g. `gs://bucket/audio/conversation1.mp3` and `gs://bucket/metadata/conversation1.json`. */
      metadataBucketUri?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig {
      /** Required. The medium transcript objects represent. */
      medium?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IngestConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Partial errors during initializing operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for initialization. */
      request?: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest;
    }
    interface GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest {
      /** Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same key will be used for all provisioned resources, if encryption is available. If the `kms_key_name` field is left empty, no encryption will be enforced. */
      encryptionSpec?: GoogleCloudContactcenterinsightsV1EncryptionSpec;
    }
    interface GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse {}
    interface GoogleCloudContactcenterinsightsV1Intent {
      /** The human-readable name of the intent. */
      displayName?: string;
      /** The unique identifier of the intent. */
      id?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IntentMatchData {
      /** The id of the matched intent. Can be used to retrieve the corresponding intent information. */
      intentUniqueId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1InterruptionData {}
    interface GoogleCloudContactcenterinsightsV1Issue {
      /** Output only. The time at which this issue was created. */
      createTime?: string;
      /** Representative description of the issue. */
      displayDescription?: string;
      /** The representative name for the issue. */
      displayName?: string;
      /** Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
      name?: string;
      /** Output only. Resource names of the sample representative utterances that match to this issue. */
      sampleUtterances?: string[];
      /** Output only. The most recent time that this issue was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IssueAssignment {
      /** Immutable. Display name of the assigned issue. This field is set at time of analysis and immutable since then. */
      displayName?: string;
      /** Resource name of the assigned issue. */
      issue?: string;
      /** Score indicating the likelihood of the issue assignment. currently bounded on [0,1]. */
      score?: number;
    }
    interface GoogleCloudContactcenterinsightsV1IssueMatchData {
      /** Information about the issue's assignment. */
      issueAssignment?: GoogleCloudContactcenterinsightsV1IssueAssignment;
    }
    interface GoogleCloudContactcenterinsightsV1IssueModel {
      /** Output only. The time at which this issue model was created. */
      createTime?: string;
      /** The representative name for the issue model. */
      displayName?: string;
      /** Configs for the input data that used to create the issue model. */
      inputDataConfig?: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig;
      /** Output only. Number of issues in this issue model. */
      issueCount?: string;
      /** Language of the model. */
      languageCode?: string;
      /** Type of the model. */
      modelType?: string;
      /** Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
      name?: string;
      /** Output only. State of the model. */
      state?: string;
      /** Output only. Immutable. The issue model's label statistics on its training data. */
      trainingStats?: GoogleCloudContactcenterinsightsV1IssueModelLabelStats;
      /** Output only. The most recent time at which the issue model was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig {
      /** A filter to reduce the conversations used for training the model to a specific subset. Refer to https://cloud.google.com/contact-center/insights/docs/filtering for details. */
      filter?: string;
      /** Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`. */
      medium?: string;
      /** Output only. Number of conversations used in training. Output only. */
      trainingConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IssueModelLabelStats {
      /** Number of conversations the issue model has analyzed at this point in time. */
      analyzedConversationsCount?: string;
      /** Statistics on each issue. Key is the issue's resource name. */
      issueStats?: {
        [P in string]: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats;
      };
      /** Number of analyzed conversations for which no issue was applicable at this point in time. */
      unclassifiedConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats {
      /** Display name of the issue. */
      displayName?: string;
      /** Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
      issue?: string;
      /** Number of conversations attached to the issue at this point in time. */
      labeledConversationsCount?: string;
    }
    interface GoogleCloudContactcenterinsightsV1IssueModelResult {
      /** Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
      issueModel?: string;
      /** All the matched issues. */
      issues?: GoogleCloudContactcenterinsightsV1IssueAssignment[];
    }
    interface GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse {
      /** The feedback labels that match the request. */
      feedbackLabels?: GoogleCloudContactcenterinsightsV1FeedbackLabel[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAnalysesResponse {
      /** The analyses that match the request. */
      analyses?: GoogleCloudContactcenterinsightsV1Analysis[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse {
      /** The analysis_rule that match the request. */
      analysisRules?: GoogleCloudContactcenterinsightsV1AnalysisRule[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse {
      /** The assessment rules that match the request. */
      assessmentRules?: GoogleCloudContactcenterinsightsV1AssessmentRule[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAssessmentsResponse {
      /** The assessments that match the request. */
      assessments?: GoogleCloudContactcenterinsightsV1Assessment[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse {
      /** The AuthorizedViewSets under the parent. */
      authorizedViewSets?: GoogleCloudContactcenterinsightsV1AuthorizedViewSet[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse {
      /** The AuthorizedViews under the parent. */
      authorizedViews?: GoogleCloudContactcenterinsightsV1AuthorizedView[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListConversationsResponse {
      /** The conversations that match the request. */
      conversations?: GoogleCloudContactcenterinsightsV1Conversation[];
      /** A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse {
      /** The feedback labels that match the request. */
      feedbackLabels?: GoogleCloudContactcenterinsightsV1FeedbackLabel[];
      /** The next page token. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ListIssueModelsResponse {
      /** The issue models that match the request. */
      issueModels?: GoogleCloudContactcenterinsightsV1IssueModel[];
    }
    interface GoogleCloudContactcenterinsightsV1ListIssuesResponse {
      /** The issues that match the request. */
      issues?: GoogleCloudContactcenterinsightsV1Issue[];
    }
    interface GoogleCloudContactcenterinsightsV1ListNotesResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The notes that match the request. */
      notes?: GoogleCloudContactcenterinsightsV1Note[];
    }
    interface GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The phrase matchers that match the request. */
      phraseMatchers?: GoogleCloudContactcenterinsightsV1PhraseMatcher[];
    }
    interface GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The QaQuestions under the parent. */
      qaQuestions?: GoogleCloudContactcenterinsightsV1QaQuestion[];
    }
    interface GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The parent resource of the questions. */
      qaQuestionTags?: GoogleCloudContactcenterinsightsV1QaQuestionTag[];
    }
    interface GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The QaScorecards under the parent. */
      qaScorecardRevisions?: GoogleCloudContactcenterinsightsV1QaScorecardRevision[];
    }
    interface GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The QaScorecards under the parent. */
      qaScorecards?: GoogleCloudContactcenterinsightsV1QaScorecard[];
    }
    interface GoogleCloudContactcenterinsightsV1ListViewsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The views that match the request. */
      views?: GoogleCloudContactcenterinsightsV1View[];
    }
    interface GoogleCloudContactcenterinsightsV1Note {
      /** The note is associated to the entire parent assessment. */
      assessmentNote?: any;
      /** The note content. */
      content?: string;
      /** The note is associated with a conversation turn. */
      conversationTurnNote?: GoogleCloudContactcenterinsightsV1NoteConversationTurnNote;
      /** Output only. The time at which the note was created. */
      createTime?: string;
      /** Identifier. The resource name of the note. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note} */
      name?: string;
      /** Output only. The user that created the note. */
      noteCreator?: GoogleCloudContactcenterinsightsV1UserInfo;
      /** The note is associated with a QA question in one of the conversation's scorecard results. */
      qaQuestionNote?: GoogleCloudContactcenterinsightsV1NoteQaQuestionNote;
      /** Output only. The time at which the note was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1NoteAssessmentNote {}
    interface GoogleCloudContactcenterinsightsV1NoteConversationTurnNote {
      /** The conversation turn index that the note is associated with. */
      turnIndex?: number;
    }
    interface GoogleCloudContactcenterinsightsV1NoteQaQuestionNote {
      /** The question resource that the note is associated with. */
      qaQuestion?: string;
    }
    interface GoogleCloudContactcenterinsightsV1PhraseMatchData {
      /** The human-readable name of the phrase matcher. */
      displayName?: string;
      /** The unique identifier (the resource name) of the phrase matcher. */
      phraseMatcher?: string;
    }
    interface GoogleCloudContactcenterinsightsV1PhraseMatcher {
      /** Output only. The most recent time at which the activation status was updated. */
      activationUpdateTime?: string;
      /** Applies the phrase matcher only when it is active. */
      active?: boolean;
      /** The human-readable name of the phrase matcher. */
      displayName?: string;
      /** The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher} */
      name?: string;
      /** A list of phase match rule groups that are included in this matcher. */
      phraseMatchRuleGroups?: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup[];
      /** Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added. */
      revisionCreateTime?: string;
      /** Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567 */
      revisionId?: string;
      /** The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript. */
      roleMatch?: string;
      /** Required. The type of this phrase matcher. */
      type?: string;
      /** Output only. The most recent time at which the phrase matcher was updated. */
      updateTime?: string;
      /** The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`. */
      versionTag?: string;
    }
    interface GoogleCloudContactcenterinsightsV1PhraseMatchRule {
      /** Provides additional information about the rule that specifies how to apply the rule. */
      config?: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig;
      /** Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment. */
      negated?: boolean;
      /** Required. The phrase to be matched. */
      query?: string;
    }
    interface GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig {
      /** The configuration for the exact match rule. */
      exactMatchConfig?: GoogleCloudContactcenterinsightsV1ExactMatchConfig;
    }
    interface GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup {
      /** A list of phrase match rules that are included in this group. */
      phraseMatchRules?: GoogleCloudContactcenterinsightsV1PhraseMatchRule[];
      /** Required. The type of this phrase match rule group. */
      type?: string;
    }
    interface GoogleCloudContactcenterinsightsV1PublishAssessmentRequest {}
    interface GoogleCloudContactcenterinsightsV1QaAnswer {
      /** List of all individual answers given to the question. */
      answerSources?: GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource[];
      /** The main answer value, incorporating any manual edits if they exist. */
      answerValue?: GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue;
      /** The conversation the answer applies to. */
      conversation?: string;
      /** The QaQuestion answered by this answer. */
      qaQuestion?: string;
      /** Question text. E.g., "Did the agent greet the customer?" */
      questionBody?: string;
      /** User-defined list of arbitrary tags. Matches the value from QaScorecard.ScorecardQuestion.tags. Used for grouping/organization and for weighting the score of each answer. */
      tags?: string[];
    }
    interface GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource {
      /** The answer value from this source. */
      answerValue?: GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue;
      /** What created the answer. */
      sourceType?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue {
      /** Boolean value. */
      boolValue?: boolean;
      /** A short string used as an identifier. Matches the value used in QaQuestion.AnswerChoice.key. */
      key?: string;
      /** A value of "Not Applicable (N/A)". Should only ever be `true`. */
      naValue?: boolean;
      /** Output only. Normalized score of the questions. Calculated as score / potential_score. */
      normalizedScore?: number;
      /** Numerical value. */
      numValue?: number;
      /** Output only. The maximum potential score of the question. */
      potentialScore?: number;
      /** Output only. Numerical score of the answer. */
      score?: number;
      /** String value. */
      strValue?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaQuestion {
      /** Short, descriptive string, used in the UI where it's not practical to display the full question body. E.g., "Greeting". */
      abbreviation?: string;
      /** A list of valid answers to the question, which the LLM must choose from. */
      answerChoices?: GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice[];
      /** Instructions describing how to determine the answer. */
      answerInstructions?: string;
      /** Output only. The time at which this question was created. */
      createTime?: string;
      /** Metrics of the underlying tuned LLM over a holdout/test set while fine tuning the underlying LLM for the given question. This field will only be populated if and only if the question is part of a scorecard revision that has been tuned. */
      metrics?: GoogleCloudContactcenterinsightsV1QaQuestionMetrics;
      /** Identifier. The resource name of the question. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}/qaQuestions/{qa_question} */
      name?: string;
      /** Defines the order of the question within its parent scorecard revision. */
      order?: number;
      /** Question text. E.g., "Did the agent greet the customer?" */
      questionBody?: string;
      /** Questions are tagged for categorization and scoring. Tags can either be: - Default Tags: These are predefined categories. They are identified by their string value (e.g., "BUSINESS", "COMPLIANCE", and "CUSTOMER"). - Custom Tags: These are user-defined categories. They are identified by their full resource name (e.g., projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag}). Both default and custom tags are used to group questions and to influence the scoring of each question. */
      tags?: string[];
      /** Metadata about the tuning operation for the question.This field will only be populated if and only if the question is part of a scorecard revision that has been tuned. */
      tuningMetadata?: GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata;
      /** Output only. The most recent time at which the question was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice {
      /** Boolean value. */
      boolValue?: boolean;
      /** A short string used as an identifier. */
      key?: string;
      /** A value of "Not Applicable (N/A)". If provided, this field may only be set to `true`. If a question receives this answer, it will be excluded from any score calculations. */
      naValue?: boolean;
      /** Numerical value. */
      numValue?: number;
      /** Numerical score of the answer, used for generating the overall score of a QaScorecardResult. If the answer uses na_value, this field is unused. */
      score?: number;
      /** String value. */
      strValue?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaQuestionMetrics {
      /** Output only. Accuracy of the model. Measures the percentage of correct answers the model gave on the test set. */
      accuracy?: number;
    }
    interface GoogleCloudContactcenterinsightsV1QaQuestionTag {
      /** Output only. The time at which the question tag was created. */
      createTime?: string;
      /** Required. A user-specified display name for the tag. */
      displayName?: string;
      /** Identifier. Resource name for the QaQuestionTag Format projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag} In the above format, the last segment, i.e., qa_question_tag, is a server-generated ID corresponding to the tag resource. */
      name?: string;
      /** Optional. The list of Scorecard Question IDs that the tag applies to. Each QaQuestionId is represented as a full resource name containing the Question ID. Lastly, Since a tag may not necessarily be referenced by any Scorecard Questions, we treat this field as optional. */
      qaQuestionIds?: string[];
      /** Output only. The most recent time at which the question tag was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata {
      /** A list of any applicable data validation warnings about the question's feedback labels. */
      datasetValidationWarnings?: string[];
      /** Total number of valid labels provided for the question at the time of tuining. */
      totalValidLabelCount?: string;
      /** Error status of the tuning operation for the question. Will only be set if the tuning operation failed. */
      tuningError?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaScorecard {
      /** Output only. The time at which this scorecard was created. */
      createTime?: string;
      /** A text description explaining the intent of the scorecard. */
      description?: string;
      /** The user-specified display name of the scorecard. */
      displayName?: string;
      /** Identifier. The scorecard name. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard} */
      name?: string;
      /** Output only. The most recent time at which the scorecard was updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaScorecardResult {
      /** ID of the agent that handled the conversation. */
      agentId?: string;
      /** The conversation scored by this result. */
      conversation?: string;
      /** Output only. The timestamp that the revision was created. */
      createTime?: string;
      /** Identifier. The name of the scorecard result. Format: projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result} */
      name?: string;
      /** The normalized score, which is the score divided by the potential score. Any manual edits are included if they exist. */
      normalizedScore?: number;
      /** The maximum potential overall score of the scorecard. Any questions answered using `na_value` are excluded from this calculation. */
      potentialScore?: number;
      /** Set of QaAnswers represented in the result. */
      qaAnswers?: GoogleCloudContactcenterinsightsV1QaAnswer[];
      /** The QaScorecardRevision scored by this result. */
      qaScorecardRevision?: string;
      /** Collection of tags and their scores. */
      qaTagResults?: GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult[];
      /** The overall numerical score of the result, incorporating any manual edits if they exist. */
      score?: number;
      /** List of all individual score sets. */
      scoreSources?: GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource[];
    }
    interface GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult {
      /** The normalized score the tag applies to. */
      normalizedScore?: number;
      /** The potential score the tag applies to. */
      potentialScore?: number;
      /** The score the tag applies to. */
      score?: number;
      /** The tag the score applies to. */
      tag?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource {
      /** The normalized score, which is the score divided by the potential score. */
      normalizedScore?: number;
      /** The maximum potential overall score of the scorecard. Any questions answered using `na_value` are excluded from this calculation. */
      potentialScore?: number;
      /** Collection of tags and their scores. */
      qaTagResults?: GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult[];
      /** The overall numerical score of the result. */
      score?: number;
      /** What created the score. */
      sourceType?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QaScorecardRevision {
      /** Output only. Alternative IDs for this revision of the scorecard, e.g., `latest`. */
      alternateIds?: string[];
      /** Output only. The timestamp that the revision was created. */
      createTime?: string;
      /** Identifier. The name of the scorecard revision. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision} */
      name?: string;
      /** The snapshot of the scorecard at the time of this revision's creation. */
      snapshot?: GoogleCloudContactcenterinsightsV1QaScorecard;
      /** Output only. State of the scorecard revision, indicating whether it's ready to be used in analysis. */
      state?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryInterval {
      /** Required. The end time of the time window. */
      endTime?: string;
      /** Required. The start time of the time window. */
      startTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsMetadata {
      /** Whether the result rows were truncated because the result row size is too large to materialize. */
      resultIsTruncated?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsRequest {
      /** The dimensions that determine the grouping key for the query. Defaults to no dimension if this field is unspecified. If a dimension is specified, its key must also be specified. Each dimension's key must be unique. If a time granularity is also specified, metric values in the dimension will be bucketed by this granularity. Up to one dimension is supported for now. */
      dimensions?: GoogleCloudContactcenterinsightsV1Dimension[];
      /** Required. Filter to select a subset of conversations to compute the metrics. Must specify a window of the conversation create time to compute the metrics. The returned metrics will be from the range [DATE(starting create time), DATE(ending create time)). */
      filter?: string;
      /** Measures to return. Defaults to all measures if this field is unspecified. A valid mask should traverse from the `measure` field from the response. For example, a path from a measure mask to get the conversation count is "conversation_measure.count". */
      measureMask?: string;
      /** The time granularity of each data point in the time series. Defaults to NONE if this field is unspecified. */
      timeGranularity?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponse {
      /** Required. The location of the data. "projects/{project}/locations/{location}" */
      location?: string;
      /** The macro average slice contains aggregated averages across the selected dimension. i.e. if group_by agent is specified this field will contain the average across all agents. This field is only populated if the request specifies a Dimension. */
      macroAverageSlice?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice;
      /** A slice contains a total and (if the request specified a time granularity) a time series of metric values. Each slice contains a unique combination of the cardinality of dimensions from the request. */
      slices?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice[];
      /** The metrics last update time. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice {
      /** A unique combination of dimensions that this slice represents. */
      dimensions?: GoogleCloudContactcenterinsightsV1Dimension[];
      /** A time series of metric values. This is only populated if the request specifies a time granularity other than NONE. */
      timeSeries?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries;
      /** The total metric value. The interval of this data point is [starting create time, ending create time) from the request. */
      total?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint {
      /** The measure related to conversations. */
      conversationMeasure?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure;
      /** The interval that this data point represents. * If this is the total data point, the interval is [starting create time, ending create time) from the request. * If this a data point from the time series, the interval is [time, time + time granularity from the request). */
      interval?: GoogleTypeInterval;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure {
      /** The average agent's sentiment score. */
      averageAgentSentimentScore?: number;
      /** The average client's sentiment score. */
      averageClientSentimentScore?: number;
      /** The average customer satisfaction rating. */
      averageCustomerSatisfactionRating?: number;
      /** The average duration. */
      averageDuration?: string;
      /** Average QA normalized score. Will exclude 0's in average calculation. */
      averageQaNormalizedScore?: number;
      /** Average QA normalized score averaged for questions averaged across all revisions of the parent scorecard. Will be only populated if the request specifies a dimension of QA_QUESTION_ID. */
      averageQaQuestionNormalizedScore?: number;
      /** The average silence percentage. */
      averageSilencePercentage?: number;
      /** The average turn count. */
      averageTurnCount?: number;
      /** The conversation count. */
      conversationCount?: number;
      /** Average QA normalized score for all the tags. */
      qaTagScores?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore[];
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore {
      /** Average tag normalized score per tag. */
      averageTagNormalizedScore?: number;
      /** Tag name. */
      tag?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries {
      /** The data points that make up the time series . */
      dataPoints?: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint[];
    }
    interface GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewMetadata {}
    interface GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest {
      /** Conversations are from a single agent. */
      agentPerformanceSource?: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequestAgentSource;
      /** The time window of the conversations to compare the performance to. */
      comparisonQueryInterval?: GoogleCloudContactcenterinsightsV1QueryInterval;
      /** Optional. Filter to select a subset of conversations to compute the performance overview. Supports the same filters as the filter field in QueryMetricsRequest. The source and query interval/comparison query interval should not be included here. */
      filter?: string;
      /** Required. The time window of the conversations to derive performance stats from. */
      queryInterval?: GoogleCloudContactcenterinsightsV1QueryInterval;
    }
    interface GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequestAgentSource {
      /** Required. Agent id to query performance overview for. */
      agentId?: string;
    }
    interface GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewResponse {
      /** The summary text of the performance. */
      summaryText?: string;
    }
    interface GoogleCloudContactcenterinsightsV1RedactionConfig {
      /** The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}` */
      deidentifyTemplate?: string;
      /** The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}` */
      inspectTemplate?: string;
    }
    interface GoogleCloudContactcenterinsightsV1RuntimeAnnotation {
      /** The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation} */
      annotationId?: string;
      /** The feedback that the customer has about the answer in `data`. */
      answerFeedback?: GoogleCloudContactcenterinsightsV1AnswerFeedback;
      /** Agent Assist Article Suggestion data. */
      articleSuggestion?: GoogleCloudContactcenterinsightsV1ArticleSuggestionData;
      /** Conversation summarization suggestion data. */
      conversationSummarizationSuggestion?: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData;
      /** The time at which this annotation was created. */
      createTime?: string;
      /** Dialogflow interaction data. */
      dialogflowInteraction?: GoogleCloudContactcenterinsightsV1DialogflowInteractionData;
      /** The boundary in the conversation where the annotation ends, inclusive. */
      endBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;
      /** Agent Assist FAQ answer data. */
      faqAnswer?: GoogleCloudContactcenterinsightsV1FaqAnswerData;
      /** Agent Assist Smart Compose suggestion data. */
      smartComposeSuggestion?: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData;
      /** Agent Assist Smart Reply data. */
      smartReply?: GoogleCloudContactcenterinsightsV1SmartReplyData;
      /** The boundary in the conversation where the annotation starts, inclusive. */
      startBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;
      /** Explicit input used for generating the answer */
      userInput?: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput;
    }
    interface GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput {
      /** The resource name of associated generator. Format: `projects//locations//generators/` */
      generatorName?: string;
      /** Query text. Article Search uses this to store the input query used to generate the search results. */
      query?: string;
      /** Query source for the answer. */
      querySource?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SampleConversationsMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Partial errors during sample conversations operation that might cause the operation output to be incomplete. */
      partialErrors?: GoogleRpcStatus[];
      /** Output only. The original request for sample conversations to dataset. */
      request?: GoogleCloudContactcenterinsightsV1SampleConversationsRequest;
      /** Output only. Statistics for SampleConversations operation. */
      sampleConversationsStats?: GoogleCloudContactcenterinsightsV1SampleConversationsMetadataSampleConversationsStats;
    }
    interface GoogleCloudContactcenterinsightsV1SampleConversationsMetadataSampleConversationsStats {
      /** Output only. The number of objects which were unable to be sampled due to errors. The errors are populated in the partial_errors field. */
      failedSampleCount?: number;
      /** Output only. The number of new conversations added during this sample operation. */
      successfulSampleCount?: number;
    }
    interface GoogleCloudContactcenterinsightsV1SampleConversationsRequest {
      /** The dataset resource to copy the sampled conversations to. */
      destinationDataset?: GoogleCloudContactcenterinsightsV1Dataset;
      /** Required. The parent resource of the dataset. */
      parent?: string;
      /** Optional. The sample rule used for sampling conversations. */
      sampleRule?: GoogleCloudContactcenterinsightsV1SampleRule;
    }
    interface GoogleCloudContactcenterinsightsV1SampleConversationsResponse {}
    interface GoogleCloudContactcenterinsightsV1SampleRule {
      /** To specify the filter for the conversions that should apply this sample rule. An empty filter means this sample rule applies to all conversations. */
      conversationFilter?: string;
      /** Optional. Group by dimension to sample the conversation. If no dimension is provided, the sampling will be applied to the project level. Current supported dimensions is 'quality_metadata.agent_info.agent_id'. */
      dimension?: string;
      /** Percentage of conversations that we should sample based on the dimension between [0, 100]. */
      samplePercentage?: number;
      /** Number of the conversations that we should sample based on the dimension. */
      sampleRow?: string;
    }
    interface GoogleCloudContactcenterinsightsV1ScheduleInfo {
      /** End time of the schedule. If not specified, will keep scheduling new pipelines for execution util the schedule is no longer active or deleted. */
      endTime?: string;
      /** The groc expression. Format: `every number [synchronized]` Time units can be: minutes, hours Synchronized is optional and indicates that the schedule should be synchronized to the start of the interval: every 5 minutes synchronized means 00:00, 00:05 ... Otherwise the start time is random within the interval. Example: `every 5 minutes` could be 00:02, 00:07, 00:12, ... */
      schedule?: string;
      /** Start time of the schedule. If not specified, will start as soon as the schedule is created. */
      startTime?: string;
      /** The timezone to use for the groc expression. If not specified, defaults to UTC. */
      timeZone?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse {
      /** The AuthorizedViews under the parent. */
      authorizedViews?: GoogleCloudContactcenterinsightsV1AuthorizedView[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SentimentData {
      /** A non-negative number from 0 to infinity which represents the absolute magnitude of sentiment regardless of score. */
      magnitude?: number;
      /** The sentiment score between -1.0 (negative) and 1.0 (positive). */
      score?: number;
    }
    interface GoogleCloudContactcenterinsightsV1Settings {
      /** Default analysis settings. */
      analysisConfig?: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig;
      /** The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted. */
      conversationTtl?: string;
      /** Output only. The time at which the settings was created. */
      createTime?: string;
      /** A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here. */
      languageCode?: string;
      /** Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings */
      name?: string;
      /** A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "ingest-conversations": Notify each time an IngestConversations LRO is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. * "upload-conversation": Notify when an UploadConversation LRO is complete. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic} */
      pubsubNotificationSettings?: {[P in string]: string};
      /** Default DLP redaction resources to be applied while ingesting conversations. This applies to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversations coming from CCAI Platform. */
      redactionConfig?: GoogleCloudContactcenterinsightsV1RedactionConfig;
      /** Optional. Default Speech-to-Text resources to use while ingesting audio files. Optional, CCAI Insights will create a default if not provided. This applies to conversations ingested from the `UploadConversation` and `IngestConversations` endpoints, including conversations coming from CCAI Platform. */
      speechConfig?: GoogleCloudContactcenterinsightsV1SpeechConfig;
      /** Output only. The time at which the settings were last updated. */
      updateTime?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig {
      /** To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run. */
      annotatorSelector?: GoogleCloudContactcenterinsightsV1AnnotatorSelector;
      /** Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100]. */
      runtimeIntegrationAnalysisPercentage?: number;
      /** Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100]. */
      uploadConversationAnalysisPercentage?: number;
    }
    interface GoogleCloudContactcenterinsightsV1SilenceData {}
    interface GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData {
      /** The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Smart Compose suggestion and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The content of the suggestion. */
      suggestion?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SmartReplyData {
      /** The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain). */
      confidenceScore?: number;
      /** Map that contains metadata about the Smart Reply and the document from which it originates. */
      metadata?: {[P in string]: string};
      /** The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record} */
      queryRecord?: string;
      /** The content of the reply. */
      reply?: string;
    }
    interface GoogleCloudContactcenterinsightsV1SpeechConfig {
      /** The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}` */
      speechRecognizer?: string;
    }
    interface GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest {
      /** Required. Filter for selecting the feedback labels that needs to be used for training. This filter can be used to limit the feedback labels used for tuning to a feedback labels created or updated for a specific time-window etc. */
      filter?: string;
      /** Optional. Run in validate only mode, no fine tuning will actually run. Data quality validations like training data distributions will run. Even when set to false, the data quality validations will still run but once the validations complete we will proceed with the fine tune, if applicable. */
      validateOnly?: boolean;
    }
    interface GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** The original request for undeployment. */
      request?: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest;
    }
    interface GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest {
      /** Required. The issue model to undeploy. */
      name?: string;
    }
    interface GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse {}
    interface GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest {}
    interface GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagMetadata {
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagRequest;
    }
    interface GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagRequest {
      /** Required. The QaQuestionTag to update. */
      qaQuestionTag?: GoogleCloudContactcenterinsightsV1QaQuestionTag;
      /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `qa_question_tag_name` - the name of the tag * `qa_question_ids` - the list of questions the tag applies to */
      updateMask?: string;
    }
    interface GoogleCloudContactcenterinsightsV1UploadConversationMetadata {
      /** Output only. The operation name for a successfully created analysis operation, if any. */
      analysisOperation?: string;
      /** Output only. The redaction config applied to the uploaded conversation. */
      appliedRedactionConfig?: GoogleCloudContactcenterinsightsV1RedactionConfig;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. The original request. */
      request?: GoogleCloudContactcenterinsightsV1UploadConversationRequest;
    }
    interface GoogleCloudContactcenterinsightsV1UploadConversationRequest {
      /** Required. The conversation resource to create. */
      conversation?: GoogleCloudContactcenterinsightsV1Conversation;
      /** Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-` */
      conversationId?: string;
      /** Required. The parent resource of the conversation. */
      parent?: string;
      /** Optional. DLP settings for transcript redaction. Will default to the config specified in Settings. */
      redactionConfig?: GoogleCloudContactcenterinsightsV1RedactionConfig;
      /** Optional. Speech-to-Text configuration. Will default to the config specified in Settings. */
      speechConfig?: GoogleCloudContactcenterinsightsV1SpeechConfig;
    }
    interface GoogleCloudContactcenterinsightsV1UserInfo {
      /** The user's username. */
      username?: string;
    }
    interface GoogleCloudContactcenterinsightsV1View {
      /** Output only. The time at which this view was created. */
      createTime?: string;
      /** The human-readable display name of the view. */
      displayName?: string;
      /** Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view} */
      name?: string;
      /** Output only. The most recent time at which the view was updated. */
      updateTime?: string;
      /** A filter to reduce conversation results to a specific subset. Refer to https://cloud.google.com/contact-center/insights/docs/filtering for details. */
      value?: string;
    }
    interface GoogleLongrunningListOperationsResponse {
      /** The standard List next-page token. */
      nextPageToken?: string;
      /** A list of operations that matches the specified filter in the request. */
      operations?: GoogleLongrunningOperation[];
    }
    interface GoogleLongrunningOperation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: GoogleRpcStatus;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface GoogleProtobufEmpty {}
    interface GoogleRpcStatus {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface GoogleTypeInterval {
      /** Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end. */
      endTime?: string;
      /** Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start. */
      startTime?: string;
    }
    interface AnalysisRulesResource {
      /** Creates a analysis rule. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the analysis rule. Required. The location to create a analysis rule for. Format: `projects//locations/` or `projects//locations/` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AnalysisRule;
      }): Request<GoogleCloudContactcenterinsightsV1AnalysisRule>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the analysis rule. Required. The location to create a analysis rule for. Format: `projects//locations/` or `projects//locations/` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AnalysisRule,
      ): Request<GoogleCloudContactcenterinsightsV1AnalysisRule>;
      /** Deletes a analysis rule. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis rule to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get a analysis rule. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the AnalysisRule to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1AnalysisRule>;
      /** Lists analysis rules. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of analysis rule to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAnalysisRulesResponse`; indicates that this is a continuation of a prior `ListAnalysisRules` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the analysis rules. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse>;
      /** Updates a analysis rule. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the analysis rule. Format: projects/{project}/locations/{location}/analysisRules/{analysis_rule} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. If the update_mask is not provided, the update will be applied to all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AnalysisRule;
      }): Request<GoogleCloudContactcenterinsightsV1AnalysisRule>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the analysis rule. Format: projects/{project}/locations/{location}/analysisRules/{analysis_rule} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. If the update_mask is not provided, the update will be applied to all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AnalysisRule,
      ): Request<GoogleCloudContactcenterinsightsV1AnalysisRule>;
    }
    interface AssessmentRulesResource {
      /** Creates an assessment rule. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. A unique ID for the new AssessmentRule. This ID will become the final component of the AssessmentRule's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. */
        assessmentRuleId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the assessment rule. Required. The location to create a assessment rule for. Format: `projects//locations/` or `projects//locations/` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AssessmentRule;
      }): Request<GoogleCloudContactcenterinsightsV1AssessmentRule>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. A unique ID for the new AssessmentRule. This ID will become the final component of the AssessmentRule's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. */
          assessmentRuleId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the assessment rule. Required. The location to create a assessment rule for. Format: `projects//locations/` or `projects//locations/` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AssessmentRule,
      ): Request<GoogleCloudContactcenterinsightsV1AssessmentRule>;
      /** Deletes an assessment rule. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment rule to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get an assessment rule. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment rule to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1AssessmentRule>;
      /** Lists assessment rules. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of assessment rule to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAssessmentRulesResponse`; indicates that this is a continuation of a prior `ListAssessmentRules` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the assessment rules. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse>;
      /** Updates an assessment rule. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the assessment rule. Format: projects/{project}/locations/{location}/assessmentRules/{assessment_rule} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. If the update_mask is not provided, the update will be applied to all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AssessmentRule;
      }): Request<GoogleCloudContactcenterinsightsV1AssessmentRule>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the assessment rule. Format: projects/{project}/locations/{location}/assessmentRules/{assessment_rule} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. If the update_mask is not provided, the update will be applied to all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AssessmentRule,
      ): Request<GoogleCloudContactcenterinsightsV1AssessmentRule>;
    }
    interface AnalysesResource {
      /** Creates an analysis. The long running operation is done when the analysis has completed. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the analysis. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Analysis;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the analysis. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Analysis,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes an analysis. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets an analysis. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Analysis>;
      /** Lists analyses. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the analyses. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAnalysesResponse>;
    }
    interface NotesResource {
      /** Create Note. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the note. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Note;
      }): Request<GoogleCloudContactcenterinsightsV1Note>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the note. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Note,
      ): Request<GoogleCloudContactcenterinsightsV1Note>;
      /** Deletes a Note. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the note to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** List Notes. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of notes to return in the response. If zero the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListNotesResponse`. This value indicates that this is a continuation of a prior `ListNotes` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the notes. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListNotesResponse>;
      /** Update Note. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the note. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. If the update_mask is empty, all updateable fields will be updated. Acceptable fields include: * `content` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Note;
      }): Request<GoogleCloudContactcenterinsightsV1Note>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the note. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. If the update_mask is empty, all updateable fields will be updated. Acceptable fields include: * `content` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Note,
      ): Request<GoogleCloudContactcenterinsightsV1Note>;
    }
    interface AssessmentsResource {
      /** Appeal an Assessment. */
      appeal(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to appeal. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AppealAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      appeal(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to appeal. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AppealAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Create Assessment. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the assessment. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Assessment;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the assessment. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Assessment,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Delete an Assessment. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all of this assessment's notes will also be deleted. Otherwise, the request will only succeed if it has no notes. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Finalize an Assessment. */
      finalize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to finalize. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      finalize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to finalize. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Get Assessment. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** List Assessments. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supported filters include: * `state` - The state of the assessment * `agent_info.agent_id` - The ID of the agent the assessment is for */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of assessments to list. If zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAssessmentRulesResponse`; indicates that this is a continuation of a prior `ListAssessmentRules` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the assessments. To list all assessments in a location, substitute the conversation ID with a '-' character. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAssessmentsResponse>;
      /** Publish an Assessment. */
      publish(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to publish. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1PublishAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      publish(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to publish. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1PublishAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      notes: NotesResource;
    }
    interface FeedbackLabelsResource {
      /** Create feedback label. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
        feedbackLabelId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the feedback label. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
          feedbackLabelId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the feedback label. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** Delete feedback label. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get feedback label. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** List feedback labels. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Automatically sorts by conversation ID. To sort by all feedback labels in a project see ListAllFeedbackLabels. Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of feedback labels to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListFeedbackLabelsResponse`. This value indicates that this is a continuation of a prior `ListFeedbackLabels` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse>;
      /** Update feedback label. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
    }
    interface ConversationsResource {
      /** Analyzes multiple conversations in a single request. */
      bulkAnalyze(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to create analyses in. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkAnalyze(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to create analyses in. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets conversation statistics. */
      calculateStats(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The location of the conversations. */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>;
      /** Deletes a conversation. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `FULL`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      /** Lists conversations. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc` (`create_time desc`). For more details, see [Google AIPs Ordering](https://google.aip.dev/132#ordering). */
        orderBy?: string;
        /** The maximum number of conversations to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the conversation. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `BASIC`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListConversationsResponse>;
      analyses: AnalysesResource;
      assessments: AssessmentsResource;
      feedbackLabels: FeedbackLabelsResource;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface AuthorizedViewsResource {
      /** Create AuthorizedView */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. A unique ID for the new AuthorizedView. This ID will become the final component of the AuthorizedView's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. See go/aip/122#resource-id-segments */
        authorizedViewId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the AuthorizedView. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AuthorizedView;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedView>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. A unique ID for the new AuthorizedView. This ID will become the final component of the AuthorizedView's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. See go/aip/122#resource-id-segments */
          authorizedViewId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the AuthorizedView. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AuthorizedView,
      ): Request<GoogleCloudContactcenterinsightsV1AuthorizedView>;
      /** Deletes an AuthorizedView. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the AuthorizedView to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get AuthorizedView */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the AuthorizedView to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedView>;
      /** List AuthorizedViewSets */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. The filter expression to filter authorized views listed in the response. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The order by expression to order authorized views listed in the response. */
        orderBy?: string;
        /** Optional. The maximum number of view to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAuthorizedViewsResponse`. This value indicates that this is a continuation of a prior `ListAuthorizedViews` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the AuthorizedViews. If the parent is set to `-`, all AuthorizedViews under the location will be returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse>;
      /** Updates an AuthorizedView. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the AuthorizedView. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set}/authorizedViews/{authorized_view} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `conversation_filter` * `display_name` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AuthorizedView;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedView>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the AuthorizedView. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set}/authorizedViews/{authorized_view} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `conversation_filter` * `display_name` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AuthorizedView,
      ): Request<GoogleCloudContactcenterinsightsV1AuthorizedView>;
      /** Query metrics. */
      queryMetrics(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The location of the data. "projects/{project}/locations/{location}" */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QueryMetricsRequest;
      }): Request<GoogleLongrunningOperation>;
      queryMetrics(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The location of the data. "projects/{project}/locations/{location}" */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QueryMetricsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Generates a summary of predefined performance metrics for a set of conversations. Conversations can be specified by specifying a time window and an agent id, for now. The summary includes a comparison of metrics computed for conversations in the previous time period, and also a comparison with peers in the same time period. */
      queryPerformanceOverview(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the conversations to derive performance stats from. "projects/{project}/locations/{location}" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest;
      }): Request<GoogleLongrunningOperation>;
      queryPerformanceOverview(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the conversations to derive performance stats from. "projects/{project}/locations/{location}" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest,
      ): Request<GoogleLongrunningOperation>;
      /** SearchAuthorizedViewSets */
      search(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The order by expression to order authorized views listed in the response. */
        orderBy?: string;
        /** Optional. The maximum number of view to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAuthorizedViewsResponse`. This value indicates that this is a continuation of a prior `ListAuthorizedViews` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the AuthorizedViews. If the parent is set to `-`, all AuthorizedViews under the location will be returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Optional. The query expression to search authorized views. */
        query?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse>;
      conversations: ConversationsResource;
      operations: OperationsResource;
    }
    interface AuthorizedViewSetsResource {
      /** Create AuthorizedViewSet */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. A unique ID for the new AuthorizedViewSet. This ID will become the final component of the AuthorizedViewSet's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. See go/aip/122#resource-id-segments */
        authorizedViewSetId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the AuthorizedViewSet. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AuthorizedViewSet;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedViewSet>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. A unique ID for the new AuthorizedViewSet. This ID will become the final component of the AuthorizedViewSet's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`. See go/aip/122#resource-id-segments */
          authorizedViewSetId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the AuthorizedViewSet. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AuthorizedViewSet,
      ): Request<GoogleCloudContactcenterinsightsV1AuthorizedViewSet>;
      /** Deletes an AuthorizedViewSet. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all of this AuthorizedViewSet's child resources will also be deleted. Otherwise, the request will only succeed if it has none. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the AuthorizedViewSet to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get AuthorizedViewSet */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the AuthorizedViewSet to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedViewSet>;
      /** List AuthorizedViewSets */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. The filter expression to filter authorized view sets listed in the response. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The order by expression to order authorized view sets listed in the response. */
        orderBy?: string;
        /** Optional. The maximum number of view sets to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAuthorizedViewSetsResponse`. This value indicates that this is a continuation of a prior `ListAuthorizedViewSets` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the AuthorizedViewSets. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse>;
      /** Updates an AuthorizedViewSet. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the AuthorizedViewSet. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `display_name` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AuthorizedViewSet;
      }): Request<GoogleCloudContactcenterinsightsV1AuthorizedViewSet>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the AuthorizedViewSet. Format: projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `display_name` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AuthorizedViewSet,
      ): Request<GoogleCloudContactcenterinsightsV1AuthorizedViewSet>;
      authorizedViews: AuthorizedViewsResource;
    }
    interface AnalysesResource {
      /** Creates an analysis. The long running operation is done when the analysis has completed. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the analysis. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Analysis;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the analysis. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Analysis,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes an analysis. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets an analysis. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Analysis>;
      /** Lists analyses. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the analyses. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAnalysesResponse>;
    }
    interface NotesResource {
      /** Create Note. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the note. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Note;
      }): Request<GoogleCloudContactcenterinsightsV1Note>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the note. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Note,
      ): Request<GoogleCloudContactcenterinsightsV1Note>;
      /** Deletes a Note. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the note to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** List Notes. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of notes to return in the response. If zero the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListNotesResponse`. This value indicates that this is a continuation of a prior `ListNotes` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the notes. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListNotesResponse>;
      /** Update Note. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the note. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. If the update_mask is empty, all updateable fields will be updated. Acceptable fields include: * `content` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Note;
      }): Request<GoogleCloudContactcenterinsightsV1Note>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the note. Format: projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. If the update_mask is empty, all updateable fields will be updated. Acceptable fields include: * `content` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Note,
      ): Request<GoogleCloudContactcenterinsightsV1Note>;
    }
    interface AssessmentsResource {
      /** Appeal an Assessment. */
      appeal(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to appeal. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1AppealAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      appeal(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to appeal. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1AppealAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Create Assessment. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the assessment. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Assessment;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the assessment. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Assessment,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Delete an Assessment. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all of this assessment's notes will also be deleted. Otherwise, the request will only succeed if it has no notes. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Finalize an Assessment. */
      finalize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to finalize. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      finalize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to finalize. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** Get Assessment. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      /** List Assessments. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supported filters include: * `state` - The state of the assessment * `agent_info.agent_id` - The ID of the agent the assessment is for */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of assessments to list. If zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAssessmentRulesResponse`; indicates that this is a continuation of a prior `ListAssessmentRules` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the assessments. To list all assessments in a location, substitute the conversation ID with a '-' character. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAssessmentsResponse>;
      /** Publish an Assessment. */
      publish(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the assessment to publish. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1PublishAssessmentRequest;
      }): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      publish(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the assessment to publish. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1PublishAssessmentRequest,
      ): Request<GoogleCloudContactcenterinsightsV1Assessment>;
      notes: NotesResource;
    }
    interface FeedbackLabelsResource {
      /** Create feedback label. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
        feedbackLabelId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the feedback label. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
          feedbackLabelId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the feedback label. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** Delete feedback label. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get feedback label. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** List feedback labels. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Automatically sorts by conversation ID. To sort by all feedback labels in a project see ListAllFeedbackLabels. Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of feedback labels to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListFeedbackLabelsResponse`. This value indicates that this is a continuation of a prior `ListFeedbackLabels` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse>;
      /** Update feedback label. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
    }
    interface ConversationsResource {
      /** Analyzes multiple conversations in a single request. */
      bulkAnalyze(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to create analyses in. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkAnalyze(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to create analyses in. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes multiple conversations in a single request. */
      bulkDelete(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDelete(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets conversation statistics. */
      calculateStats(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The location of the conversations. */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>;
      /** Creates a conversation. Note that this method does not support audio transcription or redaction. Use `conversations.upload` instead. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-` */
        conversationId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the conversation. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Conversation;
      }): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-` */
          conversationId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the conversation. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Conversation,
      ): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      /** Deletes a conversation. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `FULL`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      /** Imports conversations and processes them according to the user's configuration. */
      ingest(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new conversations. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1IngestConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      ingest(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new conversations. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1IngestConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Lists conversations. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc` (`create_time desc`). For more details, see [Google AIPs Ordering](https://google.aip.dev/132#ordering). */
        orderBy?: string;
        /** The maximum number of conversations to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the conversation. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `BASIC`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListConversationsResponse>;
      /** Updates a conversation. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `agent_id` * `language_code` * `labels` * `metadata` * `quality_metadata` * `call_metadata` * `start_time` * `expire_time` or `ttl` * `data_source.gcs_source.audio_uri` or `data_source.dialogflow_source.audio_uri` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Conversation;
      }): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `agent_id` * `language_code` * `labels` * `metadata` * `quality_metadata` * `call_metadata` * `start_time` * `expire_time` or `ttl` * `data_source.gcs_source.audio_uri` or `data_source.dialogflow_source.audio_uri` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Conversation,
      ): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      /** Create a long-running conversation upload operation. This method differs from `CreateConversation` by allowing audio transcription and optional DLP redaction. */
      upload(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the conversation. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1UploadConversationRequest;
      }): Request<GoogleLongrunningOperation>;
      upload(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the conversation. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1UploadConversationRequest,
      ): Request<GoogleLongrunningOperation>;
      analyses: AnalysesResource;
      assessments: AssessmentsResource;
      feedbackLabels: FeedbackLabelsResource;
    }
    interface AnalysesResource {
      /** Creates an analysis. The long running operation is done when the analysis has completed. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the analysis. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Analysis;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the analysis. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Analysis,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes an analysis. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets an analysis. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the analysis to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Analysis>;
      /** Lists analyses. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the analyses. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAnalysesResponse>;
    }
    interface FeedbackLabelsResource {
      /** Create feedback label. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
        feedbackLabelId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the feedback label. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID of the feedback label to create. If one is not specified it will be generated by the server. */
          feedbackLabelId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the feedback label. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** Delete feedback label. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get feedback label. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the feedback label to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      /** List feedback labels. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Automatically sorts by conversation ID. To sort by all feedback labels in a project see ListAllFeedbackLabels. Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of feedback labels to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListFeedbackLabelsResponse`. This value indicates that this is a continuation of a prior `ListFeedbackLabels` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse>;
      /** Update feedback label. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1FeedbackLabel;
      }): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Resource name of the FeedbackLabel. Format: projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1FeedbackLabel,
      ): Request<GoogleCloudContactcenterinsightsV1FeedbackLabel>;
    }
    interface ConversationsResource {
      /** Analyzes multiple conversations in a single request. */
      bulkAnalyze(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to create analyses in. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkAnalyze(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to create analyses in. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes multiple conversations in a single request. */
      bulkDelete(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDelete(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location} */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets conversation statistics. */
      calculateStats(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The location of the conversations. */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1CalculateStatsRequest;
      }): Request<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>;
      calculateStats(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The location of the conversations. */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1CalculateStatsRequest,
      ): Request<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>;
      /** Deletes a conversation. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the conversation to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `FULL`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Conversation>;
      /** Imports conversations and processes them according to the user's configuration. */
      ingest(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new conversations. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1IngestConversationsRequest;
      }): Request<GoogleLongrunningOperation>;
      ingest(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new conversations. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1IngestConversationsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Lists conversations. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying conversations with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The attribute by which to order conversations in the response. If empty, conversations will be ordered by descending creation time. Supported values are one of the following: * create_time * customer_satisfaction_rating * duration * latest_analysis * start_time * turn_count The default sort order is ascending. To specify order, append `asc` or `desc` (`create_time desc`). For more details, see [Google AIPs Ordering](https://google.aip.dev/132#ordering). */
        orderBy?: string;
        /** The maximum number of conversations to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the conversation. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The level of details of the conversation. Default is `BASIC`. */
        view?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListConversationsResponse>;
      analyses: AnalysesResource;
      feedbackLabels: FeedbackLabelsResource;
    }
    interface InsightsdataResource {
      /** Export insights data to a destination defined in the request body. */
      export(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to export data from. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest;
      }): Request<GoogleLongrunningOperation>;
      export(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to export data from. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface DatasetsResource {
      /** Delete feedback labels in bulk using a filter. */
      bulkDeleteFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDeleteFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Download feedback labels in bulk from an external source. Currently supports exporting Quality AI example conversations with transcripts and question bodies. */
      bulkDownloadFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDownloadFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Upload feedback labels from an external source in bulk. Currently supports labeling Quality AI example conversations. */
      bulkUploadFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkUploadFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** List all feedback labels by project number. */
      listAllFeedbackLabels(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset in the entire project. Supports disjunctions (OR) and conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of feedback labels to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAllFeedbackLabelsResponse`. This value indicates that this is a continuation of a prior `ListAllFeedbackLabels` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of all feedback labels per project. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse>;
      conversations: ConversationsResource;
      insightsdata: InsightsdataResource;
    }
    interface EncryptionSpecResource {
      /** Initializes a location-level encryption key specification. An error will result if the location has resources already created before the initialization. After the encryption specification is initialized at a location, it is immutable and all newly created resources under the location will be encrypted with the existing specification. */
      initialize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the encryption key specification resource. Format: projects/{project}/locations/{location}/encryptionSpec */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest;
      }): Request<GoogleLongrunningOperation>;
      initialize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the encryption key specification resource. Format: projects/{project}/locations/{location}/encryptionSpec */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface InsightsdataResource {
      /** Export insights data to a destination defined in the request body. */
      export(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource to export data from. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest;
      }): Request<GoogleLongrunningOperation>;
      export(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource to export data from. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface IssuesResource {
      /** Creates an issue. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the issue. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Issue;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the issue. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Issue,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes an issue. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the issue to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets an issue. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the issue to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Issue>;
      /** Lists issues. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the issue. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListIssuesResponse>;
      /** Updates an issue. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Issue;
      }): Request<GoogleCloudContactcenterinsightsV1Issue>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Issue,
      ): Request<GoogleCloudContactcenterinsightsV1Issue>;
    }
    interface IssueModelsResource {
      /** Gets an issue model's statistics. */
      calculateIssueModelStats(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The resource name of the issue model to query against. */
        issueModel: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse>;
      /** Creates an issue model. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the issue model. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1IssueModel;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the issue model. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1IssueModel,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes an issue model. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the issue model to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed. */
      deploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The issue model to deploy. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest;
      }): Request<GoogleLongrunningOperation>;
      deploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The issue model to deploy. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Exports an issue model to the provided destination. */
      export(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The issue model to export. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest;
      }): Request<GoogleLongrunningOperation>;
      export(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The issue model to export. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets an issue model. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the issue model to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1IssueModel>;
      /** Imports an issue model from a Cloud Storage bucket. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the issue model. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the issue model. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Lists issue models. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the issue model. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListIssueModelsResponse>;
      /** Updates an issue model. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1IssueModel;
      }): Request<GoogleCloudContactcenterinsightsV1IssueModel>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1IssueModel,
      ): Request<GoogleCloudContactcenterinsightsV1IssueModel>;
      /** Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed. */
      undeploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The issue model to undeploy. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest;
      }): Request<GoogleLongrunningOperation>;
      undeploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The issue model to undeploy. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest,
      ): Request<GoogleLongrunningOperation>;
      issues: IssuesResource;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface PhraseMatchersResource {
      /** Creates a phrase matcher. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1PhraseMatcher;
      }): Request<GoogleCloudContactcenterinsightsV1PhraseMatcher>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1PhraseMatcher,
      ): Request<GoogleCloudContactcenterinsightsV1PhraseMatcher>;
      /** Deletes a phrase matcher. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the phrase matcher to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a phrase matcher. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the phrase matcher to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1PhraseMatcher>;
      /** Lists phrase matchers. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the phrase matcher. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse>;
      /** Updates a phrase matcher. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1PhraseMatcher;
      }): Request<GoogleCloudContactcenterinsightsV1PhraseMatcher>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1PhraseMatcher,
      ): Request<GoogleCloudContactcenterinsightsV1PhraseMatcher>;
    }
    interface QaQuestionTagsResource {
      /** Creates a QaQuestionTag. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the QaQuestionTag. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Optional. A unique ID for the new QaQuestionTag. This ID will become the final component of the QaQuestionTag's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
        qaQuestionTagId?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaQuestionTag;
      }): Request<GoogleCloudContactcenterinsightsV1QaQuestionTag>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the QaQuestionTag. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Optional. A unique ID for the new QaQuestionTag. This ID will become the final component of the QaQuestionTag's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
          qaQuestionTagId?: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaQuestionTag,
      ): Request<GoogleCloudContactcenterinsightsV1QaQuestionTag>;
      /** Deletes a QaQuestionTag. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaQuestionTag to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a QaQuestionTag. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaQuestionTag to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1QaQuestionTag>;
      /** Lists the question tags. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and conjunctions (AND). Supported fields include the following: * `project_id` - id of the project to list tags for * `qa_scorecard_revision_id` - id of the scorecard revision to list tags for * `qa_question_id - id of the question to list tags for` */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the QaQuestionTags. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse>;
      /** Updates a QaQuestionTag. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. Resource name for the QaQuestionTag Format projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag} In the above format, the last segment, i.e., qa_question_tag, is a server-generated ID corresponding to the tag resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `qa_question_tag_name` - the name of the tag * `qa_question_ids` - the list of questions the tag applies to */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaQuestionTag;
      }): Request<GoogleLongrunningOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. Resource name for the QaQuestionTag Format projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag} In the above format, the last segment, i.e., qa_question_tag, is a server-generated ID corresponding to the tag resource. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `qa_question_tag_name` - the name of the tag * `qa_question_ids` - the list of questions the tag applies to */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaQuestionTag,
      ): Request<GoogleLongrunningOperation>;
    }
    interface QaQuestionsResource {
      /** Create a QaQuestion. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the QaQuestion. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Optional. A unique ID for the new question. This ID will become the final component of the question's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
        qaQuestionId?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaQuestion;
      }): Request<GoogleCloudContactcenterinsightsV1QaQuestion>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the QaQuestion. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Optional. A unique ID for the new question. This ID will become the final component of the question's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
          qaQuestionId?: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaQuestion,
      ): Request<GoogleCloudContactcenterinsightsV1QaQuestion>;
      /** Deletes a QaQuestion. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaQuestion to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a QaQuestion. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaQuestion to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1QaQuestion>;
      /** Lists QaQuestions. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of questions to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListQaQuestionsResponse`. This value indicates that this is a continuation of a prior `ListQaQuestions` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the questions. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse>;
      /** Updates a QaQuestion. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the question. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}/qaQuestions/{qa_question} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `abbreviation` * `answer_choices` * `answer_instructions` * `order` * `question_body` * `tags` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaQuestion;
      }): Request<GoogleCloudContactcenterinsightsV1QaQuestion>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the question. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}/qaQuestions/{qa_question} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `abbreviation` * `answer_choices` * `answer_instructions` * `order` * `question_body` * `tags` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaQuestion,
      ): Request<GoogleCloudContactcenterinsightsV1QaQuestion>;
    }
    interface RevisionsResource {
      /** Creates a QaScorecardRevision. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the QaScorecardRevision. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Optional. A unique ID for the new QaScorecardRevision. This ID will become the final component of the QaScorecardRevision's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
        qaScorecardRevisionId?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaScorecardRevision;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the QaScorecardRevision. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Optional. A unique ID for the new QaScorecardRevision. This ID will become the final component of the QaScorecardRevision's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
          qaScorecardRevisionId?: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaScorecardRevision,
      ): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      /** Deletes a QaScorecardRevision. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all of this QaScorecardRevision's child resources will also be deleted. Otherwise, the request will only succeed if it has none. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecardRevision to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Deploy a QaScorecardRevision. */
      deploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecardRevision to deploy. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      deploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the QaScorecardRevision to deploy. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest,
      ): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      /** Gets a QaScorecardRevision. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecardRevision to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      /** Lists all revisions under the parent QaScorecard. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset. Useful for querying scorecard revisions with specific properties. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of scorecard revisions to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListQaScorecardRevisionsResponse`. This value indicates that this is a continuation of a prior `ListQaScorecardRevisions` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the scorecard revisions. To list all revisions of all scorecards, substitute the QaScorecard ID with a '-' character. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse>;
      /** Fine tune one or more QaModels. */
      tuneQaScorecardRevision(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new fine tuning job instance. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest;
      }): Request<GoogleLongrunningOperation>;
      tuneQaScorecardRevision(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new fine tuning job instance. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Undeploy a QaScorecardRevision. */
      undeploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecardRevision to undeploy. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      undeploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the QaScorecardRevision to undeploy. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest,
      ): Request<GoogleCloudContactcenterinsightsV1QaScorecardRevision>;
      qaQuestions: QaQuestionsResource;
    }
    interface QaScorecardsResource {
      /** Create a QaScorecard. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the QaScorecard. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Optional. A unique ID for the new QaScorecard. This ID will become the final component of the QaScorecard's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
        qaScorecardId?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaScorecard;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecard>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the QaScorecard. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Optional. A unique ID for the new QaScorecard. This ID will become the final component of the QaScorecard's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`. */
          qaScorecardId?: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaScorecard,
      ): Request<GoogleCloudContactcenterinsightsV1QaScorecard>;
      /** Deletes a QaScorecard. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all of this QaScorecard's child resources will also be deleted. Otherwise, the request will only succeed if it has none. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecard to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a QaScorecard. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the QaScorecard to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecard>;
      /** Lists QaScorecards. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of scorecards to return in the response. If the value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListQaScorecardsResponse`. This value indicates that this is a continuation of a prior `ListQaScorecards` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the scorecards. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse>;
      /** Updates a QaScorecard. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The scorecard name. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `description` * `display_name` */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QaScorecard;
      }): Request<GoogleCloudContactcenterinsightsV1QaScorecard>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The scorecard name. Format: projects/{project}/locations/{location}/qaScorecards/{qa_scorecard} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. All possible fields can be updated by passing `*`, or a subset of the following updateable fields can be provided: * `description` * `display_name` */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QaScorecard,
      ): Request<GoogleCloudContactcenterinsightsV1QaScorecard>;
      revisions: RevisionsResource;
    }
    interface ViewsResource {
      /** Creates a view. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1View;
      }): Request<GoogleCloudContactcenterinsightsV1View>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1View,
      ): Request<GoogleCloudContactcenterinsightsV1View>;
      /** Deletes a view. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the view to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a view. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the view to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1View>;
      /** Lists views. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available. */
        pageSize?: number;
        /** The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of the views. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListViewsResponse>;
      /** Updates a view. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1View;
      }): Request<GoogleCloudContactcenterinsightsV1View>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view} */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1View,
      ): Request<GoogleCloudContactcenterinsightsV1View>;
    }
    interface LocationsResource {
      /** Delete feedback labels in bulk using a filter. */
      bulkDeleteFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDeleteFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Download feedback labels in bulk from an external source. Currently supports exporting Quality AI example conversations with transcripts and question bodies. */
      bulkDownloadFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkDownloadFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Upload feedback labels from an external source in bulk. Currently supports labeling Quality AI example conversations. */
      bulkUploadFeedbackLabels(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for new feedback labels. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest;
      }): Request<GoogleLongrunningOperation>;
      bulkUploadFeedbackLabels(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for new feedback labels. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets location-level encryption key specification. */
      getEncryptionSpec(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the encryption spec resource to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1EncryptionSpec>;
      /** Gets project-level settings. */
      getSettings(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the settings resource to get. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1Settings>;
      /** List all feedback labels by project number. */
      listAllFeedbackLabels(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to reduce results to a specific subset in the entire project. Supports disjunctions (OR) and conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of feedback labels to return in the response. A valid page size ranges from 0 to 100,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size. */
        pageSize?: number;
        /** Optional. The value returned by the last `ListAllFeedbackLabelsResponse`. This value indicates that this is a continuation of a prior `ListAllFeedbackLabels` call and that the system should return the next page of data. */
        pageToken?: string;
        /** Required. The parent resource of all feedback labels per project. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse>;
      /** Query metrics. */
      queryMetrics(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The location of the data. "projects/{project}/locations/{location}" */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QueryMetricsRequest;
      }): Request<GoogleLongrunningOperation>;
      queryMetrics(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The location of the data. "projects/{project}/locations/{location}" */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QueryMetricsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Generates a summary of predefined performance metrics for a set of conversations. Conversations can be specified by specifying a time window and an agent id, for now. The summary includes a comparison of metrics computed for conversations in the previous time period, and also a comparison with peers in the same time period. */
      queryPerformanceOverview(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource of the conversations to derive performance stats from. "projects/{project}/locations/{location}" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest;
      }): Request<GoogleLongrunningOperation>;
      queryPerformanceOverview(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource of the conversations to derive performance stats from. "projects/{project}/locations/{location}" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Updates project-level settings. */
      updateSettings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudContactcenterinsightsV1Settings;
      }): Request<GoogleCloudContactcenterinsightsV1Settings>;
      updateSettings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudContactcenterinsightsV1Settings,
      ): Request<GoogleCloudContactcenterinsightsV1Settings>;
      analysisRules: AnalysisRulesResource;
      assessmentRules: AssessmentRulesResource;
      authorizedViewSets: AuthorizedViewSetsResource;
      conversations: ConversationsResource;
      datasets: DatasetsResource;
      encryptionSpec: EncryptionSpecResource;
      insightsdata: InsightsdataResource;
      issueModels: IssueModelsResource;
      operations: OperationsResource;
      phraseMatchers: PhraseMatchersResource;
      qaQuestionTags: QaQuestionTagsResource;
      qaScorecards: QaScorecardsResource;
      views: ViewsResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const projects: ProjectsResource;
  }
}
