/* This is stub file for gapi.client.servicenetworking-v1beta definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230628

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://servicenetworking.googleapis.com/$discovery/rest?version=v1beta');
    /** now we can use gapi.client.servicenetworking */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
        /** Manage your Google API service configuration */
        'https://www.googleapis.com/auth/service.management',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.servicenetworking.operations.get({
            name: "Test string",
        });
        /**
         * For service producers, provisions a new subnet in a peered service's shared VPC network in the requested region and with the requested size that's expressed as a CIDR range (number of
         * leading bits of ipV4 network mask). The method checks against the assigned allocated ranges to find a non-conflicting IP address range. The method will reuse a subnet if subsequent
         * calls contain the same subnet name, region, and prefix length. This method will make producer's tenant project to be a shared VPC service project as needed. The response from the `get`
         * operation will be of type `Subnetwork` if the operation successfully completes.
         */
        await gapi.client.servicenetworking.services.addSubnetwork({
            parent: "Test string",
        }, {
            consumer: "Test string",
            consumerNetwork: "Test string",
            description: "Test string",
            ipPrefixLength: 42,
            region: "Test string",
            requestedAddress: "Test string",
            subnetwork: "Test string",
            subnetworkUsers: [
                "Test string"
            ],
        });
        /**
         * Service producers can use this method to find a currently unused range within consumer allocated ranges. This returned range is not reserved, and not guaranteed to remain unused. It
         * will validate previously provided allocated ranges, find non-conflicting sub-range of requested size (expressed in number of leading bits of ipv4 network mask, as in CIDR range
         * notation). Operation
         */
        await gapi.client.servicenetworking.services.searchRange({
            parent: "Test string",
        }, {
            ipPrefixLength: 42,
            network: "Test string",
        });
        /** Updates the allocated ranges that are assigned to a connection. The response from the `get` operation will be of type `Connection` if the operation successfully completes. */
        await gapi.client.servicenetworking.services.updateConnections({
            force: true,
            name: "Test string",
            updateMask: "Test string",
        }, {
            network: "Test string",
            peering: "Test string",
            reservedPeeringRanges: [
                "Test string"
            ],
            service: "Test string",
        });
        /**
         * Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer's organization. The administrator of the service consumer's VPC
         * network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer's VPC network. This connection is used
         * for all supported services in the service producer's organization, so it only needs to be invoked once. The response from the `get` operation will be of type `Connection` if the
         * operation successfully completes.
         */
        await gapi.client.servicenetworking.services.connections.create({
            parent: "Test string",
        }, {
            network: "Test string",
            peering: "Test string",
            reservedPeeringRanges: [
                "Test string"
            ],
            service: "Test string",
        });
        /** List the private connections that are configured in a service consumer's VPC network. */
        await gapi.client.servicenetworking.services.connections.list({
            network: "Test string",
            parent: "Test string",
        });
    }
});
