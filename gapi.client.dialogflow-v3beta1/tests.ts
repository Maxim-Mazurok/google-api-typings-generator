/* This is stub file for gapi.client.dialogflow-v3beta1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230106

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://dialogflow.googleapis.com/$discovery/rest?version=v3beta1');
    /** now we can use gapi.client.dialogflow */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
        /** View, manage and query your Dialogflow agents */
        'https://www.googleapis.com/auth/dialogflow',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Gets information about a location. */
        await gapi.client.dialogflow.projects.locations.get({
            name: "Test string",
        });
        /** Lists information about the supported locations for this service. */
        await gapi.client.dialogflow.projects.locations.list({
            filter: "Test string",
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /**
         * Creates an agent in the specified location. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.create({
            parent: "Test string",
        }, {
            advancedSettings: {
                loggingSettings: {
                    enableInteractionLogging: true,
                    enableStackdriverLogging: true,
                },
            },
            avatarUri: "Test string",
            defaultLanguageCode: "Test string",
            description: "Test string",
            displayName: "Test string",
            enableSpellCorrection: true,
            enableStackdriverLogging: true,
            locked: true,
            name: "Test string",
            securitySettings: "Test string",
            speechToTextSettings: {
                enableSpeechAdaptation: true,
            },
            startFlow: "Test string",
            supportedLanguageCodes: [
                "Test string"
            ],
            timeZone: "Test string",
        });
        /** Deletes the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.delete({
            name: "Test string",
        });
        /**
         * Exports the specified agent to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation`
         * type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: ExportAgentResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.export({
            name: "Test string",
        }, {
            agentUri: "Test string",
            dataFormat: "Test string",
            environment: "Test string",
        });
        /** Retrieves the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.get({
            name: "Test string",
        });
        /** Gets the latest agent validation result. Agent validation is performed when ValidateAgent is called. */
        await gapi.client.dialogflow.projects.locations.agents.getValidationResult({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Returns the list of all agents in the specified location. */
        await gapi.client.dialogflow.projects.locations.agents.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates the specified agent. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            advancedSettings: {
                loggingSettings: {
                    enableInteractionLogging: true,
                    enableStackdriverLogging: true,
                },
            },
            avatarUri: "Test string",
            defaultLanguageCode: "Test string",
            description: "Test string",
            displayName: "Test string",
            enableSpellCorrection: true,
            enableStackdriverLogging: true,
            locked: true,
            name: "Test string",
            securitySettings: "Test string",
            speechToTextSettings: {
                enableSpeechAdaptation: true,
            },
            startFlow: "Test string",
            supportedLanguageCodes: [
                "Test string"
            ],
            timeZone: "Test string",
        });
        /**
         * Restores the specified agent from a binary file. Replaces the current agent with a new one. Note that all existing resources in agent (e.g. intents, entity types, flows) will be
         * removed. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following
         * method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.restore({
            name: "Test string",
        }, {
            agentContent: "Test string",
            agentUri: "Test string",
            restoreOption: "Test string",
        });
        /**
         * Validates the specified agent and creates or updates validation results. The agent in draft version is validated. Please call this API after the training is completed to get the
         * complete validation results.
         */
        await gapi.client.dialogflow.projects.locations.agents.validate({
            name: "Test string",
        }, {
            languageCode: "Test string",
        });
        /** Retrieves the specified Changelog. */
        await gapi.client.dialogflow.projects.locations.agents.changelogs.get({
            name: "Test string",
        });
        /** Returns the list of Changelogs. */
        await gapi.client.dialogflow.projects.locations.agents.changelogs.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates an entity type in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.entityTypes.create({
            languageCode: "Test string",
            parent: "Test string",
        }, {
            autoExpansionMode: "Test string",
            displayName: "Test string",
            enableFuzzyExtraction: true,
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            excludedPhrases: [
                {
                    value: "Test string",
                }
            ],
            kind: "Test string",
            name: "Test string",
            redact: true,
        });
        /**
         * Deletes the specified entity type. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.entityTypes.delete({
            force: true,
            name: "Test string",
        });
        /** Retrieves the specified entity type. */
        await gapi.client.dialogflow.projects.locations.agents.entityTypes.get({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Returns the list of all entity types in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.entityTypes.list({
            languageCode: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates the specified entity type. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.entityTypes.patch({
            languageCode: "Test string",
            name: "Test string",
            updateMask: "Test string",
        }, {
            autoExpansionMode: "Test string",
            displayName: "Test string",
            enableFuzzyExtraction: true,
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            excludedPhrases: [
                {
                    value: "Test string",
                }
            ],
            kind: "Test string",
            name: "Test string",
            redact: true,
        });
        /**
         * Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
         * - `response`: Environment
         */
        await gapi.client.dialogflow.projects.locations.agents.environments.create({
            parent: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            testCasesConfig: {
                enableContinuousRun: true,
                enablePredeploymentRun: true,
                testCases: [
                    "Test string"
                ],
            },
            updateTime: "Test string",
            versionConfigs: [
                {
                    version: "Test string",
                }
            ],
            webhookConfig: {
                webhookOverrides: [
                    {
                        disabled: true,
                        displayName: "Test string",
                        genericWebService: {
                            allowedCaCerts: [
                                "Test string"
                            ],
                            password: "Test string",
                            requestHeaders: {
                                A: "Test string"
                            },
                            uri: "Test string",
                            username: "Test string",
                        },
                        name: "Test string",
                        serviceDirectory: {
                            genericWebService: {
                                allowedCaCerts: [
                                    "Test string"
                                ],
                                password: "Test string",
                                requestHeaders: {
                                    A: "Test string"
                                },
                                uri: "Test string",
                                username: "Test string",
                            },
                            service: "Test string",
                        },
                        timeout: "Test string",
                    }
                ],
            },
        });
        /** Deletes the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.delete({
            name: "Test string",
        });
        /**
         * Deploys a flow to the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation`
         * type has the following method-specific fields: - `metadata`: DeployFlowMetadata - `response`: DeployFlowResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.environments.deployFlow({
            environment: "Test string",
        }, {
            flowVersion: "Test string",
        });
        /** Retrieves the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.get({
            name: "Test string",
        });
        /** Returns the list of all environments in the specified Agent. */
        await gapi.client.dialogflow.projects.locations.agents.environments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Looks up the history of the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory({
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /**
         * Updates the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
         * the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`:
         * Environment
         */
        await gapi.client.dialogflow.projects.locations.agents.environments.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            testCasesConfig: {
                enableContinuousRun: true,
                enablePredeploymentRun: true,
                testCases: [
                    "Test string"
                ],
            },
            updateTime: "Test string",
            versionConfigs: [
                {
                    version: "Test string",
                }
            ],
            webhookConfig: {
                webhookOverrides: [
                    {
                        disabled: true,
                        displayName: "Test string",
                        genericWebService: {
                            allowedCaCerts: [
                                "Test string"
                            ],
                            password: "Test string",
                            requestHeaders: {
                                A: "Test string"
                            },
                            uri: "Test string",
                            username: "Test string",
                        },
                        name: "Test string",
                        serviceDirectory: {
                            genericWebService: {
                                allowedCaCerts: [
                                    "Test string"
                                ],
                                password: "Test string",
                                requestHeaders: {
                                    A: "Test string"
                                },
                                uri: "Test string",
                                username: "Test string",
                            },
                            service: "Test string",
                        },
                        timeout: "Test string",
                    }
                ],
            },
        });
        /**
         * Kicks off a continuous test under the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
         * returned `Operation` type has the following method-specific fields: - `metadata`: RunContinuousTestMetadata - `response`: RunContinuousTestResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.environments.runContinuousTest({
            environment: "Test string",
        }, {
        });
        /** Fetches a list of continuous test results for a given environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.continuousTestResults.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Retrieves the specified Deployment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.deployments.get({
            name: "Test string",
        });
        /** Returns the list of all deployments in the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.deployments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates an Experiment in the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            definition: {
                condition: "Test string",
                versionVariants: {
                    variants: [
                        {
                            isControlGroup: true,
                            trafficAllocation: 42,
                            version: "Test string",
                        }
                    ],
                },
            },
            description: "Test string",
            displayName: "Test string",
            endTime: "Test string",
            experimentLength: "Test string",
            lastUpdateTime: "Test string",
            name: "Test string",
            result: {
                lastUpdateTime: "Test string",
                versionMetrics: [
                    {
                        metrics: [
                            {
                                confidenceInterval: {
                                    confidenceLevel: 42,
                                    lowerBound: 42,
                                    ratio: 42,
                                    upperBound: 42,
                                },
                                count: 42,
                                countType: "Test string",
                                ratio: 42,
                                type: "Test string",
                            }
                        ],
                        sessionCount: 42,
                        version: "Test string",
                    }
                ],
            },
            rolloutConfig: {
                failureCondition: "Test string",
                rolloutCondition: "Test string",
                rolloutSteps: [
                    {
                        displayName: "Test string",
                        minDuration: "Test string",
                        trafficPercent: 42,
                    }
                ],
            },
            rolloutFailureReason: "Test string",
            rolloutState: {
                startTime: "Test string",
                step: "Test string",
                stepIndex: 42,
            },
            startTime: "Test string",
            state: "Test string",
            variantsHistory: [
                {
                    updateTime: "Test string",
                    versionVariants: {
                        variants: [
                            {
                                isControlGroup: true,
                                trafficAllocation: 42,
                                version: "Test string",
                            }
                        ],
                    },
                }
            ],
        });
        /** Deletes the specified Experiment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.delete({
            name: "Test string",
        });
        /** Retrieves the specified Experiment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.get({
            name: "Test string",
        });
        /** Returns the list of all experiments in the specified Environment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified Experiment. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            createTime: "Test string",
            definition: {
                condition: "Test string",
                versionVariants: {
                    variants: [
                        {
                            isControlGroup: true,
                            trafficAllocation: 42,
                            version: "Test string",
                        }
                    ],
                },
            },
            description: "Test string",
            displayName: "Test string",
            endTime: "Test string",
            experimentLength: "Test string",
            lastUpdateTime: "Test string",
            name: "Test string",
            result: {
                lastUpdateTime: "Test string",
                versionMetrics: [
                    {
                        metrics: [
                            {
                                confidenceInterval: {
                                    confidenceLevel: 42,
                                    lowerBound: 42,
                                    ratio: 42,
                                    upperBound: 42,
                                },
                                count: 42,
                                countType: "Test string",
                                ratio: 42,
                                type: "Test string",
                            }
                        ],
                        sessionCount: 42,
                        version: "Test string",
                    }
                ],
            },
            rolloutConfig: {
                failureCondition: "Test string",
                rolloutCondition: "Test string",
                rolloutSteps: [
                    {
                        displayName: "Test string",
                        minDuration: "Test string",
                        trafficPercent: 42,
                    }
                ],
            },
            rolloutFailureReason: "Test string",
            rolloutState: {
                startTime: "Test string",
                step: "Test string",
                stepIndex: 42,
            },
            startTime: "Test string",
            state: "Test string",
            variantsHistory: [
                {
                    updateTime: "Test string",
                    versionVariants: {
                        variants: [
                            {
                                isControlGroup: true,
                                trafficAllocation: 42,
                                version: "Test string",
                            }
                        ],
                    },
                }
            ],
        });
        /** Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.start({
            name: "Test string",
        }, {
        });
        /** Stops the specified Experiment. This rpc only changes the state of experiment from RUNNING to DONE. */
        await gapi.client.dialogflow.projects.locations.agents.environments.experiments.stop({
            name: "Test string",
        }, {
        });
        /**
         * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in
         * turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and
         * environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
         */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.detectIntent({
            session: "Test string",
        }, {
            outputAudioConfig: {
                audioEncoding: "Test string",
                sampleRateHertz: 42,
                synthesizeSpeechConfig: {
                    effectsProfileId: [
                        "Test string"
                    ],
                    pitch: 42,
                    speakingRate: 42,
                    voice: {
                        name: "Test string",
                        ssmlGender: "Test string",
                    },
                    volumeGainDb: 42,
                },
            },
            queryInput: {
                audio: {
                    audio: "Test string",
                    config: {
                        audioEncoding: "Test string",
                        enableWordInfo: true,
                        model: "Test string",
                        modelVariant: "Test string",
                        phraseHints: [
                            "Test string"
                        ],
                        sampleRateHertz: 42,
                        singleUtterance: true,
                    },
                },
                dtmf: {
                    digits: "Test string",
                    finishDigit: "Test string",
                },
                event: {
                    event: "Test string",
                },
                intent: {
                    intent: "Test string",
                },
                languageCode: "Test string",
                text: {
                    text: "Test string",
                },
            },
            queryParams: {
                analyzeQueryTextSentiment: true,
                currentPage: "Test string",
                disableWebhook: true,
                flowVersions: [
                    "Test string"
                ],
                geoLocation: {
                    latitude: 42,
                    longitude: 42,
                },
                parameters: {
                    A: 42
                },
                payload: {
                    A: 42
                },
                sessionEntityTypes: [
                    {
                        entities: [
                            {
                                synonyms: [
                                    "Test string"
                                ],
                                value: "Test string",
                            }
                        ],
                        entityOverrideMode: "Test string",
                        name: "Test string",
                    }
                ],
                timeZone: "Test string",
                webhookHeaders: {
                    A: "Test string"
                },
            },
        });
        /** Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.fulfillIntent({
            session: "Test string",
        }, {
            match: {
                confidence: 42,
                event: "Test string",
                intent: {
                    description: "Test string",
                    displayName: "Test string",
                    isFallback: true,
                    labels: {
                        A: "Test string"
                    },
                    name: "Test string",
                    parameters: [
                        {
                            entityType: "Test string",
                            id: "Test string",
                            isList: true,
                            redact: true,
                        }
                    ],
                    priority: 42,
                    trainingPhrases: [
                        {
                            id: "Test string",
                            parts: [
                                {
                                    parameterId: "Test string",
                                    text: "Test string",
                                }
                            ],
                            repeatCount: 42,
                        }
                    ],
                },
                matchType: "Test string",
                parameters: {
                    A: 42
                },
                resolvedInput: "Test string",
            },
            matchIntentRequest: {
                queryInput: {
                    audio: {
                        audio: "Test string",
                        config: {
                            audioEncoding: "Test string",
                            enableWordInfo: true,
                            model: "Test string",
                            modelVariant: "Test string",
                            phraseHints: [
                                "Test string"
                            ],
                            sampleRateHertz: 42,
                            singleUtterance: true,
                        },
                    },
                    dtmf: {
                        digits: "Test string",
                        finishDigit: "Test string",
                    },
                    event: {
                        event: "Test string",
                    },
                    intent: {
                        intent: "Test string",
                    },
                    languageCode: "Test string",
                    text: {
                        text: "Test string",
                    },
                },
                queryParams: {
                    analyzeQueryTextSentiment: true,
                    currentPage: "Test string",
                    disableWebhook: true,
                    flowVersions: [
                        "Test string"
                    ],
                    geoLocation: {
                        latitude: 42,
                        longitude: 42,
                    },
                    parameters: {
                        A: 42
                    },
                    payload: {
                        A: 42
                    },
                    sessionEntityTypes: [
                        {
                            entities: [
                                {
                                    synonyms: [
                                        "Test string"
                                    ],
                                    value: "Test string",
                                }
                            ],
                            entityOverrideMode: "Test string",
                            name: "Test string",
                        }
                    ],
                    timeZone: "Test string",
                    webhookHeaders: {
                        A: "Test string"
                    },
                },
            },
            outputAudioConfig: {
                audioEncoding: "Test string",
                sampleRateHertz: 42,
                synthesizeSpeechConfig: {
                    effectsProfileId: [
                        "Test string"
                    ],
                    pitch: 42,
                    speakingRate: 42,
                    voice: {
                        name: "Test string",
                        ssmlGender: "Test string",
                    },
                    volumeGainDb: 42,
                },
            },
        });
        /** Returns preliminary intent match results, doesn't change the session status. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.matchIntent({
            session: "Test string",
        }, {
            queryInput: {
                audio: {
                    audio: "Test string",
                    config: {
                        audioEncoding: "Test string",
                        enableWordInfo: true,
                        model: "Test string",
                        modelVariant: "Test string",
                        phraseHints: [
                            "Test string"
                        ],
                        sampleRateHertz: 42,
                        singleUtterance: true,
                    },
                },
                dtmf: {
                    digits: "Test string",
                    finishDigit: "Test string",
                },
                event: {
                    event: "Test string",
                },
                intent: {
                    intent: "Test string",
                },
                languageCode: "Test string",
                text: {
                    text: "Test string",
                },
            },
            queryParams: {
                analyzeQueryTextSentiment: true,
                currentPage: "Test string",
                disableWebhook: true,
                flowVersions: [
                    "Test string"
                ],
                geoLocation: {
                    latitude: 42,
                    longitude: 42,
                },
                parameters: {
                    A: 42
                },
                payload: {
                    A: 42
                },
                sessionEntityTypes: [
                    {
                        entities: [
                            {
                                synonyms: [
                                    "Test string"
                                ],
                                value: "Test string",
                            }
                        ],
                        entityOverrideMode: "Test string",
                        name: "Test string",
                    }
                ],
                timeZone: "Test string",
                webhookHeaders: {
                    A: "Test string"
                },
            },
        });
        /** Creates a session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.entityTypes.create({
            parent: "Test string",
        }, {
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            entityOverrideMode: "Test string",
            name: "Test string",
        });
        /** Deletes the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.entityTypes.delete({
            name: "Test string",
        });
        /** Retrieves the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.entityTypes.get({
            name: "Test string",
        });
        /** Returns the list of all session entity types in the specified session. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.entityTypes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.environments.sessions.entityTypes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            entityOverrideMode: "Test string",
            name: "Test string",
        });
        /**
         * Creates a flow in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.create({
            languageCode: "Test string",
            parent: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            eventHandlers: [
                {
                    event: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
            name: "Test string",
            nluSettings: {
                classificationThreshold: 42,
                modelTrainingMode: "Test string",
                modelType: "Test string",
            },
            transitionRouteGroups: [
                "Test string"
            ],
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /** Deletes a specified flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.delete({
            force: true,
            name: "Test string",
        });
        /**
         * Exports the specified flow to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation`
         * type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: ExportFlowResponse Note that resources (e.g. intents, entities, webhooks) that the flow references will also be exported.
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.export({
            name: "Test string",
        }, {
            flowUri: "Test string",
            includeReferencedFlows: true,
        });
        /** Retrieves the specified flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.get({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Gets the latest flow validation result. Flow validation is performed when ValidateFlow is called. */
        await gapi.client.dialogflow.projects.locations.agents.flows.getValidationResult({
            languageCode: "Test string",
            name: "Test string",
        });
        /**
         * Imports the specified flow to the specified agent from a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
         * The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ImportFlowResponse Note: You should always train a flow prior to sending it
         * queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.import({
            parent: "Test string",
        }, {
            flowContent: "Test string",
            flowUri: "Test string",
            importOption: "Test string",
        });
        /** Returns the list of all flows in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.flows.list({
            languageCode: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates the specified flow. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.patch({
            languageCode: "Test string",
            name: "Test string",
            updateMask: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            eventHandlers: [
                {
                    event: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
            name: "Test string",
            nluSettings: {
                classificationThreshold: 42,
                modelTrainingMode: "Test string",
                modelType: "Test string",
            },
            transitionRouteGroups: [
                "Test string"
            ],
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /**
         * Trains the specified flow. Note that only the flow in 'draft' environment is trained. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
         * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.train({
            name: "Test string",
        }, {
        });
        /** Validates the specified flow and creates or updates validation results. Please call this API after the training is completed to get the complete validation results. */
        await gapi.client.dialogflow.projects.locations.agents.flows.validate({
            name: "Test string",
        }, {
            languageCode: "Test string",
        });
        /** Creates a page in the specified flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.pages.create({
            languageCode: "Test string",
            parent: "Test string",
        }, {
            displayName: "Test string",
            entryFulfillment: {
                conditionalCases: [
                    {
                        cases: [
                            {
                                caseContent: [
                                    {
                                        additionalCases: undefined,
                                        message: {
                                            conversationSuccess: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            endInteraction: {
                                            },
                                            liveAgentHandoff: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            mixedAudio: {
                                                segments: [
                                                    {
                                                        allowPlaybackInterruption: true,
                                                        audio: "Test string",
                                                        uri: "Test string",
                                                    }
                                                ],
                                            },
                                            outputAudioText: {
                                                allowPlaybackInterruption: true,
                                                ssml: "Test string",
                                                text: "Test string",
                                            },
                                            payload: {
                                                A: 42
                                            },
                                            playAudio: {
                                                allowPlaybackInterruption: true,
                                                audioUri: "Test string",
                                            },
                                            telephonyTransferCall: {
                                                phoneNumber: "Test string",
                                            },
                                            text: {
                                                allowPlaybackInterruption: true,
                                                text: [
                                                    "Test string"
                                                ],
                                            },
                                        },
                                    }
                                ],
                                condition: "Test string",
                            }
                        ],
                    }
                ],
                messages: [
                    {
                        conversationSuccess: {
                            metadata: {
                                A: 42
                            },
                        },
                        endInteraction: {
                        },
                        liveAgentHandoff: {
                            metadata: {
                                A: 42
                            },
                        },
                        mixedAudio: {
                            segments: [
                                {
                                    allowPlaybackInterruption: true,
                                    audio: "Test string",
                                    uri: "Test string",
                                }
                            ],
                        },
                        outputAudioText: {
                            allowPlaybackInterruption: true,
                            ssml: "Test string",
                            text: "Test string",
                        },
                        payload: {
                            A: 42
                        },
                        playAudio: {
                            allowPlaybackInterruption: true,
                            audioUri: "Test string",
                        },
                        telephonyTransferCall: {
                            phoneNumber: "Test string",
                        },
                        text: {
                            allowPlaybackInterruption: true,
                            text: [
                                "Test string"
                            ],
                        },
                    }
                ],
                returnPartialResponses: true,
                setParameterActions: [
                    {
                        parameter: "Test string",
                        value: 42,
                    }
                ],
                tag: "Test string",
                webhook: "Test string",
            },
            eventHandlers: [
                {
                    event: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
            form: {
                parameters: [
                    {
                        defaultValue: 42,
                        displayName: "Test string",
                        entityType: "Test string",
                        fillBehavior: {
                            initialPromptFulfillment: {
                                conditionalCases: [
                                    {
                                        cases: [
                                            {
                                                caseContent: [
                                                    {
                                                        additionalCases: undefined,
                                                        message: {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        },
                                                    }
                                                ],
                                                condition: "Test string",
                                            }
                                        ],
                                    }
                                ],
                                messages: [
                                    {
                                        conversationSuccess: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        endInteraction: {
                                        },
                                        liveAgentHandoff: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        mixedAudio: {
                                            segments: [
                                                {
                                                    allowPlaybackInterruption: true,
                                                    audio: "Test string",
                                                    uri: "Test string",
                                                }
                                            ],
                                        },
                                        outputAudioText: {
                                            allowPlaybackInterruption: true,
                                            ssml: "Test string",
                                            text: "Test string",
                                        },
                                        payload: {
                                            A: 42
                                        },
                                        playAudio: {
                                            allowPlaybackInterruption: true,
                                            audioUri: "Test string",
                                        },
                                        telephonyTransferCall: {
                                            phoneNumber: "Test string",
                                        },
                                        text: {
                                            allowPlaybackInterruption: true,
                                            text: [
                                                "Test string"
                                            ],
                                        },
                                    }
                                ],
                                returnPartialResponses: true,
                                setParameterActions: [
                                    {
                                        parameter: "Test string",
                                        value: 42,
                                    }
                                ],
                                tag: "Test string",
                                webhook: "Test string",
                            },
                            repromptEventHandlers: [
                                {
                                    event: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                        },
                        isList: true,
                        redact: true,
                        required: true,
                    }
                ],
            },
            name: "Test string",
            transitionRouteGroups: [
                "Test string"
            ],
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /** Deletes the specified page. */
        await gapi.client.dialogflow.projects.locations.agents.flows.pages.delete({
            force: true,
            name: "Test string",
        });
        /** Retrieves the specified page. */
        await gapi.client.dialogflow.projects.locations.agents.flows.pages.get({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Returns the list of all pages in the specified flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.pages.list({
            languageCode: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified page. */
        await gapi.client.dialogflow.projects.locations.agents.flows.pages.patch({
            languageCode: "Test string",
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            entryFulfillment: {
                conditionalCases: [
                    {
                        cases: [
                            {
                                caseContent: [
                                    {
                                        additionalCases: undefined,
                                        message: {
                                            conversationSuccess: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            endInteraction: {
                                            },
                                            liveAgentHandoff: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            mixedAudio: {
                                                segments: [
                                                    {
                                                        allowPlaybackInterruption: true,
                                                        audio: "Test string",
                                                        uri: "Test string",
                                                    }
                                                ],
                                            },
                                            outputAudioText: {
                                                allowPlaybackInterruption: true,
                                                ssml: "Test string",
                                                text: "Test string",
                                            },
                                            payload: {
                                                A: 42
                                            },
                                            playAudio: {
                                                allowPlaybackInterruption: true,
                                                audioUri: "Test string",
                                            },
                                            telephonyTransferCall: {
                                                phoneNumber: "Test string",
                                            },
                                            text: {
                                                allowPlaybackInterruption: true,
                                                text: [
                                                    "Test string"
                                                ],
                                            },
                                        },
                                    }
                                ],
                                condition: "Test string",
                            }
                        ],
                    }
                ],
                messages: [
                    {
                        conversationSuccess: {
                            metadata: {
                                A: 42
                            },
                        },
                        endInteraction: {
                        },
                        liveAgentHandoff: {
                            metadata: {
                                A: 42
                            },
                        },
                        mixedAudio: {
                            segments: [
                                {
                                    allowPlaybackInterruption: true,
                                    audio: "Test string",
                                    uri: "Test string",
                                }
                            ],
                        },
                        outputAudioText: {
                            allowPlaybackInterruption: true,
                            ssml: "Test string",
                            text: "Test string",
                        },
                        payload: {
                            A: 42
                        },
                        playAudio: {
                            allowPlaybackInterruption: true,
                            audioUri: "Test string",
                        },
                        telephonyTransferCall: {
                            phoneNumber: "Test string",
                        },
                        text: {
                            allowPlaybackInterruption: true,
                            text: [
                                "Test string"
                            ],
                        },
                    }
                ],
                returnPartialResponses: true,
                setParameterActions: [
                    {
                        parameter: "Test string",
                        value: 42,
                    }
                ],
                tag: "Test string",
                webhook: "Test string",
            },
            eventHandlers: [
                {
                    event: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
            form: {
                parameters: [
                    {
                        defaultValue: 42,
                        displayName: "Test string",
                        entityType: "Test string",
                        fillBehavior: {
                            initialPromptFulfillment: {
                                conditionalCases: [
                                    {
                                        cases: [
                                            {
                                                caseContent: [
                                                    {
                                                        additionalCases: undefined,
                                                        message: {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        },
                                                    }
                                                ],
                                                condition: "Test string",
                                            }
                                        ],
                                    }
                                ],
                                messages: [
                                    {
                                        conversationSuccess: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        endInteraction: {
                                        },
                                        liveAgentHandoff: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        mixedAudio: {
                                            segments: [
                                                {
                                                    allowPlaybackInterruption: true,
                                                    audio: "Test string",
                                                    uri: "Test string",
                                                }
                                            ],
                                        },
                                        outputAudioText: {
                                            allowPlaybackInterruption: true,
                                            ssml: "Test string",
                                            text: "Test string",
                                        },
                                        payload: {
                                            A: 42
                                        },
                                        playAudio: {
                                            allowPlaybackInterruption: true,
                                            audioUri: "Test string",
                                        },
                                        telephonyTransferCall: {
                                            phoneNumber: "Test string",
                                        },
                                        text: {
                                            allowPlaybackInterruption: true,
                                            text: [
                                                "Test string"
                                            ],
                                        },
                                    }
                                ],
                                returnPartialResponses: true,
                                setParameterActions: [
                                    {
                                        parameter: "Test string",
                                        value: 42,
                                    }
                                ],
                                tag: "Test string",
                                webhook: "Test string",
                            },
                            repromptEventHandlers: [
                                {
                                    event: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                        },
                        isList: true,
                        redact: true,
                        required: true,
                    }
                ],
            },
            name: "Test string",
            transitionRouteGroups: [
                "Test string"
            ],
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /**
         * Creates an TransitionRouteGroup in the specified flow. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.transitionRouteGroups.create({
            languageCode: "Test string",
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /**
         * Deletes the specified TransitionRouteGroup. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.transitionRouteGroups.delete({
            force: true,
            name: "Test string",
        });
        /** Retrieves the specified TransitionRouteGroup. */
        await gapi.client.dialogflow.projects.locations.agents.flows.transitionRouteGroups.get({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Returns the list of all transition route groups in the specified flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.transitionRouteGroups.list({
            languageCode: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates the specified TransitionRouteGroup. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.transitionRouteGroups.patch({
            languageCode: "Test string",
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            transitionRoutes: [
                {
                    condition: "Test string",
                    intent: "Test string",
                    name: "Test string",
                    targetFlow: "Test string",
                    targetPage: "Test string",
                    triggerFulfillment: {
                        conditionalCases: [
                            {
                                cases: [
                                    {
                                        caseContent: [
                                            {
                                                additionalCases: undefined,
                                                message: {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                },
                                            }
                                        ],
                                        condition: "Test string",
                                    }
                                ],
                            }
                        ],
                        messages: [
                            {
                                conversationSuccess: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                endInteraction: {
                                },
                                liveAgentHandoff: {
                                    metadata: {
                                        A: 42
                                    },
                                },
                                mixedAudio: {
                                    segments: [
                                        {
                                            allowPlaybackInterruption: true,
                                            audio: "Test string",
                                            uri: "Test string",
                                        }
                                    ],
                                },
                                outputAudioText: {
                                    allowPlaybackInterruption: true,
                                    ssml: "Test string",
                                    text: "Test string",
                                },
                                payload: {
                                    A: 42
                                },
                                playAudio: {
                                    allowPlaybackInterruption: true,
                                    audioUri: "Test string",
                                },
                                telephonyTransferCall: {
                                    phoneNumber: "Test string",
                                },
                                text: {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                },
                            }
                        ],
                        returnPartialResponses: true,
                        setParameterActions: [
                            {
                                parameter: "Test string",
                                value: 42,
                            }
                        ],
                        tag: "Test string",
                        webhook: "Test string",
                    },
                }
            ],
        });
        /** Compares the specified base version with target version. */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.compareVersions({
            baseVersion: "Test string",
        }, {
            languageCode: "Test string",
            targetVersion: "Test string",
        });
        /**
         * Creates a Version in the specified Flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type
         * has the following method-specific fields: - `metadata`: CreateVersionOperationMetadata - `response`: Version
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            nluSettings: {
                classificationThreshold: 42,
                modelTrainingMode: "Test string",
                modelType: "Test string",
            },
            state: "Test string",
        });
        /** Deletes the specified Version. */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.delete({
            name: "Test string",
        });
        /** Retrieves the specified Version. */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.get({
            name: "Test string",
        });
        /** Returns the list of all versions in the specified Flow. */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Loads resources in the specified version to the draft flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
         * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
         */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.load({
            name: "Test string",
        }, {
            allowOverrideAgentResources: true,
        });
        /** Updates the specified Version. */
        await gapi.client.dialogflow.projects.locations.agents.flows.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            nluSettings: {
                classificationThreshold: 42,
                modelTrainingMode: "Test string",
                modelType: "Test string",
            },
            state: "Test string",
        });
        /**
         * Creates an intent in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.intents.create({
            languageCode: "Test string",
            parent: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            isFallback: true,
            labels: {
                A: "Test string"
            },
            name: "Test string",
            parameters: [
                {
                    entityType: "Test string",
                    id: "Test string",
                    isList: true,
                    redact: true,
                }
            ],
            priority: 42,
            trainingPhrases: [
                {
                    id: "Test string",
                    parts: [
                        {
                            parameterId: "Test string",
                            text: "Test string",
                        }
                    ],
                    repeatCount: 42,
                }
            ],
        });
        /**
         * Deletes the specified intent. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.intents.delete({
            name: "Test string",
        });
        /** Retrieves the specified intent. */
        await gapi.client.dialogflow.projects.locations.agents.intents.get({
            languageCode: "Test string",
            name: "Test string",
        });
        /** Returns the list of all intents in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.intents.list({
            intentView: "Test string",
            languageCode: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates the specified intent. Note: You should always train a flow prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
         */
        await gapi.client.dialogflow.projects.locations.agents.intents.patch({
            languageCode: "Test string",
            name: "Test string",
            updateMask: "Test string",
        }, {
            description: "Test string",
            displayName: "Test string",
            isFallback: true,
            labels: {
                A: "Test string"
            },
            name: "Test string",
            parameters: [
                {
                    entityType: "Test string",
                    id: "Test string",
                    isList: true,
                    redact: true,
                }
            ],
            priority: 42,
            trainingPhrases: [
                {
                    id: "Test string",
                    parts: [
                        {
                            parameterId: "Test string",
                            text: "Test string",
                        }
                    ],
                    repeatCount: 42,
                }
            ],
        });
        /**
         * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in
         * turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and
         * environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
         */
        await gapi.client.dialogflow.projects.locations.agents.sessions.detectIntent({
            session: "Test string",
        }, {
            outputAudioConfig: {
                audioEncoding: "Test string",
                sampleRateHertz: 42,
                synthesizeSpeechConfig: {
                    effectsProfileId: [
                        "Test string"
                    ],
                    pitch: 42,
                    speakingRate: 42,
                    voice: {
                        name: "Test string",
                        ssmlGender: "Test string",
                    },
                    volumeGainDb: 42,
                },
            },
            queryInput: {
                audio: {
                    audio: "Test string",
                    config: {
                        audioEncoding: "Test string",
                        enableWordInfo: true,
                        model: "Test string",
                        modelVariant: "Test string",
                        phraseHints: [
                            "Test string"
                        ],
                        sampleRateHertz: 42,
                        singleUtterance: true,
                    },
                },
                dtmf: {
                    digits: "Test string",
                    finishDigit: "Test string",
                },
                event: {
                    event: "Test string",
                },
                intent: {
                    intent: "Test string",
                },
                languageCode: "Test string",
                text: {
                    text: "Test string",
                },
            },
            queryParams: {
                analyzeQueryTextSentiment: true,
                currentPage: "Test string",
                disableWebhook: true,
                flowVersions: [
                    "Test string"
                ],
                geoLocation: {
                    latitude: 42,
                    longitude: 42,
                },
                parameters: {
                    A: 42
                },
                payload: {
                    A: 42
                },
                sessionEntityTypes: [
                    {
                        entities: [
                            {
                                synonyms: [
                                    "Test string"
                                ],
                                value: "Test string",
                            }
                        ],
                        entityOverrideMode: "Test string",
                        name: "Test string",
                    }
                ],
                timeZone: "Test string",
                webhookHeaders: {
                    A: "Test string"
                },
            },
        });
        /** Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.fulfillIntent({
            session: "Test string",
        }, {
            match: {
                confidence: 42,
                event: "Test string",
                intent: {
                    description: "Test string",
                    displayName: "Test string",
                    isFallback: true,
                    labels: {
                        A: "Test string"
                    },
                    name: "Test string",
                    parameters: [
                        {
                            entityType: "Test string",
                            id: "Test string",
                            isList: true,
                            redact: true,
                        }
                    ],
                    priority: 42,
                    trainingPhrases: [
                        {
                            id: "Test string",
                            parts: [
                                {
                                    parameterId: "Test string",
                                    text: "Test string",
                                }
                            ],
                            repeatCount: 42,
                        }
                    ],
                },
                matchType: "Test string",
                parameters: {
                    A: 42
                },
                resolvedInput: "Test string",
            },
            matchIntentRequest: {
                queryInput: {
                    audio: {
                        audio: "Test string",
                        config: {
                            audioEncoding: "Test string",
                            enableWordInfo: true,
                            model: "Test string",
                            modelVariant: "Test string",
                            phraseHints: [
                                "Test string"
                            ],
                            sampleRateHertz: 42,
                            singleUtterance: true,
                        },
                    },
                    dtmf: {
                        digits: "Test string",
                        finishDigit: "Test string",
                    },
                    event: {
                        event: "Test string",
                    },
                    intent: {
                        intent: "Test string",
                    },
                    languageCode: "Test string",
                    text: {
                        text: "Test string",
                    },
                },
                queryParams: {
                    analyzeQueryTextSentiment: true,
                    currentPage: "Test string",
                    disableWebhook: true,
                    flowVersions: [
                        "Test string"
                    ],
                    geoLocation: {
                        latitude: 42,
                        longitude: 42,
                    },
                    parameters: {
                        A: 42
                    },
                    payload: {
                        A: 42
                    },
                    sessionEntityTypes: [
                        {
                            entities: [
                                {
                                    synonyms: [
                                        "Test string"
                                    ],
                                    value: "Test string",
                                }
                            ],
                            entityOverrideMode: "Test string",
                            name: "Test string",
                        }
                    ],
                    timeZone: "Test string",
                    webhookHeaders: {
                        A: "Test string"
                    },
                },
            },
            outputAudioConfig: {
                audioEncoding: "Test string",
                sampleRateHertz: 42,
                synthesizeSpeechConfig: {
                    effectsProfileId: [
                        "Test string"
                    ],
                    pitch: 42,
                    speakingRate: 42,
                    voice: {
                        name: "Test string",
                        ssmlGender: "Test string",
                    },
                    volumeGainDb: 42,
                },
            },
        });
        /** Returns preliminary intent match results, doesn't change the session status. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.matchIntent({
            session: "Test string",
        }, {
            queryInput: {
                audio: {
                    audio: "Test string",
                    config: {
                        audioEncoding: "Test string",
                        enableWordInfo: true,
                        model: "Test string",
                        modelVariant: "Test string",
                        phraseHints: [
                            "Test string"
                        ],
                        sampleRateHertz: 42,
                        singleUtterance: true,
                    },
                },
                dtmf: {
                    digits: "Test string",
                    finishDigit: "Test string",
                },
                event: {
                    event: "Test string",
                },
                intent: {
                    intent: "Test string",
                },
                languageCode: "Test string",
                text: {
                    text: "Test string",
                },
            },
            queryParams: {
                analyzeQueryTextSentiment: true,
                currentPage: "Test string",
                disableWebhook: true,
                flowVersions: [
                    "Test string"
                ],
                geoLocation: {
                    latitude: 42,
                    longitude: 42,
                },
                parameters: {
                    A: 42
                },
                payload: {
                    A: 42
                },
                sessionEntityTypes: [
                    {
                        entities: [
                            {
                                synonyms: [
                                    "Test string"
                                ],
                                value: "Test string",
                            }
                        ],
                        entityOverrideMode: "Test string",
                        name: "Test string",
                    }
                ],
                timeZone: "Test string",
                webhookHeaders: {
                    A: "Test string"
                },
            },
        });
        /** Creates a session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.entityTypes.create({
            parent: "Test string",
        }, {
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            entityOverrideMode: "Test string",
            name: "Test string",
        });
        /** Deletes the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.entityTypes.delete({
            name: "Test string",
        });
        /** Retrieves the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.entityTypes.get({
            name: "Test string",
        });
        /** Returns the list of all session entity types in the specified session. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.entityTypes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified session entity type. */
        await gapi.client.dialogflow.projects.locations.agents.sessions.entityTypes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            entities: [
                {
                    synonyms: [
                        "Test string"
                    ],
                    value: "Test string",
                }
            ],
            entityOverrideMode: "Test string",
            name: "Test string",
        });
        /** Batch deletes test cases. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.batchDelete({
            parent: "Test string",
        }, {
            names: [
                "Test string"
            ],
        });
        /**
         * Kicks off a batch run of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
         * the following method-specific fields: - `metadata`: BatchRunTestCasesMetadata - `response`: BatchRunTestCasesResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.testCases.batchRun({
            parent: "Test string",
        }, {
            environment: "Test string",
            testCases: [
                "Test string"
            ],
        });
        /** Calculates the test coverage for an agent. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.calculateCoverage({
            agent: "Test string",
            type: "Test string",
        });
        /** Creates a test case for the given agent. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.create({
            parent: "Test string",
        }, {
            creationTime: "Test string",
            displayName: "Test string",
            lastTestResult: {
                conversationTurns: [
                    {
                        userInput: {
                            enableSentimentAnalysis: true,
                            injectedParameters: {
                                A: 42
                            },
                            input: {
                                audio: {
                                    audio: "Test string",
                                    config: {
                                        audioEncoding: "Test string",
                                        enableWordInfo: true,
                                        model: "Test string",
                                        modelVariant: "Test string",
                                        phraseHints: [
                                            "Test string"
                                        ],
                                        sampleRateHertz: 42,
                                        singleUtterance: true,
                                    },
                                },
                                dtmf: {
                                    digits: "Test string",
                                    finishDigit: "Test string",
                                },
                                event: {
                                    event: "Test string",
                                },
                                intent: {
                                    intent: "Test string",
                                },
                                languageCode: "Test string",
                                text: {
                                    text: "Test string",
                                },
                            },
                            isWebhookEnabled: true,
                        },
                        virtualAgentOutput: {
                            currentPage: {
                                displayName: "Test string",
                                entryFulfillment: {
                                    conditionalCases: [
                                        {
                                            cases: [
                                                {
                                                    caseContent: [
                                                        {
                                                            additionalCases: undefined,
                                                            message: {
                                                                conversationSuccess: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                endInteraction: {
                                                                },
                                                                liveAgentHandoff: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                mixedAudio: {
                                                                    segments: [
                                                                        {
                                                                            allowPlaybackInterruption: true,
                                                                            audio: "Test string",
                                                                            uri: "Test string",
                                                                        }
                                                                    ],
                                                                },
                                                                outputAudioText: {
                                                                    allowPlaybackInterruption: true,
                                                                    ssml: "Test string",
                                                                    text: "Test string",
                                                                },
                                                                payload: {
                                                                    A: 42
                                                                },
                                                                playAudio: {
                                                                    allowPlaybackInterruption: true,
                                                                    audioUri: "Test string",
                                                                },
                                                                telephonyTransferCall: {
                                                                    phoneNumber: "Test string",
                                                                },
                                                                text: {
                                                                    allowPlaybackInterruption: true,
                                                                    text: [
                                                                        "Test string"
                                                                    ],
                                                                },
                                                            },
                                                        }
                                                    ],
                                                    condition: "Test string",
                                                }
                                            ],
                                        }
                                    ],
                                    messages: [
                                        {
                                            conversationSuccess: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            endInteraction: {
                                            },
                                            liveAgentHandoff: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            mixedAudio: {
                                                segments: [
                                                    {
                                                        allowPlaybackInterruption: true,
                                                        audio: "Test string",
                                                        uri: "Test string",
                                                    }
                                                ],
                                            },
                                            outputAudioText: {
                                                allowPlaybackInterruption: true,
                                                ssml: "Test string",
                                                text: "Test string",
                                            },
                                            payload: {
                                                A: 42
                                            },
                                            playAudio: {
                                                allowPlaybackInterruption: true,
                                                audioUri: "Test string",
                                            },
                                            telephonyTransferCall: {
                                                phoneNumber: "Test string",
                                            },
                                            text: {
                                                allowPlaybackInterruption: true,
                                                text: [
                                                    "Test string"
                                                ],
                                            },
                                        }
                                    ],
                                    returnPartialResponses: true,
                                    setParameterActions: [
                                        {
                                            parameter: "Test string",
                                            value: 42,
                                        }
                                    ],
                                    tag: "Test string",
                                    webhook: "Test string",
                                },
                                eventHandlers: [
                                    {
                                        event: "Test string",
                                        name: "Test string",
                                        targetFlow: "Test string",
                                        targetPage: "Test string",
                                        triggerFulfillment: {
                                            conditionalCases: [
                                                {
                                                    cases: [
                                                        {
                                                            caseContent: [
                                                                {
                                                                    additionalCases: undefined,
                                                                    message: {
                                                                        conversationSuccess: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        endInteraction: {
                                                                        },
                                                                        liveAgentHandoff: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        mixedAudio: {
                                                                            segments: [
                                                                                {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audio: "Test string",
                                                                                    uri: "Test string",
                                                                                }
                                                                            ],
                                                                        },
                                                                        outputAudioText: {
                                                                            allowPlaybackInterruption: true,
                                                                            ssml: "Test string",
                                                                            text: "Test string",
                                                                        },
                                                                        payload: {
                                                                            A: 42
                                                                        },
                                                                        playAudio: {
                                                                            allowPlaybackInterruption: true,
                                                                            audioUri: "Test string",
                                                                        },
                                                                        telephonyTransferCall: {
                                                                            phoneNumber: "Test string",
                                                                        },
                                                                        text: {
                                                                            allowPlaybackInterruption: true,
                                                                            text: [
                                                                                "Test string"
                                                                            ],
                                                                        },
                                                                    },
                                                                }
                                                            ],
                                                            condition: "Test string",
                                                        }
                                                    ],
                                                }
                                            ],
                                            messages: [
                                                {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                }
                                            ],
                                            returnPartialResponses: true,
                                            setParameterActions: [
                                                {
                                                    parameter: "Test string",
                                                    value: 42,
                                                }
                                            ],
                                            tag: "Test string",
                                            webhook: "Test string",
                                        },
                                    }
                                ],
                                form: {
                                    parameters: [
                                        {
                                            defaultValue: 42,
                                            displayName: "Test string",
                                            entityType: "Test string",
                                            fillBehavior: {
                                                initialPromptFulfillment: {
                                                    conditionalCases: [
                                                        {
                                                            cases: [
                                                                {
                                                                    caseContent: [
                                                                        {
                                                                            additionalCases: undefined,
                                                                            message: {
                                                                                conversationSuccess: {
                                                                                    metadata: {
                                                                                        A: 42
                                                                                    },
                                                                                },
                                                                                endInteraction: {
                                                                                },
                                                                                liveAgentHandoff: {
                                                                                    metadata: {
                                                                                        A: 42
                                                                                    },
                                                                                },
                                                                                mixedAudio: {
                                                                                    segments: [
                                                                                        {
                                                                                            allowPlaybackInterruption: true,
                                                                                            audio: "Test string",
                                                                                            uri: "Test string",
                                                                                        }
                                                                                    ],
                                                                                },
                                                                                outputAudioText: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    ssml: "Test string",
                                                                                    text: "Test string",
                                                                                },
                                                                                payload: {
                                                                                    A: 42
                                                                                },
                                                                                playAudio: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audioUri: "Test string",
                                                                                },
                                                                                telephonyTransferCall: {
                                                                                    phoneNumber: "Test string",
                                                                                },
                                                                                text: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    text: [
                                                                                        "Test string"
                                                                                    ],
                                                                                },
                                                                            },
                                                                        }
                                                                    ],
                                                                    condition: "Test string",
                                                                }
                                                            ],
                                                        }
                                                    ],
                                                    messages: [
                                                        {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        }
                                                    ],
                                                    returnPartialResponses: true,
                                                    setParameterActions: [
                                                        {
                                                            parameter: "Test string",
                                                            value: 42,
                                                        }
                                                    ],
                                                    tag: "Test string",
                                                    webhook: "Test string",
                                                },
                                                repromptEventHandlers: [
                                                    {
                                                        event: "Test string",
                                                        name: "Test string",
                                                        targetFlow: "Test string",
                                                        targetPage: "Test string",
                                                        triggerFulfillment: {
                                                            conditionalCases: [
                                                                {
                                                                    cases: [
                                                                        {
                                                                            caseContent: [
                                                                                {
                                                                                    additionalCases: undefined,
                                                                                    message: {
                                                                                        conversationSuccess: {
                                                                                            metadata: {
                                                                                                A: 42
                                                                                            },
                                                                                        },
                                                                                        endInteraction: {
                                                                                        },
                                                                                        liveAgentHandoff: {
                                                                                            metadata: {
                                                                                                A: 42
                                                                                            },
                                                                                        },
                                                                                        mixedAudio: {
                                                                                            segments: [
                                                                                                {
                                                                                                    allowPlaybackInterruption: true,
                                                                                                    audio: "Test string",
                                                                                                    uri: "Test string",
                                                                                                }
                                                                                            ],
                                                                                        },
                                                                                        outputAudioText: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            ssml: "Test string",
                                                                                            text: "Test string",
                                                                                        },
                                                                                        payload: {
                                                                                            A: 42
                                                                                        },
                                                                                        playAudio: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            audioUri: "Test string",
                                                                                        },
                                                                                        telephonyTransferCall: {
                                                                                            phoneNumber: "Test string",
                                                                                        },
                                                                                        text: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            text: [
                                                                                                "Test string"
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                }
                                                                            ],
                                                                            condition: "Test string",
                                                                        }
                                                                    ],
                                                                }
                                                            ],
                                                            messages: [
                                                                {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                }
                                                            ],
                                                            returnPartialResponses: true,
                                                            setParameterActions: [
                                                                {
                                                                    parameter: "Test string",
                                                                    value: 42,
                                                                }
                                                            ],
                                                            tag: "Test string",
                                                            webhook: "Test string",
                                                        },
                                                    }
                                                ],
                                            },
                                            isList: true,
                                            redact: true,
                                            required: true,
                                        }
                                    ],
                                },
                                name: "Test string",
                                transitionRouteGroups: [
                                    "Test string"
                                ],
                                transitionRoutes: [
                                    {
                                        condition: "Test string",
                                        intent: "Test string",
                                        name: "Test string",
                                        targetFlow: "Test string",
                                        targetPage: "Test string",
                                        triggerFulfillment: {
                                            conditionalCases: [
                                                {
                                                    cases: [
                                                        {
                                                            caseContent: [
                                                                {
                                                                    additionalCases: undefined,
                                                                    message: {
                                                                        conversationSuccess: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        endInteraction: {
                                                                        },
                                                                        liveAgentHandoff: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        mixedAudio: {
                                                                            segments: [
                                                                                {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audio: "Test string",
                                                                                    uri: "Test string",
                                                                                }
                                                                            ],
                                                                        },
                                                                        outputAudioText: {
                                                                            allowPlaybackInterruption: true,
                                                                            ssml: "Test string",
                                                                            text: "Test string",
                                                                        },
                                                                        payload: {
                                                                            A: 42
                                                                        },
                                                                        playAudio: {
                                                                            allowPlaybackInterruption: true,
                                                                            audioUri: "Test string",
                                                                        },
                                                                        telephonyTransferCall: {
                                                                            phoneNumber: "Test string",
                                                                        },
                                                                        text: {
                                                                            allowPlaybackInterruption: true,
                                                                            text: [
                                                                                "Test string"
                                                                            ],
                                                                        },
                                                                    },
                                                                }
                                                            ],
                                                            condition: "Test string",
                                                        }
                                                    ],
                                                }
                                            ],
                                            messages: [
                                                {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                }
                                            ],
                                            returnPartialResponses: true,
                                            setParameterActions: [
                                                {
                                                    parameter: "Test string",
                                                    value: 42,
                                                }
                                            ],
                                            tag: "Test string",
                                            webhook: "Test string",
                                        },
                                    }
                                ],
                            },
                            diagnosticInfo: {
                                A: 42
                            },
                            differences: [
                                {
                                    description: "Test string",
                                    type: "Test string",
                                }
                            ],
                            sessionParameters: {
                                A: 42
                            },
                            status: {
                                code: 42,
                                details: [
                                    {
                                        A: 42
                                    }
                                ],
                                message: "Test string",
                            },
                            textResponses: [
                                {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                }
                            ],
                            triggeredIntent: {
                                description: "Test string",
                                displayName: "Test string",
                                isFallback: true,
                                labels: {
                                    A: "Test string"
                                },
                                name: "Test string",
                                parameters: [
                                    {
                                        entityType: "Test string",
                                        id: "Test string",
                                        isList: true,
                                        redact: true,
                                    }
                                ],
                                priority: 42,
                                trainingPhrases: [
                                    {
                                        id: "Test string",
                                        parts: [
                                            {
                                                parameterId: "Test string",
                                                text: "Test string",
                                            }
                                        ],
                                        repeatCount: 42,
                                    }
                                ],
                            },
                        },
                    }
                ],
                environment: "Test string",
                name: "Test string",
                testResult: "Test string",
                testTime: "Test string",
            },
            name: "Test string",
            notes: "Test string",
            tags: [
                "Test string"
            ],
            testCaseConversationTurns: [
                {
                    userInput: {
                        enableSentimentAnalysis: true,
                        injectedParameters: {
                            A: 42
                        },
                        input: {
                            audio: {
                                audio: "Test string",
                                config: {
                                    audioEncoding: "Test string",
                                    enableWordInfo: true,
                                    model: "Test string",
                                    modelVariant: "Test string",
                                    phraseHints: [
                                        "Test string"
                                    ],
                                    sampleRateHertz: 42,
                                    singleUtterance: true,
                                },
                            },
                            dtmf: {
                                digits: "Test string",
                                finishDigit: "Test string",
                            },
                            event: {
                                event: "Test string",
                            },
                            intent: {
                                intent: "Test string",
                            },
                            languageCode: "Test string",
                            text: {
                                text: "Test string",
                            },
                        },
                        isWebhookEnabled: true,
                    },
                    virtualAgentOutput: {
                        currentPage: {
                            displayName: "Test string",
                            entryFulfillment: {
                                conditionalCases: [
                                    {
                                        cases: [
                                            {
                                                caseContent: [
                                                    {
                                                        additionalCases: undefined,
                                                        message: {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        },
                                                    }
                                                ],
                                                condition: "Test string",
                                            }
                                        ],
                                    }
                                ],
                                messages: [
                                    {
                                        conversationSuccess: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        endInteraction: {
                                        },
                                        liveAgentHandoff: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        mixedAudio: {
                                            segments: [
                                                {
                                                    allowPlaybackInterruption: true,
                                                    audio: "Test string",
                                                    uri: "Test string",
                                                }
                                            ],
                                        },
                                        outputAudioText: {
                                            allowPlaybackInterruption: true,
                                            ssml: "Test string",
                                            text: "Test string",
                                        },
                                        payload: {
                                            A: 42
                                        },
                                        playAudio: {
                                            allowPlaybackInterruption: true,
                                            audioUri: "Test string",
                                        },
                                        telephonyTransferCall: {
                                            phoneNumber: "Test string",
                                        },
                                        text: {
                                            allowPlaybackInterruption: true,
                                            text: [
                                                "Test string"
                                            ],
                                        },
                                    }
                                ],
                                returnPartialResponses: true,
                                setParameterActions: [
                                    {
                                        parameter: "Test string",
                                        value: 42,
                                    }
                                ],
                                tag: "Test string",
                                webhook: "Test string",
                            },
                            eventHandlers: [
                                {
                                    event: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                            form: {
                                parameters: [
                                    {
                                        defaultValue: 42,
                                        displayName: "Test string",
                                        entityType: "Test string",
                                        fillBehavior: {
                                            initialPromptFulfillment: {
                                                conditionalCases: [
                                                    {
                                                        cases: [
                                                            {
                                                                caseContent: [
                                                                    {
                                                                        additionalCases: undefined,
                                                                        message: {
                                                                            conversationSuccess: {
                                                                                metadata: {
                                                                                    A: 42
                                                                                },
                                                                            },
                                                                            endInteraction: {
                                                                            },
                                                                            liveAgentHandoff: {
                                                                                metadata: {
                                                                                    A: 42
                                                                                },
                                                                            },
                                                                            mixedAudio: {
                                                                                segments: [
                                                                                    {
                                                                                        allowPlaybackInterruption: true,
                                                                                        audio: "Test string",
                                                                                        uri: "Test string",
                                                                                    }
                                                                                ],
                                                                            },
                                                                            outputAudioText: {
                                                                                allowPlaybackInterruption: true,
                                                                                ssml: "Test string",
                                                                                text: "Test string",
                                                                            },
                                                                            payload: {
                                                                                A: 42
                                                                            },
                                                                            playAudio: {
                                                                                allowPlaybackInterruption: true,
                                                                                audioUri: "Test string",
                                                                            },
                                                                            telephonyTransferCall: {
                                                                                phoneNumber: "Test string",
                                                                            },
                                                                            text: {
                                                                                allowPlaybackInterruption: true,
                                                                                text: [
                                                                                    "Test string"
                                                                                ],
                                                                            },
                                                                        },
                                                                    }
                                                                ],
                                                                condition: "Test string",
                                                            }
                                                        ],
                                                    }
                                                ],
                                                messages: [
                                                    {
                                                        conversationSuccess: {
                                                            metadata: {
                                                                A: 42
                                                            },
                                                        },
                                                        endInteraction: {
                                                        },
                                                        liveAgentHandoff: {
                                                            metadata: {
                                                                A: 42
                                                            },
                                                        },
                                                        mixedAudio: {
                                                            segments: [
                                                                {
                                                                    allowPlaybackInterruption: true,
                                                                    audio: "Test string",
                                                                    uri: "Test string",
                                                                }
                                                            ],
                                                        },
                                                        outputAudioText: {
                                                            allowPlaybackInterruption: true,
                                                            ssml: "Test string",
                                                            text: "Test string",
                                                        },
                                                        payload: {
                                                            A: 42
                                                        },
                                                        playAudio: {
                                                            allowPlaybackInterruption: true,
                                                            audioUri: "Test string",
                                                        },
                                                        telephonyTransferCall: {
                                                            phoneNumber: "Test string",
                                                        },
                                                        text: {
                                                            allowPlaybackInterruption: true,
                                                            text: [
                                                                "Test string"
                                                            ],
                                                        },
                                                    }
                                                ],
                                                returnPartialResponses: true,
                                                setParameterActions: [
                                                    {
                                                        parameter: "Test string",
                                                        value: 42,
                                                    }
                                                ],
                                                tag: "Test string",
                                                webhook: "Test string",
                                            },
                                            repromptEventHandlers: [
                                                {
                                                    event: "Test string",
                                                    name: "Test string",
                                                    targetFlow: "Test string",
                                                    targetPage: "Test string",
                                                    triggerFulfillment: {
                                                        conditionalCases: [
                                                            {
                                                                cases: [
                                                                    {
                                                                        caseContent: [
                                                                            {
                                                                                additionalCases: undefined,
                                                                                message: {
                                                                                    conversationSuccess: {
                                                                                        metadata: {
                                                                                            A: 42
                                                                                        },
                                                                                    },
                                                                                    endInteraction: {
                                                                                    },
                                                                                    liveAgentHandoff: {
                                                                                        metadata: {
                                                                                            A: 42
                                                                                        },
                                                                                    },
                                                                                    mixedAudio: {
                                                                                        segments: [
                                                                                            {
                                                                                                allowPlaybackInterruption: true,
                                                                                                audio: "Test string",
                                                                                                uri: "Test string",
                                                                                            }
                                                                                        ],
                                                                                    },
                                                                                    outputAudioText: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        ssml: "Test string",
                                                                                        text: "Test string",
                                                                                    },
                                                                                    payload: {
                                                                                        A: 42
                                                                                    },
                                                                                    playAudio: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        audioUri: "Test string",
                                                                                    },
                                                                                    telephonyTransferCall: {
                                                                                        phoneNumber: "Test string",
                                                                                    },
                                                                                    text: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        text: [
                                                                                            "Test string"
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            }
                                                                        ],
                                                                        condition: "Test string",
                                                                    }
                                                                ],
                                                            }
                                                        ],
                                                        messages: [
                                                            {
                                                                conversationSuccess: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                endInteraction: {
                                                                },
                                                                liveAgentHandoff: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                mixedAudio: {
                                                                    segments: [
                                                                        {
                                                                            allowPlaybackInterruption: true,
                                                                            audio: "Test string",
                                                                            uri: "Test string",
                                                                        }
                                                                    ],
                                                                },
                                                                outputAudioText: {
                                                                    allowPlaybackInterruption: true,
                                                                    ssml: "Test string",
                                                                    text: "Test string",
                                                                },
                                                                payload: {
                                                                    A: 42
                                                                },
                                                                playAudio: {
                                                                    allowPlaybackInterruption: true,
                                                                    audioUri: "Test string",
                                                                },
                                                                telephonyTransferCall: {
                                                                    phoneNumber: "Test string",
                                                                },
                                                                text: {
                                                                    allowPlaybackInterruption: true,
                                                                    text: [
                                                                        "Test string"
                                                                    ],
                                                                },
                                                            }
                                                        ],
                                                        returnPartialResponses: true,
                                                        setParameterActions: [
                                                            {
                                                                parameter: "Test string",
                                                                value: 42,
                                                            }
                                                        ],
                                                        tag: "Test string",
                                                        webhook: "Test string",
                                                    },
                                                }
                                            ],
                                        },
                                        isList: true,
                                        redact: true,
                                        required: true,
                                    }
                                ],
                            },
                            name: "Test string",
                            transitionRouteGroups: [
                                "Test string"
                            ],
                            transitionRoutes: [
                                {
                                    condition: "Test string",
                                    intent: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                        },
                        diagnosticInfo: {
                            A: 42
                        },
                        differences: [
                            {
                                description: "Test string",
                                type: "Test string",
                            }
                        ],
                        sessionParameters: {
                            A: 42
                        },
                        status: {
                            code: 42,
                            details: [
                                {
                                    A: 42
                                }
                            ],
                            message: "Test string",
                        },
                        textResponses: [
                            {
                                allowPlaybackInterruption: true,
                                text: [
                                    "Test string"
                                ],
                            }
                        ],
                        triggeredIntent: {
                            description: "Test string",
                            displayName: "Test string",
                            isFallback: true,
                            labels: {
                                A: "Test string"
                            },
                            name: "Test string",
                            parameters: [
                                {
                                    entityType: "Test string",
                                    id: "Test string",
                                    isList: true,
                                    redact: true,
                                }
                            ],
                            priority: 42,
                            trainingPhrases: [
                                {
                                    id: "Test string",
                                    parts: [
                                        {
                                            parameterId: "Test string",
                                            text: "Test string",
                                        }
                                    ],
                                    repeatCount: 42,
                                }
                            ],
                        },
                    },
                }
            ],
            testConfig: {
                flow: "Test string",
                page: "Test string",
                trackingParameters: [
                    "Test string"
                ],
            },
        });
        /**
         * Exports the test cases under the agent to a Cloud Storage bucket or a local file. Filter can be applied to export a subset of test cases. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`:
         * ExportTestCasesMetadata - `response`: ExportTestCasesResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.testCases.export({
            parent: "Test string",
        }, {
            dataFormat: "Test string",
            filter: "Test string",
            gcsUri: "Test string",
        });
        /** Gets a test case. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.get({
            name: "Test string",
        });
        /**
         * Imports the test cases from a Cloud Storage bucket or a local file. It always creates new test cases and won't overwrite any existing ones. The provided ID in the imported test case is
         * neglected. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following
         * method-specific fields: - `metadata`: ImportTestCasesMetadata - `response`: ImportTestCasesResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.testCases.import({
            parent: "Test string",
        }, {
            content: "Test string",
            gcsUri: "Test string",
        });
        /** Fetches a list of test cases for a given agent. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Updates the specified test case. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            creationTime: "Test string",
            displayName: "Test string",
            lastTestResult: {
                conversationTurns: [
                    {
                        userInput: {
                            enableSentimentAnalysis: true,
                            injectedParameters: {
                                A: 42
                            },
                            input: {
                                audio: {
                                    audio: "Test string",
                                    config: {
                                        audioEncoding: "Test string",
                                        enableWordInfo: true,
                                        model: "Test string",
                                        modelVariant: "Test string",
                                        phraseHints: [
                                            "Test string"
                                        ],
                                        sampleRateHertz: 42,
                                        singleUtterance: true,
                                    },
                                },
                                dtmf: {
                                    digits: "Test string",
                                    finishDigit: "Test string",
                                },
                                event: {
                                    event: "Test string",
                                },
                                intent: {
                                    intent: "Test string",
                                },
                                languageCode: "Test string",
                                text: {
                                    text: "Test string",
                                },
                            },
                            isWebhookEnabled: true,
                        },
                        virtualAgentOutput: {
                            currentPage: {
                                displayName: "Test string",
                                entryFulfillment: {
                                    conditionalCases: [
                                        {
                                            cases: [
                                                {
                                                    caseContent: [
                                                        {
                                                            additionalCases: undefined,
                                                            message: {
                                                                conversationSuccess: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                endInteraction: {
                                                                },
                                                                liveAgentHandoff: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                mixedAudio: {
                                                                    segments: [
                                                                        {
                                                                            allowPlaybackInterruption: true,
                                                                            audio: "Test string",
                                                                            uri: "Test string",
                                                                        }
                                                                    ],
                                                                },
                                                                outputAudioText: {
                                                                    allowPlaybackInterruption: true,
                                                                    ssml: "Test string",
                                                                    text: "Test string",
                                                                },
                                                                payload: {
                                                                    A: 42
                                                                },
                                                                playAudio: {
                                                                    allowPlaybackInterruption: true,
                                                                    audioUri: "Test string",
                                                                },
                                                                telephonyTransferCall: {
                                                                    phoneNumber: "Test string",
                                                                },
                                                                text: {
                                                                    allowPlaybackInterruption: true,
                                                                    text: [
                                                                        "Test string"
                                                                    ],
                                                                },
                                                            },
                                                        }
                                                    ],
                                                    condition: "Test string",
                                                }
                                            ],
                                        }
                                    ],
                                    messages: [
                                        {
                                            conversationSuccess: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            endInteraction: {
                                            },
                                            liveAgentHandoff: {
                                                metadata: {
                                                    A: 42
                                                },
                                            },
                                            mixedAudio: {
                                                segments: [
                                                    {
                                                        allowPlaybackInterruption: true,
                                                        audio: "Test string",
                                                        uri: "Test string",
                                                    }
                                                ],
                                            },
                                            outputAudioText: {
                                                allowPlaybackInterruption: true,
                                                ssml: "Test string",
                                                text: "Test string",
                                            },
                                            payload: {
                                                A: 42
                                            },
                                            playAudio: {
                                                allowPlaybackInterruption: true,
                                                audioUri: "Test string",
                                            },
                                            telephonyTransferCall: {
                                                phoneNumber: "Test string",
                                            },
                                            text: {
                                                allowPlaybackInterruption: true,
                                                text: [
                                                    "Test string"
                                                ],
                                            },
                                        }
                                    ],
                                    returnPartialResponses: true,
                                    setParameterActions: [
                                        {
                                            parameter: "Test string",
                                            value: 42,
                                        }
                                    ],
                                    tag: "Test string",
                                    webhook: "Test string",
                                },
                                eventHandlers: [
                                    {
                                        event: "Test string",
                                        name: "Test string",
                                        targetFlow: "Test string",
                                        targetPage: "Test string",
                                        triggerFulfillment: {
                                            conditionalCases: [
                                                {
                                                    cases: [
                                                        {
                                                            caseContent: [
                                                                {
                                                                    additionalCases: undefined,
                                                                    message: {
                                                                        conversationSuccess: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        endInteraction: {
                                                                        },
                                                                        liveAgentHandoff: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        mixedAudio: {
                                                                            segments: [
                                                                                {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audio: "Test string",
                                                                                    uri: "Test string",
                                                                                }
                                                                            ],
                                                                        },
                                                                        outputAudioText: {
                                                                            allowPlaybackInterruption: true,
                                                                            ssml: "Test string",
                                                                            text: "Test string",
                                                                        },
                                                                        payload: {
                                                                            A: 42
                                                                        },
                                                                        playAudio: {
                                                                            allowPlaybackInterruption: true,
                                                                            audioUri: "Test string",
                                                                        },
                                                                        telephonyTransferCall: {
                                                                            phoneNumber: "Test string",
                                                                        },
                                                                        text: {
                                                                            allowPlaybackInterruption: true,
                                                                            text: [
                                                                                "Test string"
                                                                            ],
                                                                        },
                                                                    },
                                                                }
                                                            ],
                                                            condition: "Test string",
                                                        }
                                                    ],
                                                }
                                            ],
                                            messages: [
                                                {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                }
                                            ],
                                            returnPartialResponses: true,
                                            setParameterActions: [
                                                {
                                                    parameter: "Test string",
                                                    value: 42,
                                                }
                                            ],
                                            tag: "Test string",
                                            webhook: "Test string",
                                        },
                                    }
                                ],
                                form: {
                                    parameters: [
                                        {
                                            defaultValue: 42,
                                            displayName: "Test string",
                                            entityType: "Test string",
                                            fillBehavior: {
                                                initialPromptFulfillment: {
                                                    conditionalCases: [
                                                        {
                                                            cases: [
                                                                {
                                                                    caseContent: [
                                                                        {
                                                                            additionalCases: undefined,
                                                                            message: {
                                                                                conversationSuccess: {
                                                                                    metadata: {
                                                                                        A: 42
                                                                                    },
                                                                                },
                                                                                endInteraction: {
                                                                                },
                                                                                liveAgentHandoff: {
                                                                                    metadata: {
                                                                                        A: 42
                                                                                    },
                                                                                },
                                                                                mixedAudio: {
                                                                                    segments: [
                                                                                        {
                                                                                            allowPlaybackInterruption: true,
                                                                                            audio: "Test string",
                                                                                            uri: "Test string",
                                                                                        }
                                                                                    ],
                                                                                },
                                                                                outputAudioText: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    ssml: "Test string",
                                                                                    text: "Test string",
                                                                                },
                                                                                payload: {
                                                                                    A: 42
                                                                                },
                                                                                playAudio: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audioUri: "Test string",
                                                                                },
                                                                                telephonyTransferCall: {
                                                                                    phoneNumber: "Test string",
                                                                                },
                                                                                text: {
                                                                                    allowPlaybackInterruption: true,
                                                                                    text: [
                                                                                        "Test string"
                                                                                    ],
                                                                                },
                                                                            },
                                                                        }
                                                                    ],
                                                                    condition: "Test string",
                                                                }
                                                            ],
                                                        }
                                                    ],
                                                    messages: [
                                                        {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        }
                                                    ],
                                                    returnPartialResponses: true,
                                                    setParameterActions: [
                                                        {
                                                            parameter: "Test string",
                                                            value: 42,
                                                        }
                                                    ],
                                                    tag: "Test string",
                                                    webhook: "Test string",
                                                },
                                                repromptEventHandlers: [
                                                    {
                                                        event: "Test string",
                                                        name: "Test string",
                                                        targetFlow: "Test string",
                                                        targetPage: "Test string",
                                                        triggerFulfillment: {
                                                            conditionalCases: [
                                                                {
                                                                    cases: [
                                                                        {
                                                                            caseContent: [
                                                                                {
                                                                                    additionalCases: undefined,
                                                                                    message: {
                                                                                        conversationSuccess: {
                                                                                            metadata: {
                                                                                                A: 42
                                                                                            },
                                                                                        },
                                                                                        endInteraction: {
                                                                                        },
                                                                                        liveAgentHandoff: {
                                                                                            metadata: {
                                                                                                A: 42
                                                                                            },
                                                                                        },
                                                                                        mixedAudio: {
                                                                                            segments: [
                                                                                                {
                                                                                                    allowPlaybackInterruption: true,
                                                                                                    audio: "Test string",
                                                                                                    uri: "Test string",
                                                                                                }
                                                                                            ],
                                                                                        },
                                                                                        outputAudioText: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            ssml: "Test string",
                                                                                            text: "Test string",
                                                                                        },
                                                                                        payload: {
                                                                                            A: 42
                                                                                        },
                                                                                        playAudio: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            audioUri: "Test string",
                                                                                        },
                                                                                        telephonyTransferCall: {
                                                                                            phoneNumber: "Test string",
                                                                                        },
                                                                                        text: {
                                                                                            allowPlaybackInterruption: true,
                                                                                            text: [
                                                                                                "Test string"
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                }
                                                                            ],
                                                                            condition: "Test string",
                                                                        }
                                                                    ],
                                                                }
                                                            ],
                                                            messages: [
                                                                {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                }
                                                            ],
                                                            returnPartialResponses: true,
                                                            setParameterActions: [
                                                                {
                                                                    parameter: "Test string",
                                                                    value: 42,
                                                                }
                                                            ],
                                                            tag: "Test string",
                                                            webhook: "Test string",
                                                        },
                                                    }
                                                ],
                                            },
                                            isList: true,
                                            redact: true,
                                            required: true,
                                        }
                                    ],
                                },
                                name: "Test string",
                                transitionRouteGroups: [
                                    "Test string"
                                ],
                                transitionRoutes: [
                                    {
                                        condition: "Test string",
                                        intent: "Test string",
                                        name: "Test string",
                                        targetFlow: "Test string",
                                        targetPage: "Test string",
                                        triggerFulfillment: {
                                            conditionalCases: [
                                                {
                                                    cases: [
                                                        {
                                                            caseContent: [
                                                                {
                                                                    additionalCases: undefined,
                                                                    message: {
                                                                        conversationSuccess: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        endInteraction: {
                                                                        },
                                                                        liveAgentHandoff: {
                                                                            metadata: {
                                                                                A: 42
                                                                            },
                                                                        },
                                                                        mixedAudio: {
                                                                            segments: [
                                                                                {
                                                                                    allowPlaybackInterruption: true,
                                                                                    audio: "Test string",
                                                                                    uri: "Test string",
                                                                                }
                                                                            ],
                                                                        },
                                                                        outputAudioText: {
                                                                            allowPlaybackInterruption: true,
                                                                            ssml: "Test string",
                                                                            text: "Test string",
                                                                        },
                                                                        payload: {
                                                                            A: 42
                                                                        },
                                                                        playAudio: {
                                                                            allowPlaybackInterruption: true,
                                                                            audioUri: "Test string",
                                                                        },
                                                                        telephonyTransferCall: {
                                                                            phoneNumber: "Test string",
                                                                        },
                                                                        text: {
                                                                            allowPlaybackInterruption: true,
                                                                            text: [
                                                                                "Test string"
                                                                            ],
                                                                        },
                                                                    },
                                                                }
                                                            ],
                                                            condition: "Test string",
                                                        }
                                                    ],
                                                }
                                            ],
                                            messages: [
                                                {
                                                    conversationSuccess: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    endInteraction: {
                                                    },
                                                    liveAgentHandoff: {
                                                        metadata: {
                                                            A: 42
                                                        },
                                                    },
                                                    mixedAudio: {
                                                        segments: [
                                                            {
                                                                allowPlaybackInterruption: true,
                                                                audio: "Test string",
                                                                uri: "Test string",
                                                            }
                                                        ],
                                                    },
                                                    outputAudioText: {
                                                        allowPlaybackInterruption: true,
                                                        ssml: "Test string",
                                                        text: "Test string",
                                                    },
                                                    payload: {
                                                        A: 42
                                                    },
                                                    playAudio: {
                                                        allowPlaybackInterruption: true,
                                                        audioUri: "Test string",
                                                    },
                                                    telephonyTransferCall: {
                                                        phoneNumber: "Test string",
                                                    },
                                                    text: {
                                                        allowPlaybackInterruption: true,
                                                        text: [
                                                            "Test string"
                                                        ],
                                                    },
                                                }
                                            ],
                                            returnPartialResponses: true,
                                            setParameterActions: [
                                                {
                                                    parameter: "Test string",
                                                    value: 42,
                                                }
                                            ],
                                            tag: "Test string",
                                            webhook: "Test string",
                                        },
                                    }
                                ],
                            },
                            diagnosticInfo: {
                                A: 42
                            },
                            differences: [
                                {
                                    description: "Test string",
                                    type: "Test string",
                                }
                            ],
                            sessionParameters: {
                                A: 42
                            },
                            status: {
                                code: 42,
                                details: [
                                    {
                                        A: 42
                                    }
                                ],
                                message: "Test string",
                            },
                            textResponses: [
                                {
                                    allowPlaybackInterruption: true,
                                    text: [
                                        "Test string"
                                    ],
                                }
                            ],
                            triggeredIntent: {
                                description: "Test string",
                                displayName: "Test string",
                                isFallback: true,
                                labels: {
                                    A: "Test string"
                                },
                                name: "Test string",
                                parameters: [
                                    {
                                        entityType: "Test string",
                                        id: "Test string",
                                        isList: true,
                                        redact: true,
                                    }
                                ],
                                priority: 42,
                                trainingPhrases: [
                                    {
                                        id: "Test string",
                                        parts: [
                                            {
                                                parameterId: "Test string",
                                                text: "Test string",
                                            }
                                        ],
                                        repeatCount: 42,
                                    }
                                ],
                            },
                        },
                    }
                ],
                environment: "Test string",
                name: "Test string",
                testResult: "Test string",
                testTime: "Test string",
            },
            name: "Test string",
            notes: "Test string",
            tags: [
                "Test string"
            ],
            testCaseConversationTurns: [
                {
                    userInput: {
                        enableSentimentAnalysis: true,
                        injectedParameters: {
                            A: 42
                        },
                        input: {
                            audio: {
                                audio: "Test string",
                                config: {
                                    audioEncoding: "Test string",
                                    enableWordInfo: true,
                                    model: "Test string",
                                    modelVariant: "Test string",
                                    phraseHints: [
                                        "Test string"
                                    ],
                                    sampleRateHertz: 42,
                                    singleUtterance: true,
                                },
                            },
                            dtmf: {
                                digits: "Test string",
                                finishDigit: "Test string",
                            },
                            event: {
                                event: "Test string",
                            },
                            intent: {
                                intent: "Test string",
                            },
                            languageCode: "Test string",
                            text: {
                                text: "Test string",
                            },
                        },
                        isWebhookEnabled: true,
                    },
                    virtualAgentOutput: {
                        currentPage: {
                            displayName: "Test string",
                            entryFulfillment: {
                                conditionalCases: [
                                    {
                                        cases: [
                                            {
                                                caseContent: [
                                                    {
                                                        additionalCases: undefined,
                                                        message: {
                                                            conversationSuccess: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            endInteraction: {
                                                            },
                                                            liveAgentHandoff: {
                                                                metadata: {
                                                                    A: 42
                                                                },
                                                            },
                                                            mixedAudio: {
                                                                segments: [
                                                                    {
                                                                        allowPlaybackInterruption: true,
                                                                        audio: "Test string",
                                                                        uri: "Test string",
                                                                    }
                                                                ],
                                                            },
                                                            outputAudioText: {
                                                                allowPlaybackInterruption: true,
                                                                ssml: "Test string",
                                                                text: "Test string",
                                                            },
                                                            payload: {
                                                                A: 42
                                                            },
                                                            playAudio: {
                                                                allowPlaybackInterruption: true,
                                                                audioUri: "Test string",
                                                            },
                                                            telephonyTransferCall: {
                                                                phoneNumber: "Test string",
                                                            },
                                                            text: {
                                                                allowPlaybackInterruption: true,
                                                                text: [
                                                                    "Test string"
                                                                ],
                                                            },
                                                        },
                                                    }
                                                ],
                                                condition: "Test string",
                                            }
                                        ],
                                    }
                                ],
                                messages: [
                                    {
                                        conversationSuccess: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        endInteraction: {
                                        },
                                        liveAgentHandoff: {
                                            metadata: {
                                                A: 42
                                            },
                                        },
                                        mixedAudio: {
                                            segments: [
                                                {
                                                    allowPlaybackInterruption: true,
                                                    audio: "Test string",
                                                    uri: "Test string",
                                                }
                                            ],
                                        },
                                        outputAudioText: {
                                            allowPlaybackInterruption: true,
                                            ssml: "Test string",
                                            text: "Test string",
                                        },
                                        payload: {
                                            A: 42
                                        },
                                        playAudio: {
                                            allowPlaybackInterruption: true,
                                            audioUri: "Test string",
                                        },
                                        telephonyTransferCall: {
                                            phoneNumber: "Test string",
                                        },
                                        text: {
                                            allowPlaybackInterruption: true,
                                            text: [
                                                "Test string"
                                            ],
                                        },
                                    }
                                ],
                                returnPartialResponses: true,
                                setParameterActions: [
                                    {
                                        parameter: "Test string",
                                        value: 42,
                                    }
                                ],
                                tag: "Test string",
                                webhook: "Test string",
                            },
                            eventHandlers: [
                                {
                                    event: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                            form: {
                                parameters: [
                                    {
                                        defaultValue: 42,
                                        displayName: "Test string",
                                        entityType: "Test string",
                                        fillBehavior: {
                                            initialPromptFulfillment: {
                                                conditionalCases: [
                                                    {
                                                        cases: [
                                                            {
                                                                caseContent: [
                                                                    {
                                                                        additionalCases: undefined,
                                                                        message: {
                                                                            conversationSuccess: {
                                                                                metadata: {
                                                                                    A: 42
                                                                                },
                                                                            },
                                                                            endInteraction: {
                                                                            },
                                                                            liveAgentHandoff: {
                                                                                metadata: {
                                                                                    A: 42
                                                                                },
                                                                            },
                                                                            mixedAudio: {
                                                                                segments: [
                                                                                    {
                                                                                        allowPlaybackInterruption: true,
                                                                                        audio: "Test string",
                                                                                        uri: "Test string",
                                                                                    }
                                                                                ],
                                                                            },
                                                                            outputAudioText: {
                                                                                allowPlaybackInterruption: true,
                                                                                ssml: "Test string",
                                                                                text: "Test string",
                                                                            },
                                                                            payload: {
                                                                                A: 42
                                                                            },
                                                                            playAudio: {
                                                                                allowPlaybackInterruption: true,
                                                                                audioUri: "Test string",
                                                                            },
                                                                            telephonyTransferCall: {
                                                                                phoneNumber: "Test string",
                                                                            },
                                                                            text: {
                                                                                allowPlaybackInterruption: true,
                                                                                text: [
                                                                                    "Test string"
                                                                                ],
                                                                            },
                                                                        },
                                                                    }
                                                                ],
                                                                condition: "Test string",
                                                            }
                                                        ],
                                                    }
                                                ],
                                                messages: [
                                                    {
                                                        conversationSuccess: {
                                                            metadata: {
                                                                A: 42
                                                            },
                                                        },
                                                        endInteraction: {
                                                        },
                                                        liveAgentHandoff: {
                                                            metadata: {
                                                                A: 42
                                                            },
                                                        },
                                                        mixedAudio: {
                                                            segments: [
                                                                {
                                                                    allowPlaybackInterruption: true,
                                                                    audio: "Test string",
                                                                    uri: "Test string",
                                                                }
                                                            ],
                                                        },
                                                        outputAudioText: {
                                                            allowPlaybackInterruption: true,
                                                            ssml: "Test string",
                                                            text: "Test string",
                                                        },
                                                        payload: {
                                                            A: 42
                                                        },
                                                        playAudio: {
                                                            allowPlaybackInterruption: true,
                                                            audioUri: "Test string",
                                                        },
                                                        telephonyTransferCall: {
                                                            phoneNumber: "Test string",
                                                        },
                                                        text: {
                                                            allowPlaybackInterruption: true,
                                                            text: [
                                                                "Test string"
                                                            ],
                                                        },
                                                    }
                                                ],
                                                returnPartialResponses: true,
                                                setParameterActions: [
                                                    {
                                                        parameter: "Test string",
                                                        value: 42,
                                                    }
                                                ],
                                                tag: "Test string",
                                                webhook: "Test string",
                                            },
                                            repromptEventHandlers: [
                                                {
                                                    event: "Test string",
                                                    name: "Test string",
                                                    targetFlow: "Test string",
                                                    targetPage: "Test string",
                                                    triggerFulfillment: {
                                                        conditionalCases: [
                                                            {
                                                                cases: [
                                                                    {
                                                                        caseContent: [
                                                                            {
                                                                                additionalCases: undefined,
                                                                                message: {
                                                                                    conversationSuccess: {
                                                                                        metadata: {
                                                                                            A: 42
                                                                                        },
                                                                                    },
                                                                                    endInteraction: {
                                                                                    },
                                                                                    liveAgentHandoff: {
                                                                                        metadata: {
                                                                                            A: 42
                                                                                        },
                                                                                    },
                                                                                    mixedAudio: {
                                                                                        segments: [
                                                                                            {
                                                                                                allowPlaybackInterruption: true,
                                                                                                audio: "Test string",
                                                                                                uri: "Test string",
                                                                                            }
                                                                                        ],
                                                                                    },
                                                                                    outputAudioText: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        ssml: "Test string",
                                                                                        text: "Test string",
                                                                                    },
                                                                                    payload: {
                                                                                        A: 42
                                                                                    },
                                                                                    playAudio: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        audioUri: "Test string",
                                                                                    },
                                                                                    telephonyTransferCall: {
                                                                                        phoneNumber: "Test string",
                                                                                    },
                                                                                    text: {
                                                                                        allowPlaybackInterruption: true,
                                                                                        text: [
                                                                                            "Test string"
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            }
                                                                        ],
                                                                        condition: "Test string",
                                                                    }
                                                                ],
                                                            }
                                                        ],
                                                        messages: [
                                                            {
                                                                conversationSuccess: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                endInteraction: {
                                                                },
                                                                liveAgentHandoff: {
                                                                    metadata: {
                                                                        A: 42
                                                                    },
                                                                },
                                                                mixedAudio: {
                                                                    segments: [
                                                                        {
                                                                            allowPlaybackInterruption: true,
                                                                            audio: "Test string",
                                                                            uri: "Test string",
                                                                        }
                                                                    ],
                                                                },
                                                                outputAudioText: {
                                                                    allowPlaybackInterruption: true,
                                                                    ssml: "Test string",
                                                                    text: "Test string",
                                                                },
                                                                payload: {
                                                                    A: 42
                                                                },
                                                                playAudio: {
                                                                    allowPlaybackInterruption: true,
                                                                    audioUri: "Test string",
                                                                },
                                                                telephonyTransferCall: {
                                                                    phoneNumber: "Test string",
                                                                },
                                                                text: {
                                                                    allowPlaybackInterruption: true,
                                                                    text: [
                                                                        "Test string"
                                                                    ],
                                                                },
                                                            }
                                                        ],
                                                        returnPartialResponses: true,
                                                        setParameterActions: [
                                                            {
                                                                parameter: "Test string",
                                                                value: 42,
                                                            }
                                                        ],
                                                        tag: "Test string",
                                                        webhook: "Test string",
                                                    },
                                                }
                                            ],
                                        },
                                        isList: true,
                                        redact: true,
                                        required: true,
                                    }
                                ],
                            },
                            name: "Test string",
                            transitionRouteGroups: [
                                "Test string"
                            ],
                            transitionRoutes: [
                                {
                                    condition: "Test string",
                                    intent: "Test string",
                                    name: "Test string",
                                    targetFlow: "Test string",
                                    targetPage: "Test string",
                                    triggerFulfillment: {
                                        conditionalCases: [
                                            {
                                                cases: [
                                                    {
                                                        caseContent: [
                                                            {
                                                                additionalCases: undefined,
                                                                message: {
                                                                    conversationSuccess: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    endInteraction: {
                                                                    },
                                                                    liveAgentHandoff: {
                                                                        metadata: {
                                                                            A: 42
                                                                        },
                                                                    },
                                                                    mixedAudio: {
                                                                        segments: [
                                                                            {
                                                                                allowPlaybackInterruption: true,
                                                                                audio: "Test string",
                                                                                uri: "Test string",
                                                                            }
                                                                        ],
                                                                    },
                                                                    outputAudioText: {
                                                                        allowPlaybackInterruption: true,
                                                                        ssml: "Test string",
                                                                        text: "Test string",
                                                                    },
                                                                    payload: {
                                                                        A: 42
                                                                    },
                                                                    playAudio: {
                                                                        allowPlaybackInterruption: true,
                                                                        audioUri: "Test string",
                                                                    },
                                                                    telephonyTransferCall: {
                                                                        phoneNumber: "Test string",
                                                                    },
                                                                    text: {
                                                                        allowPlaybackInterruption: true,
                                                                        text: [
                                                                            "Test string"
                                                                        ],
                                                                    },
                                                                },
                                                            }
                                                        ],
                                                        condition: "Test string",
                                                    }
                                                ],
                                            }
                                        ],
                                        messages: [
                                            {
                                                conversationSuccess: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                endInteraction: {
                                                },
                                                liveAgentHandoff: {
                                                    metadata: {
                                                        A: 42
                                                    },
                                                },
                                                mixedAudio: {
                                                    segments: [
                                                        {
                                                            allowPlaybackInterruption: true,
                                                            audio: "Test string",
                                                            uri: "Test string",
                                                        }
                                                    ],
                                                },
                                                outputAudioText: {
                                                    allowPlaybackInterruption: true,
                                                    ssml: "Test string",
                                                    text: "Test string",
                                                },
                                                payload: {
                                                    A: 42
                                                },
                                                playAudio: {
                                                    allowPlaybackInterruption: true,
                                                    audioUri: "Test string",
                                                },
                                                telephonyTransferCall: {
                                                    phoneNumber: "Test string",
                                                },
                                                text: {
                                                    allowPlaybackInterruption: true,
                                                    text: [
                                                        "Test string"
                                                    ],
                                                },
                                            }
                                        ],
                                        returnPartialResponses: true,
                                        setParameterActions: [
                                            {
                                                parameter: "Test string",
                                                value: 42,
                                            }
                                        ],
                                        tag: "Test string",
                                        webhook: "Test string",
                                    },
                                }
                            ],
                        },
                        diagnosticInfo: {
                            A: 42
                        },
                        differences: [
                            {
                                description: "Test string",
                                type: "Test string",
                            }
                        ],
                        sessionParameters: {
                            A: 42
                        },
                        status: {
                            code: 42,
                            details: [
                                {
                                    A: 42
                                }
                            ],
                            message: "Test string",
                        },
                        textResponses: [
                            {
                                allowPlaybackInterruption: true,
                                text: [
                                    "Test string"
                                ],
                            }
                        ],
                        triggeredIntent: {
                            description: "Test string",
                            displayName: "Test string",
                            isFallback: true,
                            labels: {
                                A: "Test string"
                            },
                            name: "Test string",
                            parameters: [
                                {
                                    entityType: "Test string",
                                    id: "Test string",
                                    isList: true,
                                    redact: true,
                                }
                            ],
                            priority: 42,
                            trainingPhrases: [
                                {
                                    id: "Test string",
                                    parts: [
                                        {
                                            parameterId: "Test string",
                                            text: "Test string",
                                        }
                                    ],
                                    repeatCount: 42,
                                }
                            ],
                        },
                    },
                }
            ],
            testConfig: {
                flow: "Test string",
                page: "Test string",
                trackingParameters: [
                    "Test string"
                ],
            },
        });
        /**
         * Kicks off a test case run. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the
         * following method-specific fields: - `metadata`: RunTestCaseMetadata - `response`: RunTestCaseResponse
         */
        await gapi.client.dialogflow.projects.locations.agents.testCases.run({
            name: "Test string",
        }, {
            environment: "Test string",
        });
        /** Gets a test case result. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.results.get({
            name: "Test string",
        });
        /** Fetches a list of results for a given test case. */
        await gapi.client.dialogflow.projects.locations.agents.testCases.results.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a webhook in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.webhooks.create({
            parent: "Test string",
        }, {
            disabled: true,
            displayName: "Test string",
            genericWebService: {
                allowedCaCerts: [
                    "Test string"
                ],
                password: "Test string",
                requestHeaders: {
                    A: "Test string"
                },
                uri: "Test string",
                username: "Test string",
            },
            name: "Test string",
            serviceDirectory: {
                genericWebService: {
                    allowedCaCerts: [
                        "Test string"
                    ],
                    password: "Test string",
                    requestHeaders: {
                        A: "Test string"
                    },
                    uri: "Test string",
                    username: "Test string",
                },
                service: "Test string",
            },
            timeout: "Test string",
        });
        /** Deletes the specified webhook. */
        await gapi.client.dialogflow.projects.locations.agents.webhooks.delete({
            force: true,
            name: "Test string",
        });
        /** Retrieves the specified webhook. */
        await gapi.client.dialogflow.projects.locations.agents.webhooks.get({
            name: "Test string",
        });
        /** Returns the list of all webhooks in the specified agent. */
        await gapi.client.dialogflow.projects.locations.agents.webhooks.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified webhook. */
        await gapi.client.dialogflow.projects.locations.agents.webhooks.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            disabled: true,
            displayName: "Test string",
            genericWebService: {
                allowedCaCerts: [
                    "Test string"
                ],
                password: "Test string",
                requestHeaders: {
                    A: "Test string"
                },
                uri: "Test string",
                username: "Test string",
            },
            name: "Test string",
            serviceDirectory: {
                genericWebService: {
                    allowedCaCerts: [
                        "Test string"
                    ],
                    password: "Test string",
                    requestHeaders: {
                        A: "Test string"
                    },
                    uri: "Test string",
                    username: "Test string",
                },
                service: "Test string",
            },
            timeout: "Test string",
        });
        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation
         * completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of
         * 1, corresponding to `Code.CANCELLED`.
         */
        await gapi.client.dialogflow.projects.locations.operations.cancel({
            name: "Test string",
        });
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.dialogflow.projects.locations.operations.get({
            name: "Test string",
        });
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
         * override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
         * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
         * ensure the name binding is the parent resource, without the operations collection id.
         */
        await gapi.client.dialogflow.projects.locations.operations.list({
            filter: "Test string",
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /** Create security settings in the specified location. */
        await gapi.client.dialogflow.projects.locations.securitySettings.create({
            parent: "Test string",
        }, {
            audioExportSettings: {
                audioExportPattern: "Test string",
                audioFormat: "Test string",
                enableAudioRedaction: true,
                gcsBucket: "Test string",
            },
            deidentifyTemplate: "Test string",
            displayName: "Test string",
            insightsExportSettings: {
                enableInsightsExport: true,
            },
            inspectTemplate: "Test string",
            name: "Test string",
            purgeDataTypes: [
                "Test string"
            ],
            redactionScope: "Test string",
            redactionStrategy: "Test string",
            retentionWindowDays: 42,
        });
        /** Deletes the specified SecuritySettings. */
        await gapi.client.dialogflow.projects.locations.securitySettings.delete({
            name: "Test string",
        });
        /** Retrieves the specified SecuritySettings. The returned settings may be stale by up to 1 minute. */
        await gapi.client.dialogflow.projects.locations.securitySettings.get({
            name: "Test string",
        });
        /** Returns the list of all security settings in the specified location. */
        await gapi.client.dialogflow.projects.locations.securitySettings.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates the specified SecuritySettings. */
        await gapi.client.dialogflow.projects.locations.securitySettings.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            audioExportSettings: {
                audioExportPattern: "Test string",
                audioFormat: "Test string",
                enableAudioRedaction: true,
                gcsBucket: "Test string",
            },
            deidentifyTemplate: "Test string",
            displayName: "Test string",
            insightsExportSettings: {
                enableInsightsExport: true,
            },
            inspectTemplate: "Test string",
            name: "Test string",
            purgeDataTypes: [
                "Test string"
            ],
            redactionScope: "Test string",
            redactionStrategy: "Test string",
            retentionWindowDays: 42,
        });
        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation
         * completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of
         * 1, corresponding to `Code.CANCELLED`.
         */
        await gapi.client.dialogflow.projects.operations.cancel({
            name: "Test string",
        });
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.dialogflow.projects.operations.get({
            name: "Test string",
        });
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
         * override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
         * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
         * ensure the name binding is the parent resource, without the operations collection id.
         */
        await gapi.client.dialogflow.projects.operations.list({
            filter: "Test string",
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
    }
});
