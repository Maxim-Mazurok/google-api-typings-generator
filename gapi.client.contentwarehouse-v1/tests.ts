/* This is stub file for gapi.client.contentwarehouse-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230113

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://contentwarehouse.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.contentwarehouse */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Gets the access control policy for a resource. Returns NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists but does not have a policy set. */
        await gapi.client.contentwarehouse.projects.fetchAcl({
            resource: "Test string",
        }, {
            projectOwner: true,
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /**
         * Sets the access control policy for a resource. Replaces any existing policy. You can set ACL with condition for projects only. Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and
         * `>=` where the left of the operator is `DocumentSchemaId` or property name and the right of the operator is a number or a quoted string. You must escape backslash (\\) and quote (\")
         * characters. Boolean expressions (AND/OR) are supported up to 3 levels of nesting (for example, "((A AND B AND C) OR D) AND E"), a maximum of 10 comparisons are allowed in the
         * expression. The expression must be < 6000 bytes in length. Sample condition: `"DocumentSchemaId = \"some schema id\" " OR SchemaId.floatPropertyName >= 10`
         */
        await gapi.client.contentwarehouse.projects.setAcl({
            resource: "Test string",
        }, {
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"
                                ],
                                logType: "Test string",
                            }
                        ],
                        service: "Test string",
                    }
                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"
                        ],
                        role: "Test string",
                    }
                ],
                etag: "Test string",
                version: 42,
            },
            projectOwner: true,
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Provisions resources for given tenant project. Returns a long running operation. */
        await gapi.client.contentwarehouse.projects.locations.initialize({
            location: "Test string",
        }, {
            accessControlMode: "Test string",
            databaseType: "Test string",
            documentCreatorDefaultRole: "Test string",
            kmsKey: "Test string",
        });
        /** Run a predefined pipeline. */
        await gapi.client.contentwarehouse.projects.locations.runPipeline({
            name: "Test string",
        }, {
            classifySplitAndExtractPipeline: {
                classifySplitProcessorInfos: {
                    documentType: "Test string",
                    processorName: "Test string",
                    schemaName: "Test string",
                },
                extractProcessorInfos: [
                    {
                        documentType: "Test string",
                        processorName: "Test string",
                        schemaName: "Test string",
                    }
                ],
                inputPath: "Test string",
                processorResultsFolderPath: "Test string",
            },
            exportCdwPipeline: {
                documentIds: [
                    "Test string"
                ],
                exportFolderPath: "Test string",
                processorInfo: {
                    documentType: "Test string",
                    processorName: "Test string",
                    schemaName: "Test string",
                },
            },
            gcsIngestPipeline: {
                inputPath: "Test string",
                schemaName: "Test string",
            },
        });
        /** Creates a document. */
        await gapi.client.contentwarehouse.projects.locations.documents.create({
            parent: "Test string",
        }, {
            cloudAiDocumentOption: {
                customizedEntitiesPropertiesConversions: {
                    A: "Test string"
                },
                enableEntitiesConversions: true,
            },
            createMask: "Test string",
            document: {
                cloudAiDocument: {
                    content: "Test string",
                    entities: [
                        {
                            confidence: 42,
                            id: "Test string",
                            mentionId: "Test string",
                            mentionText: "Test string",
                            normalizedValue: {
                                addressValue: {
                                    addressLines: [
                                        "Test string"
                                    ],
                                    administrativeArea: "Test string",
                                    languageCode: "Test string",
                                    locality: "Test string",
                                    organization: "Test string",
                                    postalCode: "Test string",
                                    recipients: [
                                        "Test string"
                                    ],
                                    regionCode: "Test string",
                                    revision: 42,
                                    sortingCode: "Test string",
                                    sublocality: "Test string",
                                },
                                booleanValue: true,
                                datetimeValue: {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                },
                                dateValue: {
                                    day: 42,
                                    month: 42,
                                    year: 42,
                                },
                                floatValue: 42,
                                integerValue: 42,
                                moneyValue: {
                                    currencyCode: "Test string",
                                    nanos: 42,
                                    units: "Test string",
                                },
                                text: "Test string",
                            },
                            pageAnchor: {
                                pageRefs: [
                                    {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        layoutId: "Test string",
                                        layoutType: "Test string",
                                        page: "Test string",
                                    }
                                ],
                            },
                            properties: undefined,
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            redacted: true,
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            type: "Test string",
                        }
                    ],
                    entityRelations: [
                        {
                            objectId: "Test string",
                            relation: "Test string",
                            subjectId: "Test string",
                        }
                    ],
                    error: {
                        code: 42,
                        details: [
                            {
                                A: 42
                            }
                        ],
                        message: "Test string",
                    },
                    mimeType: "Test string",
                    pages: [
                        {
                            blocks: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            detectedBarcodes: [
                                {
                                    barcode: {
                                        format: "Test string",
                                        rawValue: "Test string",
                                        valueFormat: "Test string",
                                    },
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            detectedLanguages: [
                                {
                                    confidence: 42,
                                    languageCode: "Test string",
                                }
                            ],
                            dimension: {
                                height: 42,
                                unit: "Test string",
                                width: 42,
                            },
                            formFields: [
                                {
                                    correctedKeyText: "Test string",
                                    correctedValueText: "Test string",
                                    fieldName: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    fieldValue: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    nameDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                    valueDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    valueType: "Test string",
                                }
                            ],
                            image: {
                                content: "Test string",
                                height: 42,
                                mimeType: "Test string",
                                width: 42,
                            },
                            imageQualityScores: {
                                detectedDefects: [
                                    {
                                        confidence: 42,
                                        type: "Test string",
                                    }
                                ],
                                qualityScore: 42,
                            },
                            layout: {
                                boundingPoly: {
                                    normalizedVertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                    vertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                },
                                confidence: 42,
                                orientation: "Test string",
                                textAnchor: {
                                    content: "Test string",
                                    textSegments: [
                                        {
                                            endIndex: "Test string",
                                            startIndex: "Test string",
                                        }
                                    ],
                                },
                            },
                            lines: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            pageNumber: 42,
                            paragraphs: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            symbols: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            tables: [
                                {
                                    bodyRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    headerRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            tokens: [
                                {
                                    detectedBreak: {
                                        type: "Test string",
                                    },
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            transforms: [
                                {
                                    cols: 42,
                                    data: "Test string",
                                    rows: 42,
                                    type: 42,
                                }
                            ],
                            visualElements: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    type: "Test string",
                                }
                            ],
                        }
                    ],
                    revisions: [
                        {
                            agent: "Test string",
                            createTime: "Test string",
                            humanReview: {
                                state: "Test string",
                                stateMessage: "Test string",
                            },
                            id: "Test string",
                            parent: [
                                42
                            ],
                            parentIds: [
                                "Test string"
                            ],
                            processor: "Test string",
                        }
                    ],
                    shardInfo: {
                        shardCount: "Test string",
                        shardIndex: "Test string",
                        textOffset: "Test string",
                    },
                    text: "Test string",
                    textChanges: [
                        {
                            changedText: "Test string",
                            provenance: [
                                {
                                    id: 42,
                                    parents: [
                                        {
                                            id: 42,
                                            index: 42,
                                            revision: 42,
                                        }
                                    ],
                                    revision: 42,
                                    type: "Test string",
                                }
                            ],
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                        }
                    ],
                    textStyles: [
                        {
                            backgroundColor: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            color: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            fontFamily: "Test string",
                            fontSize: {
                                size: 42,
                                unit: "Test string",
                            },
                            fontWeight: "Test string",
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            textDecoration: "Test string",
                            textStyle: "Test string",
                        }
                    ],
                    uri: "Test string",
                },
                contentCategory: "Test string",
                createTime: "Test string",
                creator: "Test string",
                displayName: "Test string",
                displayUri: "Test string",
                documentSchemaName: "Test string",
                inlineRawDocument: "Test string",
                name: "Test string",
                plainText: "Test string",
                properties: [
                    {
                        dateTimeValues: {
                            values: [
                                {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                }
                            ],
                        },
                        enumValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        floatValues: {
                            values: [
                                42
                            ],
                        },
                        integerValues: {
                            values: [
                                42
                            ],
                        },
                        mapProperty: {
                            fields: {
                                A: {
                                    booleanValue: true,
                                    datetimeValue: {
                                        day: 42,
                                        hours: 42,
                                        minutes: 42,
                                        month: 42,
                                        nanos: 42,
                                        seconds: 42,
                                        timeZone: {
                                            id: "Test string",
                                            version: "Test string",
                                        },
                                        utcOffset: "Test string",
                                        year: 42,
                                    },
                                    enumValue: {
                                        value: "Test string",
                                    },
                                    floatValue: 42,
                                    intValue: 42,
                                    stringValue: "Test string",
                                    timestampValue: {
                                        textValue: "Test string",
                                        timestampValue: "Test string",
                                    },
                                }
                            },
                        },
                        name: "Test string",
                        propertyValues: {
                            properties: undefined,
                        },
                        textValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        timestampValues: {
                            values: [
                                {
                                    textValue: "Test string",
                                    timestampValue: "Test string",
                                }
                            ],
                        },
                    }
                ],
                rawDocumentFileType: "Test string",
                rawDocumentPath: "Test string",
                referenceId: "Test string",
                textExtractionDisabled: true,
                textExtractionEnabled: true,
                title: "Test string",
                updater: "Test string",
                updateTime: "Test string",
            },
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"
                                ],
                                logType: "Test string",
                            }
                        ],
                        service: "Test string",
                    }
                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"
                        ],
                        role: "Test string",
                    }
                ],
                etag: "Test string",
                version: 42,
            },
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Deletes a document. Returns NOT_FOUND if the document does not exist. */
        await gapi.client.contentwarehouse.projects.locations.documents.delete({
            name: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Gets the access control policy for a resource. Returns NOT_FOUND error if the resource does not exist. Returns an empty policy if the resource exists but does not have a policy set. */
        await gapi.client.contentwarehouse.projects.locations.documents.fetchAcl({
            resource: "Test string",
        }, {
            projectOwner: true,
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Gets a document. Returns NOT_FOUND if the document does not exist. */
        await gapi.client.contentwarehouse.projects.locations.documents.get({
            name: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Return all source document-links from the document. */
        await gapi.client.contentwarehouse.projects.locations.documents.linkedSources({
            parent: "Test string",
        }, {
            pageSize: 42,
            pageToken: "Test string",
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Return all target document-links from the document. */
        await gapi.client.contentwarehouse.projects.locations.documents.linkedTargets({
            parent: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Updates a document. Returns INVALID_ARGUMENT if the name of the document is non-empty and does not equal the existing name. */
        await gapi.client.contentwarehouse.projects.locations.documents.patch({
            name: "Test string",
        }, {
            cloudAiDocumentOption: {
                customizedEntitiesPropertiesConversions: {
                    A: "Test string"
                },
                enableEntitiesConversions: true,
            },
            document: {
                cloudAiDocument: {
                    content: "Test string",
                    entities: [
                        {
                            confidence: 42,
                            id: "Test string",
                            mentionId: "Test string",
                            mentionText: "Test string",
                            normalizedValue: {
                                addressValue: {
                                    addressLines: [
                                        "Test string"
                                    ],
                                    administrativeArea: "Test string",
                                    languageCode: "Test string",
                                    locality: "Test string",
                                    organization: "Test string",
                                    postalCode: "Test string",
                                    recipients: [
                                        "Test string"
                                    ],
                                    regionCode: "Test string",
                                    revision: 42,
                                    sortingCode: "Test string",
                                    sublocality: "Test string",
                                },
                                booleanValue: true,
                                datetimeValue: {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                },
                                dateValue: {
                                    day: 42,
                                    month: 42,
                                    year: 42,
                                },
                                floatValue: 42,
                                integerValue: 42,
                                moneyValue: {
                                    currencyCode: "Test string",
                                    nanos: 42,
                                    units: "Test string",
                                },
                                text: "Test string",
                            },
                            pageAnchor: {
                                pageRefs: [
                                    {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        layoutId: "Test string",
                                        layoutType: "Test string",
                                        page: "Test string",
                                    }
                                ],
                            },
                            properties: undefined,
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            redacted: true,
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            type: "Test string",
                        }
                    ],
                    entityRelations: [
                        {
                            objectId: "Test string",
                            relation: "Test string",
                            subjectId: "Test string",
                        }
                    ],
                    error: {
                        code: 42,
                        details: [
                            {
                                A: 42
                            }
                        ],
                        message: "Test string",
                    },
                    mimeType: "Test string",
                    pages: [
                        {
                            blocks: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            detectedBarcodes: [
                                {
                                    barcode: {
                                        format: "Test string",
                                        rawValue: "Test string",
                                        valueFormat: "Test string",
                                    },
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            detectedLanguages: [
                                {
                                    confidence: 42,
                                    languageCode: "Test string",
                                }
                            ],
                            dimension: {
                                height: 42,
                                unit: "Test string",
                                width: 42,
                            },
                            formFields: [
                                {
                                    correctedKeyText: "Test string",
                                    correctedValueText: "Test string",
                                    fieldName: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    fieldValue: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    nameDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                    valueDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    valueType: "Test string",
                                }
                            ],
                            image: {
                                content: "Test string",
                                height: 42,
                                mimeType: "Test string",
                                width: 42,
                            },
                            imageQualityScores: {
                                detectedDefects: [
                                    {
                                        confidence: 42,
                                        type: "Test string",
                                    }
                                ],
                                qualityScore: 42,
                            },
                            layout: {
                                boundingPoly: {
                                    normalizedVertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                    vertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                },
                                confidence: 42,
                                orientation: "Test string",
                                textAnchor: {
                                    content: "Test string",
                                    textSegments: [
                                        {
                                            endIndex: "Test string",
                                            startIndex: "Test string",
                                        }
                                    ],
                                },
                            },
                            lines: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            pageNumber: 42,
                            paragraphs: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            symbols: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            tables: [
                                {
                                    bodyRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    headerRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            tokens: [
                                {
                                    detectedBreak: {
                                        type: "Test string",
                                    },
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            transforms: [
                                {
                                    cols: 42,
                                    data: "Test string",
                                    rows: 42,
                                    type: 42,
                                }
                            ],
                            visualElements: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    type: "Test string",
                                }
                            ],
                        }
                    ],
                    revisions: [
                        {
                            agent: "Test string",
                            createTime: "Test string",
                            humanReview: {
                                state: "Test string",
                                stateMessage: "Test string",
                            },
                            id: "Test string",
                            parent: [
                                42
                            ],
                            parentIds: [
                                "Test string"
                            ],
                            processor: "Test string",
                        }
                    ],
                    shardInfo: {
                        shardCount: "Test string",
                        shardIndex: "Test string",
                        textOffset: "Test string",
                    },
                    text: "Test string",
                    textChanges: [
                        {
                            changedText: "Test string",
                            provenance: [
                                {
                                    id: 42,
                                    parents: [
                                        {
                                            id: 42,
                                            index: 42,
                                            revision: 42,
                                        }
                                    ],
                                    revision: 42,
                                    type: "Test string",
                                }
                            ],
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                        }
                    ],
                    textStyles: [
                        {
                            backgroundColor: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            color: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            fontFamily: "Test string",
                            fontSize: {
                                size: 42,
                                unit: "Test string",
                            },
                            fontWeight: "Test string",
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            textDecoration: "Test string",
                            textStyle: "Test string",
                        }
                    ],
                    uri: "Test string",
                },
                contentCategory: "Test string",
                createTime: "Test string",
                creator: "Test string",
                displayName: "Test string",
                displayUri: "Test string",
                documentSchemaName: "Test string",
                inlineRawDocument: "Test string",
                name: "Test string",
                plainText: "Test string",
                properties: [
                    {
                        dateTimeValues: {
                            values: [
                                {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                }
                            ],
                        },
                        enumValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        floatValues: {
                            values: [
                                42
                            ],
                        },
                        integerValues: {
                            values: [
                                42
                            ],
                        },
                        mapProperty: {
                            fields: {
                                A: {
                                    booleanValue: true,
                                    datetimeValue: {
                                        day: 42,
                                        hours: 42,
                                        minutes: 42,
                                        month: 42,
                                        nanos: 42,
                                        seconds: 42,
                                        timeZone: {
                                            id: "Test string",
                                            version: "Test string",
                                        },
                                        utcOffset: "Test string",
                                        year: 42,
                                    },
                                    enumValue: {
                                        value: "Test string",
                                    },
                                    floatValue: 42,
                                    intValue: 42,
                                    stringValue: "Test string",
                                    timestampValue: {
                                        textValue: "Test string",
                                        timestampValue: "Test string",
                                    },
                                }
                            },
                        },
                        name: "Test string",
                        propertyValues: {
                            properties: undefined,
                        },
                        textValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        timestampValues: {
                            values: [
                                {
                                    textValue: "Test string",
                                    timestampValue: "Test string",
                                }
                            ],
                        },
                    }
                ],
                rawDocumentFileType: "Test string",
                rawDocumentPath: "Test string",
                referenceId: "Test string",
                textExtractionDisabled: true,
                textExtractionEnabled: true,
                title: "Test string",
                updater: "Test string",
                updateTime: "Test string",
            },
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
            updateOptions: {
                mergeFieldsOptions: {
                    replaceMessageFields: true,
                    replaceRepeatedFields: true,
                },
                updateMask: "Test string",
                updateType: "Test string",
            },
        });
        /** Searches for documents using provided SearchDocumentsRequest. This call only returns documents that the caller has permission to search against. */
        await gapi.client.contentwarehouse.projects.locations.documents.search({
            parent: "Test string",
        }, {
            documentQuery: {
                customPropertyFilter: "Test string",
                customWeightsMetadata: {
                    weightedSchemaProperties: [
                        {
                            documentSchemaName: "Test string",
                            propertyNames: [
                                "Test string"
                            ],
                        }
                    ],
                },
                documentCreatorFilter: [
                    "Test string"
                ],
                documentSchemaNames: [
                    "Test string"
                ],
                fileTypeFilter: {
                    fileType: "Test string",
                },
                folderNameFilter: "Test string",
                isNlQuery: true,
                propertyFilter: [
                    {
                        condition: "Test string",
                        documentSchemaName: "Test string",
                    }
                ],
                query: "Test string",
                queryContext: [
                    "Test string"
                ],
                timeFilters: [
                    {
                        timeField: "Test string",
                        timeRange: {
                            endTime: "Test string",
                            startTime: "Test string",
                        },
                    }
                ],
            },
            histogramQueries: [
                {
                    filters: {
                        documentSchemas: [
                            "Test string"
                        ],
                        propertyNames: [
                            "Test string"
                        ],
                        yAxis: "Test string",
                    },
                    histogramQuery: "Test string",
                    requirePreciseResultSize: true,
                }
            ],
            offset: 42,
            orderBy: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            qaSizeLimit: 42,
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
            requireTotalSize: true,
            totalResultSize: "Test string",
        });
        /**
         * Sets the access control policy for a resource. Replaces any existing policy. You can set ACL with condition for projects only. Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and
         * `>=` where the left of the operator is `DocumentSchemaId` or property name and the right of the operator is a number or a quoted string. You must escape backslash (\\) and quote (\")
         * characters. Boolean expressions (AND/OR) are supported up to 3 levels of nesting (for example, "((A AND B AND C) OR D) AND E"), a maximum of 10 comparisons are allowed in the
         * expression. The expression must be < 6000 bytes in length. Sample condition: `"DocumentSchemaId = \"some schema id\" " OR SchemaId.floatPropertyName >= 10`
         */
        await gapi.client.contentwarehouse.projects.locations.documents.setAcl({
            resource: "Test string",
        }, {
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"
                                ],
                                logType: "Test string",
                            }
                        ],
                        service: "Test string",
                    }
                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"
                        ],
                        role: "Test string",
                    }
                ],
                etag: "Test string",
                version: 42,
            },
            projectOwner: true,
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Create a link between a source document and a target document. */
        await gapi.client.contentwarehouse.projects.locations.documents.documentLinks.create({
            parent: "Test string",
        }, {
            documentLink: {
                createTime: "Test string",
                description: "Test string",
                name: "Test string",
                sourceDocumentReference: {
                    createTime: "Test string",
                    deleteTime: "Test string",
                    displayName: "Test string",
                    documentIsFolder: true,
                    documentName: "Test string",
                    snippet: "Test string",
                    updateTime: "Test string",
                },
                state: "Test string",
                targetDocumentReference: {
                    createTime: "Test string",
                    deleteTime: "Test string",
                    displayName: "Test string",
                    documentIsFolder: true,
                    documentName: "Test string",
                    snippet: "Test string",
                    updateTime: "Test string",
                },
                updateTime: "Test string",
            },
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Remove the link between the source and target documents. */
        await gapi.client.contentwarehouse.projects.locations.documents.documentLinks.delete({
            name: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Deletes a document. Returns NOT_FOUND if the document does not exist. */
        await gapi.client.contentwarehouse.projects.locations.documents.referenceId.delete({
            name: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Gets a document. Returns NOT_FOUND if the document does not exist. */
        await gapi.client.contentwarehouse.projects.locations.documents.referenceId.get({
            name: "Test string",
        }, {
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
        });
        /** Updates a document. Returns INVALID_ARGUMENT if the name of the document is non-empty and does not equal the existing name. */
        await gapi.client.contentwarehouse.projects.locations.documents.referenceId.patch({
            name: "Test string",
        }, {
            cloudAiDocumentOption: {
                customizedEntitiesPropertiesConversions: {
                    A: "Test string"
                },
                enableEntitiesConversions: true,
            },
            document: {
                cloudAiDocument: {
                    content: "Test string",
                    entities: [
                        {
                            confidence: 42,
                            id: "Test string",
                            mentionId: "Test string",
                            mentionText: "Test string",
                            normalizedValue: {
                                addressValue: {
                                    addressLines: [
                                        "Test string"
                                    ],
                                    administrativeArea: "Test string",
                                    languageCode: "Test string",
                                    locality: "Test string",
                                    organization: "Test string",
                                    postalCode: "Test string",
                                    recipients: [
                                        "Test string"
                                    ],
                                    regionCode: "Test string",
                                    revision: 42,
                                    sortingCode: "Test string",
                                    sublocality: "Test string",
                                },
                                booleanValue: true,
                                datetimeValue: {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                },
                                dateValue: {
                                    day: 42,
                                    month: 42,
                                    year: 42,
                                },
                                floatValue: 42,
                                integerValue: 42,
                                moneyValue: {
                                    currencyCode: "Test string",
                                    nanos: 42,
                                    units: "Test string",
                                },
                                text: "Test string",
                            },
                            pageAnchor: {
                                pageRefs: [
                                    {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        layoutId: "Test string",
                                        layoutType: "Test string",
                                        page: "Test string",
                                    }
                                ],
                            },
                            properties: undefined,
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            redacted: true,
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            type: "Test string",
                        }
                    ],
                    entityRelations: [
                        {
                            objectId: "Test string",
                            relation: "Test string",
                            subjectId: "Test string",
                        }
                    ],
                    error: {
                        code: 42,
                        details: [
                            {
                                A: 42
                            }
                        ],
                        message: "Test string",
                    },
                    mimeType: "Test string",
                    pages: [
                        {
                            blocks: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            detectedBarcodes: [
                                {
                                    barcode: {
                                        format: "Test string",
                                        rawValue: "Test string",
                                        valueFormat: "Test string",
                                    },
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            detectedLanguages: [
                                {
                                    confidence: 42,
                                    languageCode: "Test string",
                                }
                            ],
                            dimension: {
                                height: 42,
                                unit: "Test string",
                                width: 42,
                            },
                            formFields: [
                                {
                                    correctedKeyText: "Test string",
                                    correctedValueText: "Test string",
                                    fieldName: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    fieldValue: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    nameDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                    valueDetectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    valueType: "Test string",
                                }
                            ],
                            image: {
                                content: "Test string",
                                height: 42,
                                mimeType: "Test string",
                                width: 42,
                            },
                            imageQualityScores: {
                                detectedDefects: [
                                    {
                                        confidence: 42,
                                        type: "Test string",
                                    }
                                ],
                                qualityScore: 42,
                            },
                            layout: {
                                boundingPoly: {
                                    normalizedVertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                    vertices: [
                                        {
                                            x: 42,
                                            y: 42,
                                        }
                                    ],
                                },
                                confidence: 42,
                                orientation: "Test string",
                                textAnchor: {
                                    content: "Test string",
                                    textSegments: [
                                        {
                                            endIndex: "Test string",
                                            startIndex: "Test string",
                                        }
                                    ],
                                },
                            },
                            lines: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            pageNumber: 42,
                            paragraphs: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            provenance: {
                                id: 42,
                                parents: [
                                    {
                                        id: 42,
                                        index: 42,
                                        revision: 42,
                                    }
                                ],
                                revision: 42,
                                type: "Test string",
                            },
                            symbols: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                }
                            ],
                            tables: [
                                {
                                    bodyRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    headerRows: [
                                        {
                                            cells: [
                                                {
                                                    colSpan: 42,
                                                    detectedLanguages: [
                                                        {
                                                            confidence: 42,
                                                            languageCode: "Test string",
                                                        }
                                                    ],
                                                    layout: {
                                                        boundingPoly: {
                                                            normalizedVertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                            vertices: [
                                                                {
                                                                    x: 42,
                                                                    y: 42,
                                                                }
                                                            ],
                                                        },
                                                        confidence: 42,
                                                        orientation: "Test string",
                                                        textAnchor: {
                                                            content: "Test string",
                                                            textSegments: [
                                                                {
                                                                    endIndex: "Test string",
                                                                    startIndex: "Test string",
                                                                }
                                                            ],
                                                        },
                                                    },
                                                    rowSpan: 42,
                                                }
                                            ],
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            tokens: [
                                {
                                    detectedBreak: {
                                        type: "Test string",
                                    },
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    provenance: {
                                        id: 42,
                                        parents: [
                                            {
                                                id: 42,
                                                index: 42,
                                                revision: 42,
                                            }
                                        ],
                                        revision: 42,
                                        type: "Test string",
                                    },
                                }
                            ],
                            transforms: [
                                {
                                    cols: 42,
                                    data: "Test string",
                                    rows: 42,
                                    type: 42,
                                }
                            ],
                            visualElements: [
                                {
                                    detectedLanguages: [
                                        {
                                            confidence: 42,
                                            languageCode: "Test string",
                                        }
                                    ],
                                    layout: {
                                        boundingPoly: {
                                            normalizedVertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                            vertices: [
                                                {
                                                    x: 42,
                                                    y: 42,
                                                }
                                            ],
                                        },
                                        confidence: 42,
                                        orientation: "Test string",
                                        textAnchor: {
                                            content: "Test string",
                                            textSegments: [
                                                {
                                                    endIndex: "Test string",
                                                    startIndex: "Test string",
                                                }
                                            ],
                                        },
                                    },
                                    type: "Test string",
                                }
                            ],
                        }
                    ],
                    revisions: [
                        {
                            agent: "Test string",
                            createTime: "Test string",
                            humanReview: {
                                state: "Test string",
                                stateMessage: "Test string",
                            },
                            id: "Test string",
                            parent: [
                                42
                            ],
                            parentIds: [
                                "Test string"
                            ],
                            processor: "Test string",
                        }
                    ],
                    shardInfo: {
                        shardCount: "Test string",
                        shardIndex: "Test string",
                        textOffset: "Test string",
                    },
                    text: "Test string",
                    textChanges: [
                        {
                            changedText: "Test string",
                            provenance: [
                                {
                                    id: 42,
                                    parents: [
                                        {
                                            id: 42,
                                            index: 42,
                                            revision: 42,
                                        }
                                    ],
                                    revision: 42,
                                    type: "Test string",
                                }
                            ],
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                        }
                    ],
                    textStyles: [
                        {
                            backgroundColor: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            color: {
                                alpha: 42,
                                blue: 42,
                                green: 42,
                                red: 42,
                            },
                            fontFamily: "Test string",
                            fontSize: {
                                size: 42,
                                unit: "Test string",
                            },
                            fontWeight: "Test string",
                            textAnchor: {
                                content: "Test string",
                                textSegments: [
                                    {
                                        endIndex: "Test string",
                                        startIndex: "Test string",
                                    }
                                ],
                            },
                            textDecoration: "Test string",
                            textStyle: "Test string",
                        }
                    ],
                    uri: "Test string",
                },
                contentCategory: "Test string",
                createTime: "Test string",
                creator: "Test string",
                displayName: "Test string",
                displayUri: "Test string",
                documentSchemaName: "Test string",
                inlineRawDocument: "Test string",
                name: "Test string",
                plainText: "Test string",
                properties: [
                    {
                        dateTimeValues: {
                            values: [
                                {
                                    day: 42,
                                    hours: 42,
                                    minutes: 42,
                                    month: 42,
                                    nanos: 42,
                                    seconds: 42,
                                    timeZone: {
                                        id: "Test string",
                                        version: "Test string",
                                    },
                                    utcOffset: "Test string",
                                    year: 42,
                                }
                            ],
                        },
                        enumValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        floatValues: {
                            values: [
                                42
                            ],
                        },
                        integerValues: {
                            values: [
                                42
                            ],
                        },
                        mapProperty: {
                            fields: {
                                A: {
                                    booleanValue: true,
                                    datetimeValue: {
                                        day: 42,
                                        hours: 42,
                                        minutes: 42,
                                        month: 42,
                                        nanos: 42,
                                        seconds: 42,
                                        timeZone: {
                                            id: "Test string",
                                            version: "Test string",
                                        },
                                        utcOffset: "Test string",
                                        year: 42,
                                    },
                                    enumValue: {
                                        value: "Test string",
                                    },
                                    floatValue: 42,
                                    intValue: 42,
                                    stringValue: "Test string",
                                    timestampValue: {
                                        textValue: "Test string",
                                        timestampValue: "Test string",
                                    },
                                }
                            },
                        },
                        name: "Test string",
                        propertyValues: {
                            properties: undefined,
                        },
                        textValues: {
                            values: [
                                "Test string"
                            ],
                        },
                        timestampValues: {
                            values: [
                                {
                                    textValue: "Test string",
                                    timestampValue: "Test string",
                                }
                            ],
                        },
                    }
                ],
                rawDocumentFileType: "Test string",
                rawDocumentPath: "Test string",
                referenceId: "Test string",
                textExtractionDisabled: true,
                textExtractionEnabled: true,
                title: "Test string",
                updater: "Test string",
                updateTime: "Test string",
            },
            requestMetadata: {
                userInfo: {
                    groupIds: [
                        "Test string"
                    ],
                    id: "Test string",
                },
            },
            updateOptions: {
                mergeFieldsOptions: {
                    replaceMessageFields: true,
                    replaceRepeatedFields: true,
                },
                updateMask: "Test string",
                updateType: "Test string",
            },
        });
        /** Creates a document schema. */
        await gapi.client.contentwarehouse.projects.locations.documentSchemas.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            documentIsFolder: true,
            name: "Test string",
            propertyDefinitions: [
                {
                    dateTimeTypeOptions: {
                    },
                    displayName: "Test string",
                    enumTypeOptions: {
                        possibleValues: [
                            "Test string"
                        ],
                        validationCheckDisabled: true,
                    },
                    floatTypeOptions: {
                    },
                    integerTypeOptions: {
                    },
                    isFilterable: true,
                    isMetadata: true,
                    isRepeatable: true,
                    isRequired: true,
                    isSearchable: true,
                    mapTypeOptions: {
                    },
                    name: "Test string",
                    propertyTypeOptions: {
                        propertyDefinitions: undefined,
                    },
                    retrievalImportance: "Test string",
                    textTypeOptions: {
                    },
                    timestampTypeOptions: {
                    },
                }
            ],
            updateTime: "Test string",
        });
        /** Deletes a document schema. Returns NOT_FOUND if the document schema does not exist. Returns BAD_REQUEST if the document schema has documents depending on it. */
        await gapi.client.contentwarehouse.projects.locations.documentSchemas.delete({
            name: "Test string",
        });
        /** Gets a document schema. Returns NOT_FOUND if the document schema does not exist. */
        await gapi.client.contentwarehouse.projects.locations.documentSchemas.get({
            name: "Test string",
        });
        /** Lists document schemas. */
        await gapi.client.contentwarehouse.projects.locations.documentSchemas.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates a Document Schema. Returns INVALID_ARGUMENT if the name of the Document Schema is non-empty and does not equal the existing name. Supports only appending new properties, adding
         * new ENUM possible values, and updating the EnumTypeOptions.validation_check_disabled flag for ENUM possible values. Updating existing properties will result into INVALID_ARGUMENT.
         */
        await gapi.client.contentwarehouse.projects.locations.documentSchemas.patch({
            name: "Test string",
        }, {
            documentSchema: {
                createTime: "Test string",
                description: "Test string",
                displayName: "Test string",
                documentIsFolder: true,
                name: "Test string",
                propertyDefinitions: [
                    {
                        dateTimeTypeOptions: {
                        },
                        displayName: "Test string",
                        enumTypeOptions: {
                            possibleValues: [
                                "Test string"
                            ],
                            validationCheckDisabled: true,
                        },
                        floatTypeOptions: {
                        },
                        integerTypeOptions: {
                        },
                        isFilterable: true,
                        isMetadata: true,
                        isRepeatable: true,
                        isRequired: true,
                        isSearchable: true,
                        mapTypeOptions: {
                        },
                        name: "Test string",
                        propertyTypeOptions: {
                            propertyDefinitions: undefined,
                        },
                        retrievalImportance: "Test string",
                        textTypeOptions: {
                        },
                        timestampTypeOptions: {
                        },
                    }
                ],
                updateTime: "Test string",
            },
        });
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.contentwarehouse.projects.locations.operations.get({
            name: "Test string",
        });
        /** Creates a ruleset. */
        await gapi.client.contentwarehouse.projects.locations.ruleSets.create({
            parent: "Test string",
        }, {
            description: "Test string",
            name: "Test string",
            rules: [
                {
                    actions: [
                        {
                            accessControl: {
                                operationType: "Test string",
                                policy: {
                                    auditConfigs: [
                                        {
                                            auditLogConfigs: [
                                                {
                                                    exemptedMembers: [
                                                        "Test string"
                                                    ],
                                                    logType: "Test string",
                                                }
                                            ],
                                            service: "Test string",
                                        }
                                    ],
                                    bindings: [
                                        {
                                            condition: {
                                                description: "Test string",
                                                expression: "Test string",
                                                location: "Test string",
                                                title: "Test string",
                                            },
                                            members: [
                                                "Test string"
                                            ],
                                            role: "Test string",
                                        }
                                    ],
                                    etag: "Test string",
                                    version: 42,
                                },
                            },
                            actionId: "Test string",
                            addToFolder: {
                                folders: [
                                    "Test string"
                                ],
                            },
                            dataUpdate: {
                                entries: {
                                    A: "Test string"
                                },
                            },
                            dataValidation: {
                                conditions: {
                                    A: "Test string"
                                },
                            },
                            deleteDocumentAction: {
                                enableHardDelete: true,
                            },
                            publishToPubSub: {
                                messages: [
                                    "Test string"
                                ],
                                topicId: "Test string",
                            },
                            removeFromFolderAction: {
                                condition: "Test string",
                                folder: "Test string",
                            },
                        }
                    ],
                    condition: "Test string",
                    description: "Test string",
                    ruleId: "Test string",
                    triggerType: "Test string",
                }
            ],
            source: "Test string",
        });
        /** Deletes a ruleset. Returns NOT_FOUND if the document does not exist. */
        await gapi.client.contentwarehouse.projects.locations.ruleSets.delete({
            name: "Test string",
        });
        /** Gets a ruleset. Returns NOT_FOUND if the ruleset does not exist. */
        await gapi.client.contentwarehouse.projects.locations.ruleSets.get({
            name: "Test string",
        });
        /** Lists rulesets. */
        await gapi.client.contentwarehouse.projects.locations.ruleSets.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a ruleset. Returns INVALID_ARGUMENT if the name of the ruleset is non-empty and does not equal the existing name. */
        await gapi.client.contentwarehouse.projects.locations.ruleSets.patch({
            name: "Test string",
        }, {
            ruleSet: {
                description: "Test string",
                name: "Test string",
                rules: [
                    {
                        actions: [
                            {
                                accessControl: {
                                    operationType: "Test string",
                                    policy: {
                                        auditConfigs: [
                                            {
                                                auditLogConfigs: [
                                                    {
                                                        exemptedMembers: [
                                                            "Test string"
                                                        ],
                                                        logType: "Test string",
                                                    }
                                                ],
                                                service: "Test string",
                                            }
                                        ],
                                        bindings: [
                                            {
                                                condition: {
                                                    description: "Test string",
                                                    expression: "Test string",
                                                    location: "Test string",
                                                    title: "Test string",
                                                },
                                                members: [
                                                    "Test string"
                                                ],
                                                role: "Test string",
                                            }
                                        ],
                                        etag: "Test string",
                                        version: 42,
                                    },
                                },
                                actionId: "Test string",
                                addToFolder: {
                                    folders: [
                                        "Test string"
                                    ],
                                },
                                dataUpdate: {
                                    entries: {
                                        A: "Test string"
                                    },
                                },
                                dataValidation: {
                                    conditions: {
                                        A: "Test string"
                                    },
                                },
                                deleteDocumentAction: {
                                    enableHardDelete: true,
                                },
                                publishToPubSub: {
                                    messages: [
                                        "Test string"
                                    ],
                                    topicId: "Test string",
                                },
                                removeFromFolderAction: {
                                    condition: "Test string",
                                    folder: "Test string",
                                },
                            }
                        ],
                        condition: "Test string",
                        description: "Test string",
                        ruleId: "Test string",
                        triggerType: "Test string",
                    }
                ],
                source: "Test string",
            },
        });
        /** Creates a SynonymSet for a single context. Throws an ALREADY_EXISTS exception if a synonymset already exists for the context. */
        await gapi.client.contentwarehouse.projects.locations.synonymSets.create({
            parent: "Test string",
        }, {
            context: "Test string",
            name: "Test string",
            synonyms: [
                {
                    words: [
                        "Test string"
                    ],
                }
            ],
        });
        /** Deletes a SynonymSet for a given context. Throws a NOT_FOUND exception if the SynonymSet is not found. */
        await gapi.client.contentwarehouse.projects.locations.synonymSets.delete({
            name: "Test string",
        });
        /** Gets a SynonymSet for a particular context. Throws a NOT_FOUND exception if the Synonymset does not exist */
        await gapi.client.contentwarehouse.projects.locations.synonymSets.get({
            name: "Test string",
        });
        /** Returns all SynonymSets (for all contexts) for the specified location. */
        await gapi.client.contentwarehouse.projects.locations.synonymSets.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Remove the existing SynonymSet for the context and replaces it with a new one. Throws a NOT_FOUND exception if the SynonymSet is not found. */
        await gapi.client.contentwarehouse.projects.locations.synonymSets.patch({
            name: "Test string",
        }, {
            context: "Test string",
            name: "Test string",
            synonyms: [
                {
                    words: [
                        "Test string"
                    ],
                }
            ],
        });
    }
});
