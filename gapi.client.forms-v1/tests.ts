/* This is stub file for gapi.client.forms-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230321

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://forms.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.forms */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, create, and delete all of your Google Drive files */
        'https://www.googleapis.com/auth/drive',
        /** See, edit, create, and delete only the specific Google Drive files you use with this app */
        'https://www.googleapis.com/auth/drive.file',
        /** See and download all your Google Drive files */
        'https://www.googleapis.com/auth/drive.readonly',
        /** See, edit, create, and delete all your Google Forms forms */
        'https://www.googleapis.com/auth/forms.body',
        /** See all your Google Forms forms */
        'https://www.googleapis.com/auth/forms.body.readonly',
        /** See all responses to your Google Forms forms */
        'https://www.googleapis.com/auth/forms.responses.readonly',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Change the form with a batch of updates. */
        await gapi.client.forms.forms.batchUpdate({
            formId: "Test string",
        }, {
            includeFormInResponse: true,
            requests: [
                {
                    createItem: {
                        item: {
                            description: "Test string",
                            imageItem: {
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                            },
                            itemId: "Test string",
                            pageBreakItem: {
                            },
                            questionGroupItem: {
                                grid: {
                                    columns: {
                                        options: [
                                            {
                                                goToAction: "Test string",
                                                goToSectionId: "Test string",
                                                image: {
                                                    altText: "Test string",
                                                    contentUri: "Test string",
                                                    properties: {
                                                        alignment: "Test string",
                                                        width: 42,
                                                    },
                                                    sourceUri: "Test string",
                                                },
                                                isOther: true,
                                                value: "Test string",
                                            }
                                        ],
                                        shuffle: true,
                                        type: "Test string",
                                    },
                                    shuffleQuestions: true,
                                },
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                                questions: [
                                    {
                                        choiceQuestion: {
                                            options: [
                                                {
                                                    goToAction: "Test string",
                                                    goToSectionId: "Test string",
                                                    image: {
                                                        altText: "Test string",
                                                        contentUri: "Test string",
                                                        properties: {
                                                            alignment: "Test string",
                                                            width: 42,
                                                        },
                                                        sourceUri: "Test string",
                                                    },
                                                    isOther: true,
                                                    value: "Test string",
                                                }
                                            ],
                                            shuffle: true,
                                            type: "Test string",
                                        },
                                        dateQuestion: {
                                            includeTime: true,
                                            includeYear: true,
                                        },
                                        fileUploadQuestion: {
                                            folderId: "Test string",
                                            maxFiles: 42,
                                            maxFileSize: "Test string",
                                            types: [
                                                "Test string"
                                            ],
                                        },
                                        grading: {
                                            correctAnswers: {
                                                answers: [
                                                    {
                                                        value: "Test string",
                                                    }
                                                ],
                                            },
                                            generalFeedback: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                            pointValue: 42,
                                            whenRight: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                            whenWrong: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                        },
                                        questionId: "Test string",
                                        required: true,
                                        rowQuestion: {
                                            title: "Test string",
                                        },
                                        scaleQuestion: {
                                            high: 42,
                                            highLabel: "Test string",
                                            low: 42,
                                            lowLabel: "Test string",
                                        },
                                        textQuestion: {
                                            paragraph: true,
                                        },
                                        timeQuestion: {
                                            duration: true,
                                        },
                                    }
                                ],
                            },
                            questionItem: {
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                                question: {
                                    choiceQuestion: {
                                        options: [
                                            {
                                                goToAction: "Test string",
                                                goToSectionId: "Test string",
                                                image: {
                                                    altText: "Test string",
                                                    contentUri: "Test string",
                                                    properties: {
                                                        alignment: "Test string",
                                                        width: 42,
                                                    },
                                                    sourceUri: "Test string",
                                                },
                                                isOther: true,
                                                value: "Test string",
                                            }
                                        ],
                                        shuffle: true,
                                        type: "Test string",
                                    },
                                    dateQuestion: {
                                        includeTime: true,
                                        includeYear: true,
                                    },
                                    fileUploadQuestion: {
                                        folderId: "Test string",
                                        maxFiles: 42,
                                        maxFileSize: "Test string",
                                        types: [
                                            "Test string"
                                        ],
                                    },
                                    grading: {
                                        correctAnswers: {
                                            answers: [
                                                {
                                                    value: "Test string",
                                                }
                                            ],
                                        },
                                        generalFeedback: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                        pointValue: 42,
                                        whenRight: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                        whenWrong: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                    },
                                    questionId: "Test string",
                                    required: true,
                                    rowQuestion: {
                                        title: "Test string",
                                    },
                                    scaleQuestion: {
                                        high: 42,
                                        highLabel: "Test string",
                                        low: 42,
                                        lowLabel: "Test string",
                                    },
                                    textQuestion: {
                                        paragraph: true,
                                    },
                                    timeQuestion: {
                                        duration: true,
                                    },
                                },
                            },
                            textItem: {
                            },
                            title: "Test string",
                            videoItem: {
                                caption: "Test string",
                                video: {
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    youtubeUri: "Test string",
                                },
                            },
                        },
                        location: {
                            index: 42,
                        },
                    },
                    deleteItem: {
                        location: {
                            index: 42,
                        },
                    },
                    moveItem: {
                        newLocation: {
                            index: 42,
                        },
                        originalLocation: {
                            index: 42,
                        },
                    },
                    updateFormInfo: {
                        info: {
                            description: "Test string",
                            documentTitle: "Test string",
                            title: "Test string",
                        },
                        updateMask: "Test string",
                    },
                    updateItem: {
                        item: {
                            description: "Test string",
                            imageItem: {
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                            },
                            itemId: "Test string",
                            pageBreakItem: {
                            },
                            questionGroupItem: {
                                grid: {
                                    columns: {
                                        options: [
                                            {
                                                goToAction: "Test string",
                                                goToSectionId: "Test string",
                                                image: {
                                                    altText: "Test string",
                                                    contentUri: "Test string",
                                                    properties: {
                                                        alignment: "Test string",
                                                        width: 42,
                                                    },
                                                    sourceUri: "Test string",
                                                },
                                                isOther: true,
                                                value: "Test string",
                                            }
                                        ],
                                        shuffle: true,
                                        type: "Test string",
                                    },
                                    shuffleQuestions: true,
                                },
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                                questions: [
                                    {
                                        choiceQuestion: {
                                            options: [
                                                {
                                                    goToAction: "Test string",
                                                    goToSectionId: "Test string",
                                                    image: {
                                                        altText: "Test string",
                                                        contentUri: "Test string",
                                                        properties: {
                                                            alignment: "Test string",
                                                            width: 42,
                                                        },
                                                        sourceUri: "Test string",
                                                    },
                                                    isOther: true,
                                                    value: "Test string",
                                                }
                                            ],
                                            shuffle: true,
                                            type: "Test string",
                                        },
                                        dateQuestion: {
                                            includeTime: true,
                                            includeYear: true,
                                        },
                                        fileUploadQuestion: {
                                            folderId: "Test string",
                                            maxFiles: 42,
                                            maxFileSize: "Test string",
                                            types: [
                                                "Test string"
                                            ],
                                        },
                                        grading: {
                                            correctAnswers: {
                                                answers: [
                                                    {
                                                        value: "Test string",
                                                    }
                                                ],
                                            },
                                            generalFeedback: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                            pointValue: 42,
                                            whenRight: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                            whenWrong: {
                                                material: [
                                                    {
                                                        link: {
                                                            displayText: "Test string",
                                                            uri: "Test string",
                                                        },
                                                        video: {
                                                            displayText: "Test string",
                                                            youtubeUri: "Test string",
                                                        },
                                                    }
                                                ],
                                                text: "Test string",
                                            },
                                        },
                                        questionId: "Test string",
                                        required: true,
                                        rowQuestion: {
                                            title: "Test string",
                                        },
                                        scaleQuestion: {
                                            high: 42,
                                            highLabel: "Test string",
                                            low: 42,
                                            lowLabel: "Test string",
                                        },
                                        textQuestion: {
                                            paragraph: true,
                                        },
                                        timeQuestion: {
                                            duration: true,
                                        },
                                    }
                                ],
                            },
                            questionItem: {
                                image: {
                                    altText: "Test string",
                                    contentUri: "Test string",
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    sourceUri: "Test string",
                                },
                                question: {
                                    choiceQuestion: {
                                        options: [
                                            {
                                                goToAction: "Test string",
                                                goToSectionId: "Test string",
                                                image: {
                                                    altText: "Test string",
                                                    contentUri: "Test string",
                                                    properties: {
                                                        alignment: "Test string",
                                                        width: 42,
                                                    },
                                                    sourceUri: "Test string",
                                                },
                                                isOther: true,
                                                value: "Test string",
                                            }
                                        ],
                                        shuffle: true,
                                        type: "Test string",
                                    },
                                    dateQuestion: {
                                        includeTime: true,
                                        includeYear: true,
                                    },
                                    fileUploadQuestion: {
                                        folderId: "Test string",
                                        maxFiles: 42,
                                        maxFileSize: "Test string",
                                        types: [
                                            "Test string"
                                        ],
                                    },
                                    grading: {
                                        correctAnswers: {
                                            answers: [
                                                {
                                                    value: "Test string",
                                                }
                                            ],
                                        },
                                        generalFeedback: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                        pointValue: 42,
                                        whenRight: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                        whenWrong: {
                                            material: [
                                                {
                                                    link: {
                                                        displayText: "Test string",
                                                        uri: "Test string",
                                                    },
                                                    video: {
                                                        displayText: "Test string",
                                                        youtubeUri: "Test string",
                                                    },
                                                }
                                            ],
                                            text: "Test string",
                                        },
                                    },
                                    questionId: "Test string",
                                    required: true,
                                    rowQuestion: {
                                        title: "Test string",
                                    },
                                    scaleQuestion: {
                                        high: 42,
                                        highLabel: "Test string",
                                        low: 42,
                                        lowLabel: "Test string",
                                    },
                                    textQuestion: {
                                        paragraph: true,
                                    },
                                    timeQuestion: {
                                        duration: true,
                                    },
                                },
                            },
                            textItem: {
                            },
                            title: "Test string",
                            videoItem: {
                                caption: "Test string",
                                video: {
                                    properties: {
                                        alignment: "Test string",
                                        width: 42,
                                    },
                                    youtubeUri: "Test string",
                                },
                            },
                        },
                        location: {
                            index: 42,
                        },
                        updateMask: "Test string",
                    },
                    updateSettings: {
                        settings: {
                            quizSettings: {
                                isQuiz: true,
                            },
                        },
                        updateMask: "Test string",
                    },
                }
            ],
            writeControl: {
                requiredRevisionId: "Test string",
                targetRevisionId: "Test string",
            },
        });
        /**
         * Create a new form using the title given in the provided form message in the request. *Important:* Only the form.info.title and form.info.document_title fields are copied to the new
         * form. All other fields including the form description, items and settings are disallowed. To create a new form and add items, you must first call forms.create to create an empty form
         * with a title and (optional) document title, and then call forms.update to add the items.
         */
        await gapi.client.forms.forms.create({
        }, {
            formId: "Test string",
            info: {
                description: "Test string",
                documentTitle: "Test string",
                title: "Test string",
            },
            items: [
                {
                    description: "Test string",
                    imageItem: {
                        image: {
                            altText: "Test string",
                            contentUri: "Test string",
                            properties: {
                                alignment: "Test string",
                                width: 42,
                            },
                            sourceUri: "Test string",
                        },
                    },
                    itemId: "Test string",
                    pageBreakItem: {
                    },
                    questionGroupItem: {
                        grid: {
                            columns: {
                                options: [
                                    {
                                        goToAction: "Test string",
                                        goToSectionId: "Test string",
                                        image: {
                                            altText: "Test string",
                                            contentUri: "Test string",
                                            properties: {
                                                alignment: "Test string",
                                                width: 42,
                                            },
                                            sourceUri: "Test string",
                                        },
                                        isOther: true,
                                        value: "Test string",
                                    }
                                ],
                                shuffle: true,
                                type: "Test string",
                            },
                            shuffleQuestions: true,
                        },
                        image: {
                            altText: "Test string",
                            contentUri: "Test string",
                            properties: {
                                alignment: "Test string",
                                width: 42,
                            },
                            sourceUri: "Test string",
                        },
                        questions: [
                            {
                                choiceQuestion: {
                                    options: [
                                        {
                                            goToAction: "Test string",
                                            goToSectionId: "Test string",
                                            image: {
                                                altText: "Test string",
                                                contentUri: "Test string",
                                                properties: {
                                                    alignment: "Test string",
                                                    width: 42,
                                                },
                                                sourceUri: "Test string",
                                            },
                                            isOther: true,
                                            value: "Test string",
                                        }
                                    ],
                                    shuffle: true,
                                    type: "Test string",
                                },
                                dateQuestion: {
                                    includeTime: true,
                                    includeYear: true,
                                },
                                fileUploadQuestion: {
                                    folderId: "Test string",
                                    maxFiles: 42,
                                    maxFileSize: "Test string",
                                    types: [
                                        "Test string"
                                    ],
                                },
                                grading: {
                                    correctAnswers: {
                                        answers: [
                                            {
                                                value: "Test string",
                                            }
                                        ],
                                    },
                                    generalFeedback: {
                                        material: [
                                            {
                                                link: {
                                                    displayText: "Test string",
                                                    uri: "Test string",
                                                },
                                                video: {
                                                    displayText: "Test string",
                                                    youtubeUri: "Test string",
                                                },
                                            }
                                        ],
                                        text: "Test string",
                                    },
                                    pointValue: 42,
                                    whenRight: {
                                        material: [
                                            {
                                                link: {
                                                    displayText: "Test string",
                                                    uri: "Test string",
                                                },
                                                video: {
                                                    displayText: "Test string",
                                                    youtubeUri: "Test string",
                                                },
                                            }
                                        ],
                                        text: "Test string",
                                    },
                                    whenWrong: {
                                        material: [
                                            {
                                                link: {
                                                    displayText: "Test string",
                                                    uri: "Test string",
                                                },
                                                video: {
                                                    displayText: "Test string",
                                                    youtubeUri: "Test string",
                                                },
                                            }
                                        ],
                                        text: "Test string",
                                    },
                                },
                                questionId: "Test string",
                                required: true,
                                rowQuestion: {
                                    title: "Test string",
                                },
                                scaleQuestion: {
                                    high: 42,
                                    highLabel: "Test string",
                                    low: 42,
                                    lowLabel: "Test string",
                                },
                                textQuestion: {
                                    paragraph: true,
                                },
                                timeQuestion: {
                                    duration: true,
                                },
                            }
                        ],
                    },
                    questionItem: {
                        image: {
                            altText: "Test string",
                            contentUri: "Test string",
                            properties: {
                                alignment: "Test string",
                                width: 42,
                            },
                            sourceUri: "Test string",
                        },
                        question: {
                            choiceQuestion: {
                                options: [
                                    {
                                        goToAction: "Test string",
                                        goToSectionId: "Test string",
                                        image: {
                                            altText: "Test string",
                                            contentUri: "Test string",
                                            properties: {
                                                alignment: "Test string",
                                                width: 42,
                                            },
                                            sourceUri: "Test string",
                                        },
                                        isOther: true,
                                        value: "Test string",
                                    }
                                ],
                                shuffle: true,
                                type: "Test string",
                            },
                            dateQuestion: {
                                includeTime: true,
                                includeYear: true,
                            },
                            fileUploadQuestion: {
                                folderId: "Test string",
                                maxFiles: 42,
                                maxFileSize: "Test string",
                                types: [
                                    "Test string"
                                ],
                            },
                            grading: {
                                correctAnswers: {
                                    answers: [
                                        {
                                            value: "Test string",
                                        }
                                    ],
                                },
                                generalFeedback: {
                                    material: [
                                        {
                                            link: {
                                                displayText: "Test string",
                                                uri: "Test string",
                                            },
                                            video: {
                                                displayText: "Test string",
                                                youtubeUri: "Test string",
                                            },
                                        }
                                    ],
                                    text: "Test string",
                                },
                                pointValue: 42,
                                whenRight: {
                                    material: [
                                        {
                                            link: {
                                                displayText: "Test string",
                                                uri: "Test string",
                                            },
                                            video: {
                                                displayText: "Test string",
                                                youtubeUri: "Test string",
                                            },
                                        }
                                    ],
                                    text: "Test string",
                                },
                                whenWrong: {
                                    material: [
                                        {
                                            link: {
                                                displayText: "Test string",
                                                uri: "Test string",
                                            },
                                            video: {
                                                displayText: "Test string",
                                                youtubeUri: "Test string",
                                            },
                                        }
                                    ],
                                    text: "Test string",
                                },
                            },
                            questionId: "Test string",
                            required: true,
                            rowQuestion: {
                                title: "Test string",
                            },
                            scaleQuestion: {
                                high: 42,
                                highLabel: "Test string",
                                low: 42,
                                lowLabel: "Test string",
                            },
                            textQuestion: {
                                paragraph: true,
                            },
                            timeQuestion: {
                                duration: true,
                            },
                        },
                    },
                    textItem: {
                    },
                    title: "Test string",
                    videoItem: {
                        caption: "Test string",
                        video: {
                            properties: {
                                alignment: "Test string",
                                width: 42,
                            },
                            youtubeUri: "Test string",
                        },
                    },
                }
            ],
            linkedSheetId: "Test string",
            responderUri: "Test string",
            revisionId: "Test string",
            settings: {
                quizSettings: {
                    isQuiz: true,
                },
            },
        });
        /** Get a form. */
        await gapi.client.forms.forms.get({
            formId: "Test string",
        });
        /** Get one response from the form. */
        await gapi.client.forms.forms.responses.get({
            formId: "Test string",
            responseId: "Test string",
        });
        /** List a form's responses. */
        await gapi.client.forms.forms.responses.list({
            filter: "Test string",
            formId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /**
         * Create a new watch. If a watch ID is provided, it must be unused. For each invoking project, the per form limit is one watch per Watch.EventType. A watch expires seven days after it is
         * created (see Watch.expire_time).
         */
        await gapi.client.forms.forms.watches.create({
            formId: "Test string",
        }, {
            watch: {
                createTime: "Test string",
                errorType: "Test string",
                eventType: "Test string",
                expireTime: "Test string",
                id: "Test string",
                state: "Test string",
                target: {
                    topic: {
                        topicName: "Test string",
                    },
                },
            },
            watchId: "Test string",
        });
        /** Delete a watch. */
        await gapi.client.forms.forms.watches.delete({
            formId: "Test string",
            watchId: "Test string",
        });
        /** Return a list of the watches owned by the invoking project. The maximum number of watches is two: For each invoker, the limit is one for each event type per form. */
        await gapi.client.forms.forms.watches.list({
            formId: "Test string",
        });
        /**
         * Renew an existing watch for seven days. The state of the watch after renewal is `ACTIVE`, and the `expire_time` is seven days from the renewal. Renewing a watch in an error state (e.g.
         * `SUSPENDED`) succeeds if the error is no longer present, but fail otherwise. After a watch has expired, RenewWatch returns `NOT_FOUND`.
         */
        await gapi.client.forms.forms.watches.renew({
            formId: "Test string",
            watchId: "Test string",
        }, {
        });
    }
});
