/* Type definitions for non-npm package Data Labeling API v1beta1 1.0 */
// Project: https://cloud.google.com/data-labeling/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://datalabeling.googleapis.com/$discovery/rest?version=v1beta1
// Revision: 20220118

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Data Labeling API v1beta1 */
    function load(name: "datalabeling", version: "v1beta1"): PromiseLike<void>;
    function load(name: "datalabeling", version: "v1beta1", callback: () => any): void;

    namespace datalabeling {
        interface GoogleCloudDatalabelingV1alpha1CreateInstructionMetadata {
            /** Timestamp when create instruction request was created. */
            createTime?: string;
            /** The name of the created Instruction. projects/{project_id}/instructions/{instruction_id} */
            instruction?: string;
            /** Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1alpha1ExportDataOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when export dataset request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be exported. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1alpha1ExportDataOperationResponse {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Ouptut only. The name of dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Number of examples exported successfully. */
            exportCount?: number;
            /** Output only. Statistic infos of labels in the exported dataset. */
            labelStats?: GoogleCloudDatalabelingV1alpha1LabelStats;
            /** Output only. output_config in the ExportData request. */
            outputConfig?: GoogleCloudDatalabelingV1alpha1OutputConfig;
            /** Output only. Total number of examples requested to export */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1alpha1GcsDestination {
            /** Required. The format of the gcs destination. Only "text/csv" and "application/json" are supported. */
            mimeType?: string;
            /** Required. The output uri of destination file. */
            outputUri?: string;
        }
        interface GoogleCloudDatalabelingV1alpha1GcsFolderDestination {
            /** Required. Cloud Storage directory to export data to. */
            outputFolderUri?: string;
        }
        interface GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig {
            /** Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long. */
            annotatedDatasetDescription?: string;
            /** Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters . */
            annotatedDatasetDisplayName?: string;
            /**
             * Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types
             * in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/
             */
            contributorEmails?: string[];
            /** Required. Instruction resource name. */
            instruction?: string;
            /** Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\d_-]{0,128}`. */
            labelGroup?: string;
            /**
             * Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related.
             * For example, French text classification.
             */
            languageCode?: string;
            /** Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds. */
            questionDuration?: string;
            /**
             * Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image
             * related labeling, valid values are 1, 3, 5.
             */
            replicaCount?: number;
            /** Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata {
            /** Output only. Timestamp when import dataset request was created. */
            createTime?: string;
            /** Output only. The name of imported dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1alpha1ImportDataOperationResponse {
            /** Ouptut only. The name of imported dataset. */
            dataset?: string;
            /** Output only. Number of examples imported successfully. */
            importCount?: number;
            /** Output only. Total number of examples requested to import */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImageBoundingBoxOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImageBoundingPolyOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImageClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImageOrientedBoundingBoxOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImagePolylineOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelImageSegmentationOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when labeling request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be labeled. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Details of label image bounding box operation. */
            imageBoundingBoxDetails?: GoogleCloudDatalabelingV1alpha1LabelImageBoundingBoxOperationMetadata;
            /** Details of label image bounding poly operation. */
            imageBoundingPolyDetails?: GoogleCloudDatalabelingV1alpha1LabelImageBoundingPolyOperationMetadata;
            /** Details of label image classification operation. */
            imageClassificationDetails?: GoogleCloudDatalabelingV1alpha1LabelImageClassificationOperationMetadata;
            /** Details of label image oriented bounding box operation. */
            imageOrientedBoundingBoxDetails?: GoogleCloudDatalabelingV1alpha1LabelImageOrientedBoundingBoxOperationMetadata;
            /** Details of label image polyline operation. */
            imagePolylineDetails?: GoogleCloudDatalabelingV1alpha1LabelImagePolylineOperationMetadata;
            /** Details of label image segmentation operation. */
            imageSegmentationDetails?: GoogleCloudDatalabelingV1alpha1LabelImageSegmentationOperationMetadata;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
            /** Output only. Progress of label operation. Range: [0, 100]. */
            progressPercent?: number;
            /** Details of label text classification operation. */
            textClassificationDetails?: GoogleCloudDatalabelingV1alpha1LabelTextClassificationOperationMetadata;
            /** Details of label text entity extraction operation. */
            textEntityExtractionDetails?: GoogleCloudDatalabelingV1alpha1LabelTextEntityExtractionOperationMetadata;
            /** Details of label video classification operation. */
            videoClassificationDetails?: GoogleCloudDatalabelingV1alpha1LabelVideoClassificationOperationMetadata;
            /** Details of label video event operation. */
            videoEventDetails?: GoogleCloudDatalabelingV1alpha1LabelVideoEventOperationMetadata;
            /** Details of label video object detection operation. */
            videoObjectDetectionDetails?: GoogleCloudDatalabelingV1alpha1LabelVideoObjectDetectionOperationMetadata;
            /** Details of label video object tracking operation. */
            videoObjectTrackingDetails?: GoogleCloudDatalabelingV1alpha1LabelVideoObjectTrackingOperationMetadata;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelStats {
            /**
             * Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have
             * annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.
             */
            exampleCount?: { [P in string]: string };
        }
        interface GoogleCloudDatalabelingV1alpha1LabelTextClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelTextEntityExtractionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelVideoClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelVideoEventOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelVideoObjectDetectionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1LabelVideoObjectTrackingOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1alpha1OutputConfig {
            /** Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation. */
            gcsDestination?: GoogleCloudDatalabelingV1alpha1GcsDestination;
            /** Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs. */
            gcsFolderDestination?: GoogleCloudDatalabelingV1alpha1GcsFolderDestination;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotatedDataset {
            /** Output only. Source of the annotation. */
            annotationSource?: string;
            /** Output only. Type of the annotation. It is specified when starting labeling task. */
            annotationType?: string;
            /** Output only. The names of any related resources that are blocking changes to the annotated dataset. */
            blockingResources?: string[];
            /** Output only. Number of examples that have annotation in the annotated dataset. */
            completedExampleCount?: string;
            /** Output only. Time the AnnotatedDataset was created. */
            createTime?: string;
            /** Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters. */
            description?: string;
            /** Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters. */
            displayName?: string;
            /** Output only. Number of examples in the annotated dataset. */
            exampleCount?: string;
            /** Output only. Per label statistics. */
            labelStats?: GoogleCloudDatalabelingV1beta1LabelStats;
            /** Output only. Additional information about AnnotatedDataset. */
            metadata?: GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata;
            /** Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id} */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata {
            /** Configuration for image bounding box and bounding poly task. */
            boundingPolyConfig?: GoogleCloudDatalabelingV1beta1BoundingPolyConfig;
            /** Configuration for video event labeling task. */
            eventConfig?: GoogleCloudDatalabelingV1beta1EventConfig;
            /** HumanAnnotationConfig used when requesting the human labeling task for this AnnotatedDataset. */
            humanAnnotationConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
            /** Configuration for image classification task. */
            imageClassificationConfig?: GoogleCloudDatalabelingV1beta1ImageClassificationConfig;
            /** Configuration for video object detection task. */
            objectDetectionConfig?: GoogleCloudDatalabelingV1beta1ObjectDetectionConfig;
            /** Configuration for video object tracking task. */
            objectTrackingConfig?: GoogleCloudDatalabelingV1beta1ObjectTrackingConfig;
            /** Configuration for image polyline task. */
            polylineConfig?: GoogleCloudDatalabelingV1beta1PolylineConfig;
            /** Configuration for image segmentation task. */
            segmentationConfig?: GoogleCloudDatalabelingV1beta1SegmentationConfig;
            /** Configuration for text classification task. */
            textClassificationConfig?: GoogleCloudDatalabelingV1beta1TextClassificationConfig;
            /** Configuration for text entity extraction task. */
            textEntityExtractionConfig?: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig;
            /** Configuration for video classification task. */
            videoClassificationConfig?: GoogleCloudDatalabelingV1beta1VideoClassificationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1Annotation {
            /** Output only. Annotation metadata, including information like votes for labels. */
            annotationMetadata?: GoogleCloudDatalabelingV1beta1AnnotationMetadata;
            /** Output only. Sentiment for this annotation. */
            annotationSentiment?: string;
            /** Output only. The source of the annotation. */
            annotationSource?: string;
            /** Output only. This is the actual annotation value, e.g classification, bounding box values are stored here. */
            annotationValue?: GoogleCloudDatalabelingV1beta1AnnotationValue;
            /**
             * Output only. Unique name of this annotation, format is:
             * projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset}/examples/{example_id}/annotations/{annotation_id}
             */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotationMetadata {
            /** Metadata related to human labeling. */
            operatorMetadata?: GoogleCloudDatalabelingV1beta1OperatorMetadata;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotationSpec {
            /** Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long. */
            description?: string;
            /** Required. The display name of the AnnotationSpec. Maximum of 64 characters. */
            displayName?: string;
            /**
             * Output only. This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes
             * `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: "dog", index: 0 }` and one AnnotationSpec with `{ display_name: "cat", index: 1 }`. This is especially useful
             * for model training as it encodes the string labels into numeric values.
             */
            index?: number;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotationSpecSet {
            /** Required. The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task. */
            annotationSpecs?: GoogleCloudDatalabelingV1beta1AnnotationSpec[];
            /** Output only. The names of any related resources that are blocking changes to the annotation spec set. */
            blockingResources?: string[];
            /** Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long. */
            description?: string;
            /** Required. The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters. */
            displayName?: string;
            /** Output only. The AnnotationSpecSet resource name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}" */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig {
            /** Optional. If allow_multi_label is true, contributors are able to choose multiple labels from one annotation spec set. */
            allowMultiLabel?: boolean;
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
        }
        interface GoogleCloudDatalabelingV1beta1AnnotationValue {
            /** Annotation value for image bounding box, oriented bounding box and polygon cases. */
            imageBoundingPolyAnnotation?: GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation;
            /** Annotation value for image classification case. */
            imageClassificationAnnotation?: GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation;
            /**
             * Annotation value for image polyline cases. Polyline here is different from BoundingPoly. It is formed by line segments connected to each other but not closed form(Bounding Poly).
             * The line segments can cross each other.
             */
            imagePolylineAnnotation?: GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation;
            /** Annotation value for image segmentation. */
            imageSegmentationAnnotation?: GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation;
            /** Annotation value for text classification case. */
            textClassificationAnnotation?: GoogleCloudDatalabelingV1beta1TextClassificationAnnotation;
            /** Annotation value for text entity extraction case. */
            textEntityExtractionAnnotation?: GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation;
            /** Annotation value for video classification case. */
            videoClassificationAnnotation?: GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation;
            /** Annotation value for video event case. */
            videoEventAnnotation?: GoogleCloudDatalabelingV1beta1VideoEventAnnotation;
            /** Annotation value for video object detection and tracking case. */
            videoObjectTrackingAnnotation?: GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation;
        }
        interface GoogleCloudDatalabelingV1beta1Attempt {
            attemptTime?: string;
            /** Details of errors that occurred. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1beta1BigQuerySource {
            /**
             * Required. BigQuery URI to a table, up to 2,000 characters long. If you specify the URI of a table that does not exist, Data Labeling Service creates a table at the URI with the
             * correct schema when you create your EvaluationJob. If you specify the URI of a table that already exists, it must have the [correct
             * schema](/ml-engine/docs/continuous-evaluation/create-job#table-schema). Provide the table URI in the following format: "bq://{your_project_id}/
             * {your_dataset_name}/{your_table_name}" [Learn more](/ml-engine/docs/continuous-evaluation/create-job#table-schema).
             */
            inputUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions {
            /**
             * Minimum [intersection-over-union (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) required for 2 bounding boxes to be considered a match. This must be a
             * number between 0 and 1.
             */
            iouThreshold?: number;
        }
        interface GoogleCloudDatalabelingV1beta1BoundingPoly {
            /** The bounding polygon vertices. */
            vertices?: GoogleCloudDatalabelingV1beta1Vertex[];
        }
        interface GoogleCloudDatalabelingV1beta1BoundingPolyConfig {
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Optional. Instruction message showed on contributors UI. */
            instructionMessage?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ClassificationMetadata {
            /** Whether the classification task is multi-label or not. */
            isMultiLabel?: boolean;
        }
        interface GoogleCloudDatalabelingV1beta1ClassificationMetrics {
            /** Confusion matrix of predicted labels vs. ground truth labels. */
            confusionMatrix?: GoogleCloudDatalabelingV1beta1ConfusionMatrix;
            /** Precision-recall curve based on ground truth labels, predicted labels, and scores for the predicted labels. */
            prCurve?: GoogleCloudDatalabelingV1beta1PrCurve;
        }
        interface GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry {
            /**
             * Threshold used for this entry. For classification tasks, this is a classification threshold: a predicted label is categorized as positive or negative (in the context of this point
             * on the PR curve) based on whether the label's score meets this threshold. For image object detection (bounding box) tasks, this is the [intersection-over-union
             * (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) threshold for the context of this point on the PR curve.
             */
            confidenceThreshold?: number;
            /** Harmonic mean of recall and precision. */
            f1Score?: number;
            /** The harmonic mean of recall_at1 and precision_at1. */
            f1ScoreAt1?: number;
            /** The harmonic mean of recall_at5 and precision_at5. */
            f1ScoreAt5?: number;
            /** Precision value. */
            precision?: number;
            /** Precision value for entries with label that has highest score. */
            precisionAt1?: number;
            /** Precision value for entries with label that has highest 5 scores. */
            precisionAt5?: number;
            /** Recall value. */
            recall?: number;
            /** Recall value for entries with label that has highest score. */
            recallAt1?: number;
            /** Recall value for entries with label that has highest 5 scores. */
            recallAt5?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ConfusionMatrix {
            row?: GoogleCloudDatalabelingV1beta1Row[];
        }
        interface GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry {
            /** The annotation spec of a predicted label. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** Number of items predicted to have this label. (The ground truth label for these items is the `Row.annotationSpec` of this entry's parent.) */
            itemCount?: number;
        }
        interface GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest {
            /** Required. Annotation spec set to create. Annotation specs must be included. Only one annotation spec will be accepted for annotation specs with same display_name. */
            annotationSpecSet?: GoogleCloudDatalabelingV1beta1AnnotationSpecSet;
        }
        interface GoogleCloudDatalabelingV1beta1CreateDatasetRequest {
            /** Required. The dataset to be created. */
            dataset?: GoogleCloudDatalabelingV1beta1Dataset;
        }
        interface GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest {
            /** Required. The evaluation job to create. */
            job?: GoogleCloudDatalabelingV1beta1EvaluationJob;
        }
        interface GoogleCloudDatalabelingV1beta1CreateInstructionMetadata {
            /** Timestamp when create instruction request was created. */
            createTime?: string;
            /** The name of the created Instruction. projects/{project_id}/instructions/{instruction_id} */
            instruction?: string;
            /** Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1beta1CreateInstructionRequest {
            /** Required. Instruction of how to perform the labeling task. */
            instruction?: GoogleCloudDatalabelingV1beta1Instruction;
        }
        interface GoogleCloudDatalabelingV1beta1CsvInstruction {
            /** CSV file for the instruction. Only gcs path is allowed. */
            gcsFileUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1DataItem {
            /** The image payload, a container of the image bytes/uri. */
            imagePayload?: GoogleCloudDatalabelingV1beta1ImagePayload;
            /** Output only. Name of the data item, in format of: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id} */
            name?: string;
            /** The text payload, a container of text content. */
            textPayload?: GoogleCloudDatalabelingV1beta1TextPayload;
            /** The video payload, a container of the video uri. */
            videoPayload?: GoogleCloudDatalabelingV1beta1VideoPayload;
        }
        interface GoogleCloudDatalabelingV1beta1Dataset {
            /** Output only. The names of any related resources that are blocking changes to the dataset. */
            blockingResources?: string[];
            /** Output only. Time the dataset is created. */
            createTime?: string;
            /** Output only. The number of data items in the dataset. */
            dataItemCount?: string;
            /** Optional. User-provided description of the annotation specification set. The description can be up to 10000 characters long. */
            description?: string;
            /** Required. The display name of the dataset. Maximum of 64 characters. */
            displayName?: string;
            /** Output only. This is populated with the original input configs where ImportData is called. It is available only after the clients import data to this dataset. */
            inputConfigs?: GoogleCloudDatalabelingV1beta1InputConfig[];
            /** Last time that the Dataset is migrated to AI Platform V2. If any of the AnnotatedDataset is migrated, the last_migration_time in Dataset is also updated. */
            lastMigrateTime?: string;
            /** Output only. Dataset resource name, format is: projects/{project_id}/datasets/{dataset_id} */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1Evaluation {
            /**
             * Output only. Type of task that the model version being evaluated performs, as defined in the evaluationJobConfig.inputConfig.annotationType field of the evaluation job that created
             * this evaluation.
             */
            annotationType?: string;
            /** Output only. Options used in the evaluation job that created this evaluation. */
            config?: GoogleCloudDatalabelingV1beta1EvaluationConfig;
            /** Output only. Timestamp for when this evaluation was created. */
            createTime?: string;
            /** Output only. The number of items in the ground truth dataset that were used for this evaluation. Only populated when the evaulation is for certain AnnotationTypes. */
            evaluatedItemCount?: string;
            /** Output only. Timestamp for when the evaluation job that created this evaluation ran. */
            evaluationJobRunTime?: string;
            /** Output only. Metrics comparing predictions to ground truth labels. */
            evaluationMetrics?: GoogleCloudDatalabelingV1beta1EvaluationMetrics;
            /** Output only. Resource name of an evaluation. The name has the following format: "projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}' */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1EvaluationConfig {
            /** Only specify this field if the related model performs image object detection (`IMAGE_BOUNDING_BOX_ANNOTATION`). Describes how to evaluate bounding boxes. */
            boundingBoxEvaluationOptions?: GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions;
        }
        interface GoogleCloudDatalabelingV1beta1EvaluationJob {
            /**
             * Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and
             * provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
             */
            annotationSpecSet?: string;
            /** Output only. Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array. */
            attempts?: GoogleCloudDatalabelingV1beta1Attempt[];
            /** Output only. Timestamp of when this evaluation job was created. */
            createTime?: string;
            /** Required. Description of the job. The description can be up to 25,000 characters long. */
            description?: string;
            /** Required. Configuration details for the evaluation job. */
            evaluationJobConfig?: GoogleCloudDatalabelingV1beta1EvaluationJobConfig;
            /**
             * Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set
             * this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
             */
            labelMissingGroundTruth?: boolean;
            /**
             * Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When
             * creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation
             * job per model version.
             */
            modelVersion?: string;
            /** Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}" */
            name?: string;
            /**
             * Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval,
             * the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like
             * format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is
             * used, not the specific time of day.
             */
            schedule?: string;
            /** Output only. Describes the current state of the job. */
            state?: string;
        }
        interface GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig {
            /** Required. An email address to send alerts to. */
            email?: string;
            /**
             * Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions
             * from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email.
             */
            minAcceptableMeanAveragePrecision?: number;
        }
        interface GoogleCloudDatalabelingV1beta1EvaluationJobConfig {
            /**
             * Required. Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from
             * your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide
             * the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data
             * reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`:
             * the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection.
             * Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).
             */
            bigqueryImportKeys?: { [P in string]: string };
            /**
             * Specify this field if your model version performs image object detection (bounding box detection). `annotationSpecSet` in this configuration must match
             * EvaluationJob.annotationSpecSet.
             */
            boundingPolyConfig?: GoogleCloudDatalabelingV1beta1BoundingPolyConfig;
            /**
             * Required. Details for calculating evaluation metrics and creating Evaulations. If your model version performs image object detection, you must specify the
             * `boundingBoxEvaluationOptions` field within this configuration. Otherwise, provide an empty object for this configuration.
             */
            evaluationConfig?: GoogleCloudDatalabelingV1beta1EvaluationConfig;
            /**
             * Optional. Configuration details for evaluation job alerts. Specify this field if you want to receive email alerts if the evaluation job finds that your predictions have low mean
             * average precision during a run.
             */
            evaluationJobAlertConfig?: GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig;
            /**
             * Required. The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has
             * not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit.
             */
            exampleCount?: number;
            /**
             * Required. Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to
             * BigQuery.
             */
            exampleSamplePercentage?: number;
            /**
             * Optional. Details for human annotation of your data. If you set labelMissingGroundTruth to `true` for this evaluation job, then you must specify this field. If you plan to provide
             * your own ground truth labels, then omit this field. Note that you must create an Instruction resource before you can specify this field. Provide the name of the instruction resource
             * in the `instruction` field within this configuration.
             */
            humanAnnotationConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
            /**
             * Specify this field if your model version performs image classification or general classification. `annotationSpecSet` in this configuration must match
             * EvaluationJob.annotationSpecSet. `allowMultiLabel` in this configuration must match `classificationMetadata.isMultiLabel` in input_config.
             */
            imageClassificationConfig?: GoogleCloudDatalabelingV1beta1ImageClassificationConfig;
            /**
             * Rquired. Details for the sampled prediction input. Within this configuration, there are requirements for several fields: * `dataType` must be one of `IMAGE`, `TEXT`, or
             * `GENERAL_DATA`. * `annotationType` must be one of `IMAGE_CLASSIFICATION_ANNOTATION`, `TEXT_CLASSIFICATION_ANNOTATION`, `GENERAL_CLASSIFICATION_ANNOTATION`, or
             * `IMAGE_BOUNDING_BOX_ANNOTATION` (image object detection). * If your machine learning model performs classification, you must specify `classificationMetadata.isMultiLabel`. * You
             * must specify `bigquerySource` (not `gcsSource`).
             */
            inputConfig?: GoogleCloudDatalabelingV1beta1InputConfig;
            /**
             * Specify this field if your model version performs text classification. `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet. `allowMultiLabel` in
             * this configuration must match `classificationMetadata.isMultiLabel` in input_config.
             */
            textClassificationConfig?: GoogleCloudDatalabelingV1beta1TextClassificationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1EvaluationMetrics {
            classificationMetrics?: GoogleCloudDatalabelingV1beta1ClassificationMetrics;
            objectDetectionMetrics?: GoogleCloudDatalabelingV1beta1ObjectDetectionMetrics;
        }
        interface GoogleCloudDatalabelingV1beta1EventConfig {
            /** Required. The list of annotation spec set resource name. Similar to video classification, we support selecting event from multiple AnnotationSpecSet at the same time. */
            annotationSpecSets?: string[];
            /** Videos will be cut to smaller clips to make it easier for labelers to work on. Users can configure is field in seconds, if not set, default value is 60s. */
            clipLength?: number;
            /** The overlap length between different video clips. Users can configure is field in seconds, if not set, default value is 1s. */
            overlapLength?: number;
        }
        interface GoogleCloudDatalabelingV1beta1Example {
            /** Output only. Annotations for the piece of data in Example. One piece of data can have multiple annotations. */
            annotations?: GoogleCloudDatalabelingV1beta1Annotation[];
            /** The image payload, a container of the image bytes/uri. */
            imagePayload?: GoogleCloudDatalabelingV1beta1ImagePayload;
            /** Output only. Name of the example, in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id} */
            name?: string;
            /** The text payload, a container of the text content. */
            textPayload?: GoogleCloudDatalabelingV1beta1TextPayload;
            /** The video payload, a container of the video uri. */
            videoPayload?: GoogleCloudDatalabelingV1beta1VideoPayload;
        }
        interface GoogleCloudDatalabelingV1beta1ExampleComparison {
            /** The ground truth output for the input. */
            groundTruthExample?: GoogleCloudDatalabelingV1beta1Example;
            /** Predictions by the model for the input. */
            modelCreatedExamples?: GoogleCloudDatalabelingV1beta1Example[];
        }
        interface GoogleCloudDatalabelingV1beta1ExportDataOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when export dataset request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be exported. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1beta1ExportDataOperationResponse {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Ouptut only. The name of dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Number of examples exported successfully. */
            exportCount?: number;
            /** Output only. Statistic infos of labels in the exported dataset. */
            labelStats?: GoogleCloudDatalabelingV1beta1LabelStats;
            /** Output only. output_config in the ExportData request. */
            outputConfig?: GoogleCloudDatalabelingV1beta1OutputConfig;
            /** Output only. Total number of examples requested to export */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ExportDataRequest {
            /**
             * Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of
             * projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}
             */
            annotatedDataset?: string;
            /** Optional. Filter is not supported at this moment. */
            filter?: string;
            /** Required. Specify the output destination. */
            outputConfig?: GoogleCloudDatalabelingV1beta1OutputConfig;
            /** Email of the user who started the export task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1beta1FeedbackMessage {
            /** String content of the feedback. Maximum of 10000 characters. */
            body?: string;
            /** Create time. */
            createTime?: string;
            /** The image storing this feedback if the feedback is an image representing operator's comments. */
            image?: string;
            /**
             * Name of the feedback message in a feedback thread. Format:
             * 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'
             */
            name?: string;
            operatorFeedbackMetadata?: any;
            requesterFeedbackMetadata?: any;
        }
        interface GoogleCloudDatalabelingV1beta1FeedbackThread {
            /** Metadata regarding the feedback thread. */
            feedbackThreadMetadata?: GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata;
            /** Name of the feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}' */
            name?: string;
        }
        interface GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata {
            /** When the thread is created */
            createTime?: string;
            /** When the thread is last updated. */
            lastUpdateTime?: string;
            status?: string;
            /** An image thumbnail of this thread. */
            thumbnail?: string;
        }
        interface GoogleCloudDatalabelingV1beta1GcsDestination {
            /** Required. The format of the gcs destination. Only "text/csv" and "application/json" are supported. */
            mimeType?: string;
            /** Required. The output uri of destination file. */
            outputUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1GcsFolderDestination {
            /** Required. Cloud Storage directory to export data to. */
            outputFolderUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1GcsSource {
            /** Required. The input URI of source file. This must be a Cloud Storage path (`gs://...`). */
            inputUri?: string;
            /** Required. The format of the source file. Only "text/csv" is supported. */
            mimeType?: string;
        }
        interface GoogleCloudDatalabelingV1beta1HumanAnnotationConfig {
            /** Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long. */
            annotatedDatasetDescription?: string;
            /** Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters . */
            annotatedDatasetDisplayName?: string;
            /**
             * Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types
             * in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/
             */
            contributorEmails?: string[];
            /** Required. Instruction resource name. */
            instruction?: string;
            /** Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\d_-]{0,128}`. */
            labelGroup?: string;
            /**
             * Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related.
             * For example, French text classification.
             */
            languageCode?: string;
            /** Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds. */
            questionDuration?: string;
            /**
             * Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image
             * related labeling, valid values are 1, 3, 5.
             */
            replicaCount?: number;
            /** Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation {
            /** Label of object in this bounding polygon. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            boundingPoly?: GoogleCloudDatalabelingV1beta1BoundingPoly;
            normalizedBoundingPoly?: GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly;
        }
        interface GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation {
            /** Label of image. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
        }
        interface GoogleCloudDatalabelingV1beta1ImageClassificationConfig {
            /** Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image. */
            allowMultiLabel?: boolean;
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Optional. The type of how to aggregate answers. */
            answerAggregationType?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ImagePayload {
            /** A byte string of a thumbnail image. */
            imageThumbnail?: string;
            /** Image uri from the user bucket. */
            imageUri?: string;
            /** Image format. */
            mimeType?: string;
            /** Signed uri of the image file in the service bucket. */
            signedUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation {
            /** Label of this polyline. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            normalizedPolyline?: GoogleCloudDatalabelingV1beta1NormalizedPolyline;
            polyline?: GoogleCloudDatalabelingV1beta1Polyline;
        }
        interface GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation {
            /** The mapping between rgb color and annotation spec. The key is the rgb color represented in format of rgb(0, 0, 0). The value is the AnnotationSpec. */
            annotationColors?: { [P in string]: GoogleCloudDatalabelingV1beta1AnnotationSpec };
            /** A byte string of a full image's color map. */
            imageBytes?: string;
            /** Image format. */
            mimeType?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ImportDataOperationMetadata {
            /** Output only. Timestamp when import dataset request was created. */
            createTime?: string;
            /** Output only. The name of imported dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1beta1ImportDataOperationResponse {
            /** Ouptut only. The name of imported dataset. */
            dataset?: string;
            /** Output only. Number of examples imported successfully. */
            importCount?: number;
            /** Output only. Total number of examples requested to import */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ImportDataRequest {
            /** Required. Specify the input source of the data. */
            inputConfig?: GoogleCloudDatalabelingV1beta1InputConfig;
            /** Email of the user who started the import task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1beta1InputConfig {
            /** Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob. */
            annotationType?: string;
            /** Source located in BigQuery. You must specify this field if you are using this InputConfig in an EvaluationJob. */
            bigquerySource?: GoogleCloudDatalabelingV1beta1BigQuerySource;
            /**
             * Optional. Metadata about annotations for the input. You must specify this field if you are using this InputConfig in an EvaluationJob for a model version that performs
             * classification.
             */
            classificationMetadata?: GoogleCloudDatalabelingV1beta1ClassificationMetadata;
            /** Required. Data type must be specifed when user tries to import data. */
            dataType?: string;
            /** Source located in Cloud Storage. */
            gcsSource?: GoogleCloudDatalabelingV1beta1GcsSource;
            /** Required for text import, as language code must be specified. */
            textMetadata?: GoogleCloudDatalabelingV1beta1TextMetadata;
        }
        interface GoogleCloudDatalabelingV1beta1Instruction {
            /** Output only. The names of any related resources that are blocking changes to the instruction. */
            blockingResources?: string[];
            /** Output only. Creation time of instruction. */
            createTime?: string;
            /**
             * Deprecated: this instruction format is not supported any more. Instruction from a CSV file, such as for classification task. The CSV file should have exact two columns, in the
             * following format: * The first column is labeled data, such as an image reference, text. * The second column is comma separated labels associated with data.
             */
            csvInstruction?: GoogleCloudDatalabelingV1beta1CsvInstruction;
            /** Required. The data type of this instruction. */
            dataType?: string;
            /** Optional. User-provided description of the instruction. The description can be up to 10000 characters long. */
            description?: string;
            /** Required. The display name of the instruction. Maximum of 64 characters. */
            displayName?: string;
            /** Output only. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id} */
            name?: string;
            /** Instruction from a PDF document. The PDF should be in a Cloud Storage bucket. */
            pdfInstruction?: GoogleCloudDatalabelingV1beta1PdfInstruction;
            /** Output only. Last update time of instruction. */
            updateTime?: string;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageRequest {
            /** Required. Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
            /** Configuration for bounding box and bounding poly task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required. */
            boundingPolyConfig?: GoogleCloudDatalabelingV1beta1BoundingPolyConfig;
            /** Required. The type of image labeling task. */
            feature?: string;
            /** Configuration for image classification task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required. */
            imageClassificationConfig?: GoogleCloudDatalabelingV1beta1ImageClassificationConfig;
            /** Configuration for polyline task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required. */
            polylineConfig?: GoogleCloudDatalabelingV1beta1PolylineConfig;
            /** Configuration for segmentation task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required. */
            segmentationConfig?: GoogleCloudDatalabelingV1beta1SegmentationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when labeling request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be labeled. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Details of label image bounding box operation. */
            imageBoundingBoxDetails?: GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata;
            /** Details of label image bounding poly operation. */
            imageBoundingPolyDetails?: GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata;
            /** Details of label image classification operation. */
            imageClassificationDetails?: GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata;
            /** Details of label image oriented bounding box operation. */
            imageOrientedBoundingBoxDetails?: GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata;
            /** Details of label image polyline operation. */
            imagePolylineDetails?: GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata;
            /** Details of label image segmentation operation. */
            imageSegmentationDetails?: GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
            /** Output only. Progress of label operation. Range: [0, 100]. */
            progressPercent?: number;
            /** Details of label text classification operation. */
            textClassificationDetails?: GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata;
            /** Details of label text entity extraction operation. */
            textEntityExtractionDetails?: GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata;
            /** Details of label video classification operation. */
            videoClassificationDetails?: GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata;
            /** Details of label video event operation. */
            videoEventDetails?: GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata;
            /** Details of label video object detection operation. */
            videoObjectDetectionDetails?: GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata;
            /** Details of label video object tracking operation. */
            videoObjectTrackingDetails?: GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata;
        }
        interface GoogleCloudDatalabelingV1beta1LabelStats {
            /**
             * Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have
             * annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.
             */
            exampleCount?: { [P in string]: string };
        }
        interface GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelTextRequest {
            /** Required. Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
            /** Required. The type of text labeling task. */
            feature?: string;
            /** Configuration for text classification task. One of text_classification_config and text_entity_extraction_config is required. */
            textClassificationConfig?: GoogleCloudDatalabelingV1beta1TextClassificationConfig;
            /** Configuration for entity extraction task. One of text_classification_config and text_entity_extraction_config is required. */
            textEntityExtractionConfig?: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1LabelVideoRequest {
            /** Required. Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
            /** Configuration for video event task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required. */
            eventConfig?: GoogleCloudDatalabelingV1beta1EventConfig;
            /** Required. The type of video labeling task. */
            feature?: string;
            /** Configuration for video object detection task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required. */
            objectDetectionConfig?: GoogleCloudDatalabelingV1beta1ObjectDetectionConfig;
            /** Configuration for video object tracking task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required. */
            objectTrackingConfig?: GoogleCloudDatalabelingV1beta1ObjectTrackingConfig;
            /** Configuration for video classification task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required. */
            videoClassificationConfig?: GoogleCloudDatalabelingV1beta1VideoClassificationConfig;
        }
        interface GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse {
            /** The list of annotated datasets to return. */
            annotatedDatasets?: GoogleCloudDatalabelingV1beta1AnnotatedDataset[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse {
            /** The list of annotation spec sets. */
            annotationSpecSets?: GoogleCloudDatalabelingV1beta1AnnotationSpecSet[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListDataItemsResponse {
            /** The list of data items to return. */
            dataItems?: GoogleCloudDatalabelingV1beta1DataItem[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListDatasetsResponse {
            /** The list of datasets to return. */
            datasets?: GoogleCloudDatalabelingV1beta1Dataset[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse {
            /** The list of evaluation jobs to return. */
            evaluationJobs?: GoogleCloudDatalabelingV1beta1EvaluationJob[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListExamplesResponse {
            /** The list of examples to return. */
            examples?: GoogleCloudDatalabelingV1beta1Example[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse {
            /** The list of feedback messages to return. */
            feedbackMessages?: GoogleCloudDatalabelingV1beta1FeedbackMessage[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse {
            /** The list of feedback threads to return. */
            feedbackThreads?: GoogleCloudDatalabelingV1beta1FeedbackThread[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1ListInstructionsResponse {
            /** The list of Instructions to return. */
            instructions?: GoogleCloudDatalabelingV1beta1Instruction[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly {
            /** The bounding polygon normalized vertices. */
            normalizedVertices?: GoogleCloudDatalabelingV1beta1NormalizedVertex[];
        }
        interface GoogleCloudDatalabelingV1beta1NormalizedPolyline {
            /** The normalized polyline vertices. */
            normalizedVertices?: GoogleCloudDatalabelingV1beta1NormalizedVertex[];
        }
        interface GoogleCloudDatalabelingV1beta1NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ObjectDetectionConfig {
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Required. Number of frames per second to be extracted from the video. */
            extractionFrameRate?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ObjectDetectionMetrics {
            /** Precision-recall curve. */
            prCurve?: GoogleCloudDatalabelingV1beta1PrCurve;
        }
        interface GoogleCloudDatalabelingV1beta1ObjectTrackingConfig {
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Videos will be cut to smaller clips to make it easier for labelers to work on. Users can configure is field in seconds, if not set, default value is 20s. */
            clipLength?: number;
            /** The overlap length between different video clips. Users can configure is field in seconds, if not set, default value is 0.3s. */
            overlapLength?: number;
        }
        interface GoogleCloudDatalabelingV1beta1ObjectTrackingFrame {
            boundingPoly?: GoogleCloudDatalabelingV1beta1BoundingPoly;
            normalizedBoundingPoly?: GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly;
            /** The time offset of this frame relative to the beginning of the video. */
            timeOffset?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadata {
        }
        interface GoogleCloudDatalabelingV1beta1OperatorMetadata {
            /** Comments from contributors. */
            comments?: string[];
            /** The total number of contributors that choose this label. */
            labelVotes?: number;
            /** Confidence score corresponding to a label. For examle, if 3 contributors have answered the question and 2 of them agree on the final label, the confidence score will be 0.67 (2/3). */
            score?: number;
            /** The total number of contributors that answer this question. */
            totalVotes?: number;
        }
        interface GoogleCloudDatalabelingV1beta1OutputConfig {
            /** Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation. */
            gcsDestination?: GoogleCloudDatalabelingV1beta1GcsDestination;
            /** Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs. */
            gcsFolderDestination?: GoogleCloudDatalabelingV1beta1GcsFolderDestination;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest {
        }
        interface GoogleCloudDatalabelingV1beta1PdfInstruction {
            /** PDF file for the instruction. Only gcs path is allowed. */
            gcsFileUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1Polyline {
            /** The polyline vertices. */
            vertices?: GoogleCloudDatalabelingV1beta1Vertex[];
        }
        interface GoogleCloudDatalabelingV1beta1PolylineConfig {
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Optional. Instruction message showed on contributors UI. */
            instructionMessage?: string;
        }
        interface GoogleCloudDatalabelingV1beta1PrCurve {
            /** The annotation spec of the label for which the precision-recall curve calculated. If this field is empty, that means the precision-recall curve is an aggregate curve for all labels. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** Area under the precision-recall curve. Not to be confused with area under a receiver operating characteristic (ROC) curve. */
            areaUnderCurve?: number;
            /** Entries that make up the precision-recall graph. Each entry is a "point" on the graph drawn for a different `confidence_threshold`. */
            confidenceMetricsEntries?: GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry[];
            /** Mean average prcision of this curve. */
            meanAveragePrecision?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadata {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest {
        }
        interface GoogleCloudDatalabelingV1beta1Row {
            /** The annotation spec of the ground truth label for this row. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** A list of the confusion matrix entries. One entry for each possible predicted label. */
            entries?: GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry[];
        }
        interface GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse {
            /** The list of evaluations matching the search. */
            evaluations?: GoogleCloudDatalabelingV1beta1Evaluation[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest {
            /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
            pageSize?: number;
            /**
             * Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken of the response to a previous search rquest. If you don't specify
             * this field, the API call requests the first page of the search.
             */
            pageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse {
            /** A list of example comparisons matching the search criteria. */
            exampleComparisons?: GoogleCloudDatalabelingV1beta1ExampleComparison[];
            /** A token to retrieve next page of results. */
            nextPageToken?: string;
        }
        interface GoogleCloudDatalabelingV1beta1SegmentationConfig {
            /** Required. Annotation spec set resource name. format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id} */
            annotationSpecSet?: string;
            /** Instruction message showed on labelers UI. */
            instructionMessage?: string;
        }
        interface GoogleCloudDatalabelingV1beta1SentimentConfig {
            /** If set to true, contributors will have the option to select sentiment of the label they selected, to mark it as negative or positive label. Default is false. */
            enableLabelSentimentSelection?: boolean;
        }
        interface GoogleCloudDatalabelingV1beta1SequentialSegment {
            /** End position (exclusive). */
            end?: number;
            /** Start position (inclusive). */
            start?: number;
        }
        interface GoogleCloudDatalabelingV1beta1TextClassificationAnnotation {
            /** Label of the text. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
        }
        interface GoogleCloudDatalabelingV1beta1TextClassificationConfig {
            /** Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one text segment. */
            allowMultiLabel?: boolean;
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
            /** Optional. Configs for sentiment selection. We deprecate sentiment analysis in data labeling side as it is incompatible with uCAIP. */
            sentimentConfig?: GoogleCloudDatalabelingV1beta1SentimentConfig;
        }
        interface GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation {
            /** Label of the text entities. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** Position of the entity. */
            sequentialSegment?: GoogleCloudDatalabelingV1beta1SequentialSegment;
        }
        interface GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig {
            /** Required. Annotation spec set resource name. */
            annotationSpecSet?: string;
        }
        interface GoogleCloudDatalabelingV1beta1TextMetadata {
            /** The language of this text, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. */
            languageCode?: string;
        }
        interface GoogleCloudDatalabelingV1beta1TextPayload {
            /** Text content. */
            textContent?: string;
        }
        interface GoogleCloudDatalabelingV1beta1TimeSegment {
            /** End of the time segment (exclusive), represented as the duration since the example start. */
            endTimeOffset?: string;
            /** Start of the time segment (inclusive), represented as the duration since the example start. */
            startTimeOffset?: string;
        }
        interface GoogleCloudDatalabelingV1beta1Vertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation {
            /** Label of the segment specified by time_segment. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** The time segment of the video to which the annotation applies. */
            timeSegment?: GoogleCloudDatalabelingV1beta1TimeSegment;
        }
        interface GoogleCloudDatalabelingV1beta1VideoClassificationConfig {
            /**
             * Required. The list of annotation spec set configs. Since watching a video clip takes much longer time than an image, we support label with multiple AnnotationSpecSet at the same
             * time. Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can select one or more (depending on whether to allow multi label) from each group.
             */
            annotationSpecSetConfigs?: GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig[];
            /** Optional. Option to apply shot detection on the video. */
            applyShotDetection?: boolean;
        }
        interface GoogleCloudDatalabelingV1beta1VideoEventAnnotation {
            /** Label of the event in this annotation. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** The time segment of the video to which the annotation applies. */
            timeSegment?: GoogleCloudDatalabelingV1beta1TimeSegment;
        }
        interface GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation {
            /** Label of the object tracked in this annotation. */
            annotationSpec?: GoogleCloudDatalabelingV1beta1AnnotationSpec;
            /** The list of frames where this object track appears. */
            objectTrackingFrames?: GoogleCloudDatalabelingV1beta1ObjectTrackingFrame[];
            /** The time segment of the video to which object tracking applies. */
            timeSegment?: GoogleCloudDatalabelingV1beta1TimeSegment;
        }
        interface GoogleCloudDatalabelingV1beta1VideoPayload {
            /** FPS of the video. */
            frameRate?: number;
            /** Video format. */
            mimeType?: string;
            /** Signed uri of the video file in the service bucket. */
            signedUri?: string;
            /** The list of video thumbnails. */
            videoThumbnails?: GoogleCloudDatalabelingV1beta1VideoThumbnail[];
            /** Video uri from the user bucket. */
            videoUri?: string;
        }
        interface GoogleCloudDatalabelingV1beta1VideoThumbnail {
            /** A byte string of the video frame. */
            thumbnail?: string;
            /** Time offset relative to the beginning of the video, corresponding to the video frame where the thumbnail has been extracted from. */
            timeOffset?: string;
        }
        interface GoogleCloudDatalabelingV1p1alpha1CreateInstructionMetadata {
            /** Timestamp when create instruction request was created. */
            createTime?: string;
            /** The name of the created Instruction. projects/{project_id}/instructions/{instruction_id} */
            instruction?: string;
            /** Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when export dataset request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be exported. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Ouptut only. The name of dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Number of examples exported successfully. */
            exportCount?: number;
            /** Output only. Statistic infos of labels in the exported dataset. */
            labelStats?: GoogleCloudDatalabelingV1p1alpha1LabelStats;
            /** Output only. output_config in the ExportData request. */
            outputConfig?: GoogleCloudDatalabelingV1p1alpha1OutputConfig;
            /** Output only. Total number of examples requested to export */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1p1alpha1GcsDestination {
            /** Required. The format of the gcs destination. Only "text/csv" and "application/json" are supported. */
            mimeType?: string;
            /** Required. The output uri of destination file. */
            outputUri?: string;
        }
        interface GoogleCloudDatalabelingV1p1alpha1GcsFolderDestination {
            /** Required. Cloud Storage directory to export data to. */
            outputFolderUri?: string;
        }
        interface GoogleCloudDatalabelingV1p1alpha1GenerateAnalysisReportOperationMetadata {
            /** Timestamp when generate report request was created. */
            createTime?: string;
            /** The name of the dataset for which the analysis report is generated. Format: "projects/*‍/datasets/*" */
            dataset?: string;
        }
        interface GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig {
            /** Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long. */
            annotatedDatasetDescription?: string;
            /** Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters . */
            annotatedDatasetDisplayName?: string;
            /**
             * Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types
             * in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/
             */
            contributorEmails?: string[];
            /** Required. Instruction resource name. */
            instruction?: string;
            /** Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\d_-]{0,128}`. */
            labelGroup?: string;
            /**
             * Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related.
             * For example, French text classification.
             */
            languageCode?: string;
            /** Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds. */
            questionDuration?: string;
            /**
             * Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image
             * related labeling, valid values are 1, 3, 5.
             */
            replicaCount?: number;
            /** Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1p1alpha1ImportDataOperationMetadata {
            /** Output only. Timestamp when import dataset request was created. */
            createTime?: string;
            /** Output only. The name of imported dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse {
            /** Ouptut only. The name of imported dataset. */
            dataset?: string;
            /** Output only. Number of examples imported successfully. */
            importCount?: number;
            /** Output only. Total number of examples requested to import */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when labeling request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be labeled. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Details of label image bounding box operation. */
            imageBoundingBoxDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata;
            /** Details of label image bounding poly operation. */
            imageBoundingPolyDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata;
            /** Details of label image classification operation. */
            imageClassificationDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata;
            /** Details of label image oriented bounding box operation. */
            imageOrientedBoundingBoxDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata;
            /** Details of label image polyline operation. */
            imagePolylineDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata;
            /** Details of label image segmentation operation. */
            imageSegmentationDetails?: GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
            /** Output only. Progress of label operation. Range: [0, 100]. */
            progressPercent?: number;
            /** Details of label text classification operation. */
            textClassificationDetails?: GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata;
            /** Details of label text entity extraction operation. */
            textEntityExtractionDetails?: GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata;
            /** Details of label video classification operation. */
            videoClassificationDetails?: GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata;
            /** Details of label video event operation. */
            videoEventDetails?: GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata;
            /** Details of label video object detection operation. */
            videoObjectDetectionDetails?: GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata;
            /** Details of label video object tracking operation. */
            videoObjectTrackingDetails?: GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelStats {
            /**
             * Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have
             * annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.
             */
            exampleCount?: { [P in string]: string };
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p1alpha1OutputConfig {
            /** Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation. */
            gcsDestination?: GoogleCloudDatalabelingV1p1alpha1GcsDestination;
            /** Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs. */
            gcsFolderDestination?: GoogleCloudDatalabelingV1p1alpha1GcsFolderDestination;
        }
        interface GoogleCloudDatalabelingV1p2alpha1CreateInstructionMetadata {
            /** Timestamp when create instruction request was created. */
            createTime?: string;
            /** The name of the created Instruction. projects/{project_id}/instructions/{instruction_id} */
            instruction?: string;
            /** Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p2alpha1ExportDataOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when export dataset request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be exported. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Ouptut only. The name of dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Number of examples exported successfully. */
            exportCount?: number;
            /** Output only. Statistic infos of labels in the exported dataset. */
            labelStats?: GoogleCloudDatalabelingV1p2alpha1LabelStats;
            /** Output only. output_config in the ExportData request. */
            outputConfig?: GoogleCloudDatalabelingV1p2alpha1OutputConfig;
            /** Output only. Total number of examples requested to export */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1p2alpha1GcsDestination {
            /** Required. The format of the gcs destination. Only "text/csv" and "application/json" are supported. */
            mimeType?: string;
            /** Required. The output uri of destination file. */
            outputUri?: string;
        }
        interface GoogleCloudDatalabelingV1p2alpha1GcsFolderDestination {
            /** Required. Cloud Storage directory to export data to. */
            outputFolderUri?: string;
        }
        interface GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig {
            /** Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long. */
            annotatedDatasetDescription?: string;
            /** Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters . */
            annotatedDatasetDisplayName?: string;
            /**
             * Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types
             * in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/
             */
            contributorEmails?: string[];
            /** Required. Instruction resource name. */
            instruction?: string;
            /** Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\d_-]{0,128}`. */
            labelGroup?: string;
            /**
             * Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related.
             * For example, French text classification.
             */
            languageCode?: string;
            /** Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds. */
            questionDuration?: string;
            /**
             * Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image
             * related labeling, valid values are 1, 3, 5.
             */
            replicaCount?: number;
            /** Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent. */
            userEmailAddress?: string;
        }
        interface GoogleCloudDatalabelingV1p2alpha1ImportDataOperationMetadata {
            /** Output only. Timestamp when import dataset request was created. */
            createTime?: string;
            /** Output only. The name of imported dataset. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDatalabelingV1p2alpha1ImportDataOperationResponse {
            /** Ouptut only. The name of imported dataset. */
            dataset?: string;
            /** Output only. Number of examples imported successfully. */
            importCount?: number;
            /** Output only. Total number of examples requested to import */
            totalCount?: number;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingBoxOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingPolyOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImageClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImageOrientedBoundingBoxOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImagePolylineOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelImageSegmentationOperationMetadata {
            /** Basic human annotation config. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelOperationMetadata {
            /** Output only. The name of annotated dataset in format "projects/*‍/datasets/*‍/annotatedDatasets/*". */
            annotatedDataset?: string;
            /** Output only. Timestamp when labeling request was created. */
            createTime?: string;
            /** Output only. The name of dataset to be labeled. "projects/*‍/datasets/*" */
            dataset?: string;
            /** Details of label image bounding box operation. */
            imageBoundingBoxDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingBoxOperationMetadata;
            /** Details of label image bounding poly operation. */
            imageBoundingPolyDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingPolyOperationMetadata;
            /** Details of label image classification operation. */
            imageClassificationDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImageClassificationOperationMetadata;
            /** Details of label image oriented bounding box operation. */
            imageOrientedBoundingBoxDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImageOrientedBoundingBoxOperationMetadata;
            /** Details of label image polyline operation. */
            imagePolylineDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImagePolylineOperationMetadata;
            /** Details of label image segmentation operation. */
            imageSegmentationDetails?: GoogleCloudDatalabelingV1p2alpha1LabelImageSegmentationOperationMetadata;
            /** Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details. */
            partialFailures?: GoogleRpcStatus[];
            /** Output only. Progress of label operation. Range: [0, 100]. */
            progressPercent?: number;
            /** Details of label text classification operation. */
            textClassificationDetails?: GoogleCloudDatalabelingV1p2alpha1LabelTextClassificationOperationMetadata;
            /** Details of label text entity extraction operation. */
            textEntityExtractionDetails?: GoogleCloudDatalabelingV1p2alpha1LabelTextEntityExtractionOperationMetadata;
            /** Details of label video classification operation. */
            videoClassificationDetails?: GoogleCloudDatalabelingV1p2alpha1LabelVideoClassificationOperationMetadata;
            /** Details of label video event operation. */
            videoEventDetails?: GoogleCloudDatalabelingV1p2alpha1LabelVideoEventOperationMetadata;
            /** Details of label video object detection operation. */
            videoObjectDetectionDetails?: GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectDetectionOperationMetadata;
            /** Details of label video object tracking operation. */
            videoObjectTrackingDetails?: GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectTrackingOperationMetadata;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelStats {
            /**
             * Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have
             * annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.
             */
            exampleCount?: { [P in string]: string };
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelTextClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelTextEntityExtractionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelVideoClassificationOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelVideoEventOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectDetectionOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectTrackingOperationMetadata {
            /** Basic human annotation config used in labeling request. */
            basicConfig?: GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig;
        }
        interface GoogleCloudDatalabelingV1p2alpha1OutputConfig {
            /** Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation. */
            gcsDestination?: GoogleCloudDatalabelingV1p2alpha1GcsDestination;
            /** Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs. */
            gcsFolderDestination?: GoogleCloudDatalabelingV1p2alpha1GcsFolderDestination;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface AnnotationSpecSetsResource {
            /** Creates an annotation spec set by providing a set of labels. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. AnnotationSpecSet resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest;
            }): Request<GoogleCloudDatalabelingV1beta1AnnotationSpecSet>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. AnnotationSpecSet resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest): Request<GoogleCloudDatalabelingV1beta1AnnotationSpecSet>;
            /** Deletes an annotation spec set by resource name. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. AnnotationSpec resource name, format: `projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an annotation spec set by resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. AnnotationSpecSet resource name, format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1AnnotationSpecSet>;
            /** Lists annotation spec sets for a project. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListAnnotationSpecSetsResponse.next_page_token of the previous
                 * [DataLabelingService.ListAnnotationSpecSets] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Parent of AnnotationSpecSet resource, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse>;
        }
        interface DataItemsResource {
            /** Gets a data item in a dataset by resource name. This API can be called after data are imported into dataset. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the data item to get, format: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1DataItem>;
            /** Lists data items in a dataset. This API can be called after data are imported into dataset. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListDataItemsResponse.next_page_token of the previous
                 * [DataLabelingService.ListDataItems] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Name of the dataset to list data items, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListDataItemsResponse>;
        }
        interface ExamplesResource {
            /** Gets an example by resource name, including both data and annotation. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. An expression for filtering Examples. Filter by annotation_spec.display_name is supported. Format "annotation_spec.display_name = {display_name}" */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of example, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1Example>;
            /** Lists examples in an annotated dataset. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. An expression for filtering Examples. For annotated datasets that have annotation spec set, filter by annotation_spec.display_name is supported. Format
                 * "annotation_spec.display_name = {display_name}"
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListExamplesResponse.next_page_token of the previous
                 * [DataLabelingService.ListExamples] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Example resource parent. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListExamplesResponse>;
        }
        interface FeedbackMessagesResource {
            /** Create a FeedbackMessage object. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. FeedbackMessage resource parent, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1FeedbackMessage;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. FeedbackMessage resource parent, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1FeedbackMessage): Request<GoogleLongrunningOperation>;
            /** Delete a FeedbackMessage. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Name of the FeedbackMessage that is going to be deleted. Format:
                 * 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Get a FeedbackMessage object. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Name of the feedback. Format:
                 * 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1FeedbackMessage>;
            /** List FeedbackMessages with pagination. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListFeedbackMessages.next_page_token of the previous
                 * [DataLabelingService.ListFeedbackMessages] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. FeedbackMessage resource parent. Format: "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse>;
        }
        interface FeedbackThreadsResource {
            /** Delete a FeedbackThread. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Name of the FeedbackThread that is going to be deleted. Format:
                 * 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Get a FeedbackThread object. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the feedback. Format: 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1FeedbackThread>;
            /** List FeedbackThreads with pagination. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListFeedbackThreads.next_page_token of the previous
                 * [DataLabelingService.ListFeedbackThreads] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. FeedbackThread resource parent. Format: "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse>;
            feedbackMessages: FeedbackMessagesResource;
        }
        interface AnnotatedDatasetsResource {
            /** Deletes an annotated dataset by resource name. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the annotated dataset to delete, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an annotated dataset by resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the annotated dataset to get, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1AnnotatedDataset>;
            /** Lists annotated datasets for a dataset. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListAnnotatedDatasetsResponse.next_page_token of the previous
                 * [DataLabelingService.ListAnnotatedDatasets] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Name of the dataset to list annotated datasets, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse>;
            dataItems: DataItemsResource;
            examples: ExamplesResource;
            feedbackThreads: FeedbackThreadsResource;
        }
        interface DataItemsResource {
            /** Gets a data item in a dataset by resource name. This API can be called after data are imported into dataset. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the data item to get, format: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1DataItem>;
            /** Lists data items in a dataset. This API can be called after data are imported into dataset. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListDataItemsResponse.next_page_token of the previous
                 * [DataLabelingService.ListDataItems] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Name of the dataset to list data items, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListDataItemsResponse>;
        }
        interface ExampleComparisonsResource {
            /**
             * Searches example comparisons from an evaluation. The return format is a list of example comparisons that show ground truth and prediction(s) for a single input. Search by providing
             * an evaluation ID.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the Evaluation resource to search for example comparisons from. Format: "projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest;
            }): Request<GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse>;
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the Evaluation resource to search for example comparisons from. Format: "projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest): Request<GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse>;
        }
        interface EvaluationsResource {
            /** Gets an evaluation by resource name (to search, use projects.evaluations.search). */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation. Format: "projects/{project_id}/datasets/ {dataset_id}/evaluations/{evaluation_id}' */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1Evaluation>;
            exampleComparisons: ExampleComparisonsResource;
        }
        interface ImageResource {
            /** Starts a labeling task for image. The type of image labeling task is configured by feature in the request. */
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1LabelImageRequest;
            }): Request<GoogleLongrunningOperation>;
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1LabelImageRequest): Request<GoogleLongrunningOperation>;
        }
        interface TextResource {
            /** Starts a labeling task for text. The type of text labeling task is configured by feature in the request. */
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the data set to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1LabelTextRequest;
            }): Request<GoogleLongrunningOperation>;
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the data set to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1LabelTextRequest): Request<GoogleLongrunningOperation>;
        }
        interface VideoResource {
            /** Starts a labeling task for video. The type of video labeling task is configured by feature in the request. */
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1LabelVideoRequest;
            }): Request<GoogleLongrunningOperation>;
            label(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1LabelVideoRequest): Request<GoogleLongrunningOperation>;
        }
        interface DatasetsResource {
            /** Creates dataset. If success return a Dataset resource. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Dataset resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1CreateDatasetRequest;
            }): Request<GoogleCloudDatalabelingV1beta1Dataset>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Dataset resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1CreateDatasetRequest): Request<GoogleCloudDatalabelingV1beta1Dataset>;
            /** Deletes a dataset by resource name. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Exports data and annotations from dataset. */
            exportData(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1ExportDataRequest;
            }): Request<GoogleLongrunningOperation>;
            exportData(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1ExportDataRequest): Request<GoogleLongrunningOperation>;
            /** Gets dataset by resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1Dataset>;
            /**
             * Imports data into dataset based on source locations defined in request. It can be called multiple times for the same dataset. Each dataset can only have one long running operation
             * running on it. For example, no labeling task (also long running operation) can be started while importing is still ongoing. Vice versa.
             */
            importData(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1ImportDataRequest;
            }): Request<GoogleLongrunningOperation>;
            importData(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1ImportDataRequest): Request<GoogleLongrunningOperation>;
            /** Lists datasets under a project. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter on dataset is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListDatasetsResponse.next_page_token of the previous
                 * [DataLabelingService.ListDatasets] call. Returns the first page if empty.
                 */
                pageToken?: string;
                /** Required. Dataset resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListDatasetsResponse>;
            annotatedDatasets: AnnotatedDatasetsResource;
            dataItems: DataItemsResource;
            evaluations: EvaluationsResource;
            image: ImageResource;
            text: TextResource;
            video: VideoResource;
        }
        interface EvaluationJobsResource {
            /** Creates an evaluation job. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Evaluation job resource parent. Format: "projects/{project_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest;
            }): Request<GoogleCloudDatalabelingV1beta1EvaluationJob>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Evaluation job resource parent. Format: "projects/{project_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest): Request<GoogleCloudDatalabelingV1beta1EvaluationJob>;
            /** Stops and deletes an evaluation job. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job that is going to be deleted. Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an evaluation job by resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job. Format: "projects/{project_id} /evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1EvaluationJob>;
            /** Lists all evaluation jobs within a project with possible filters. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. You can filter the jobs to list by model_id (also known as model_name, as described in EvaluationJob.modelVersion) or by evaluation job state (as described in
                 * EvaluationJob.state). To filter by both criteria, use the `AND` operator or the `OR` operator. For example, you can use the following string for your filter:
                 * "evaluation_job.model_id = {model_name} AND evaluation_job.state = {evaluation_job_state}"
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken in the response to the previous request. The request returns
                 * the first page if this is empty.
                 */
                pageToken?: string;
                /** Required. Evaluation job resource parent. Format: "projects/{project_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse>;
            /**
             * Updates an evaluation job. You can only update certain fields of the job's EvaluationJobConfig: `humanAnnotationConfig.instruction`, `exampleCount`, and `exampleSamplePercentage`.
             * If you want to change any other aspect of the evaluation job, you must delete the job and create a new one.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Optional. Mask for which fields to update. You can only provide the following fields: * `evaluationJobConfig.humanAnnotationConfig.instruction` *
                 * `evaluationJobConfig.exampleCount` * `evaluationJobConfig.exampleSamplePercentage` You can provide more than one of these fields by separating them with commas.
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1EvaluationJob;
            }): Request<GoogleCloudDatalabelingV1beta1EvaluationJob>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Optional. Mask for which fields to update. You can only provide the following fields: * `evaluationJobConfig.humanAnnotationConfig.instruction` *
                 * `evaluationJobConfig.exampleCount` * `evaluationJobConfig.exampleSamplePercentage` You can provide more than one of these fields by separating them with commas.
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1EvaluationJob): Request<GoogleCloudDatalabelingV1beta1EvaluationJob>;
            /** Pauses an evaluation job. Pausing an evaluation job that is already in a `PAUSED` state is a no-op. */
            pause(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job that is going to be paused. Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest;
            }): Request<{}>;
            pause(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job that is going to be paused. Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest): Request<{}>;
            /** Resumes a paused evaluation job. A deleted evaluation job can't be resumed. Resuming a running or scheduled evaluation job is a no-op. */
            resume(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job that is going to be resumed. Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest;
            }): Request<{}>;
            resume(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Name of the evaluation job that is going to be resumed. Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}" */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest): Request<{}>;
        }
        interface EvaluationsResource {
            /** Searches evaluations within a project. */
            search(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. To search evaluations, you can filter by the following: * evaluation_job.evaluation_job_id (the last part of EvaluationJob.name) * evaluation_job.model_id (the
                 * {model_name} portion of EvaluationJob.modelVersion) * evaluation_job.evaluation_job_run_time_start (Minimum threshold for the evaluationJobRunTime that created the evaluation) *
                 * evaluation_job.evaluation_job_run_time_end (Maximum threshold for the evaluationJobRunTime that created the evaluation) * evaluation_job.job_state (EvaluationJob.state) *
                 * annotation_spec.display_name (the Evaluation contains a metric for the annotation spec with this displayName) To filter by multiple critiera, use the `AND` operator or the `OR`
                 * operator. The following examples shows a string that filters by several critiera: "evaluation_job.evaluation_job_id = {evaluation_job_id} AND evaluation_job.model_id =
                 * {model_name} AND evaluation_job.evaluation_job_run_time_start = {timestamp_1} AND evaluation_job.evaluation_job_run_time_end = {timestamp_2} AND annotation_spec.display_name =
                 * {display_name}"
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken of the response to a previous search request. If you don't
                 * specify this field, the API call requests the first page of the search.
                 */
                pageToken?: string;
                /** Required. Evaluation search parent (project ID). Format: "projects/ {project_id}" */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse>;
        }
        interface InstructionsResource {
            /** Creates an instruction for how data should be labeled. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Instruction resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDatalabelingV1beta1CreateInstructionRequest;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Instruction resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDatalabelingV1beta1CreateInstructionRequest): Request<GoogleLongrunningOperation>;
            /** Deletes an instruction object by resource name. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an instruction by resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1Instruction>;
            /** Lists instructions for a project. Pagination is supported. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filter is not supported at this moment. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. Requested page size. Server may return fewer results than requested. Default value is 100. */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results for the server to return. Typically obtained by ListInstructionsResponse.next_page_token of the previous
                 * [DataLabelingService.ListInstructions] call. Return first page if empty.
                 */
                pageToken?: string;
                /** Required. Instruction resource parent, format: projects/{project_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDatalabelingV1beta1ListInstructionsResponse>;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ProjectsResource {
            annotationSpecSets: AnnotationSpecSetsResource;
            datasets: DatasetsResource;
            evaluationJobs: EvaluationJobsResource;
            evaluations: EvaluationsResource;
            instructions: InstructionsResource;
            operations: OperationsResource;
        }

        const projects: ProjectsResource;
    }
}
