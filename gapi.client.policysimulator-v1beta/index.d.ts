/* Type definitions for non-npm package Policy Simulator API v1beta 0.0 */
// Project: https://cloud.google.com/iam/docs/simulating-access
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://policysimulator.googleapis.com/$discovery/rest?version=v1beta
// Revision: 20230729

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Policy Simulator API v1beta */
    function load(urlOrObject: "https://policysimulator.googleapis.com/$discovery/rest?version=v1beta"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "policysimulator", version: "v1beta"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "policysimulator", version: "v1beta", callback: () => any): void;

    namespace policysimulator {
        interface GoogleCloudOrgpolicyV2AlternatePolicySpec {
            /** Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy. */
            launch?:
                string;
            /** Specify constraint for configurations of Google Cloud resources. */
            spec?:
                GoogleCloudOrgpolicyV2PolicySpec;
        }
        interface GoogleCloudOrgpolicyV2CustomConstraint {
            /** Allow or deny type. */
            actionType?:
                string;
            /**
             * Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true` The max length of the
             * condition is 1000 characters.
             */
            condition?:
                string;
            /** Detailed information about this custom policy constraint. The max length of the description is 2000 characters. */
            description?:
                string;
            /** One line display name for the UI. The max length of the display_name is 200 characters. */
            displayName?:
                string;
            /** All the operations being applied for this constraint. */
            methodTypes?:
                string[];
            /**
             * Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
             * Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix
             * `organizations/{organization_id}/customConstraints/` is not counted.
             */
            name?:
                string;
            /** Immutable. The resource instance type on which this policy applies. Format will be of the form : `/` Example: * `compute.googleapis.com/Instance`. */
            resourceTypes?:
                string[];
            /** Output only. The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called */
            updateTime?:
                string;
        }
        interface GoogleCloudOrgpolicyV2Policy {
            /** Deprecated. */
            alternate?:
                GoogleCloudOrgpolicyV2AlternatePolicySpec;
            /** Dry-run policy. Audit-only policy, can be used to monitor how the policy would have impacted the existing and future resources if it's enforced. */
            dryRunSpec?:
                GoogleCloudOrgpolicyV2PolicySpec;
            /**
             * Immutable. The resource name of the policy. Must be one of the following forms, where constraint_name is the name of the constraint which this policy configures: *
             * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example,
             * "projects/123/policies/compute.disableSerialPortAccess". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will
             * return the name using the equivalent project number.
             */
            name?:
                string;
            /** Basic information about the Organization Policy. */
            spec?:
                GoogleCloudOrgpolicyV2PolicySpec;
        }
        interface GoogleCloudOrgpolicyV2PolicySpec {
            /**
             * An opaque tag indicating the current version of the policy, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy` is returned
             * from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policy to use when executing a read-modify-write loop. When the policy is
             * returned from a `GetEffectivePolicy` request, the `etag` will be unset.
             */
            etag?:
                string;
            /**
             * Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present
             * in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure
             * list constraints.
             */
            inheritFromParent?:
                boolean;
            /**
             * Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies
             * for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
             */
            reset?:
                boolean;
            /**
             * In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions
             * must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take
             * precedence.
             */
            rules?:
                GoogleCloudOrgpolicyV2PolicySpecPolicyRule[];
            /** Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy. */
            updateTime?:
                string;
        }
        interface GoogleCloudOrgpolicyV2PolicySpecPolicyRule {
            /** Setting this to true means that all values are allowed. This field can be set only in policies for list constraints. */
            allowAll?:
                boolean;
            /**
             * A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions,
             * joined by the "||" or "&&" operators. Each subexpression must be of the form "resource.matchTag('/tag_key_short_name, 'tag_value_short_name')". or
             * "resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag
             * Manager Service. An example expression is: "resource.matchTag('123456789/environment, 'prod')". or "resource.matchTagId('tagKeys/123', 'tagValues/456')".
             */
            condition?:
                GoogleTypeExpr;
            /** Setting this to true means that all values are denied. This field can be set only in policies for list constraints. */
            denyAll?:
                boolean;
            /** If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints. */
            enforce?:
                boolean;
            /** List of values to be used for this policy rule. This field can be set only in policies for list constraints. */
            values?:
                GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues;
        }
        interface GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues {
            /** List of values allowed at this resource. */
            allowedValues?:
                string[];
            /** List of values denied at this resource. */
            deniedValues?:
                string[];
        }
        interface GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata {
            /** Time when the request was received. */
            requestTime?:
                string;
            /** Total number of resources that need scanning. Should equal resource_scanned + resources_pending */
            resourcesFound?:
                number;
            /** Number of resources still to scan. */
            resourcesPending?:
                number;
            /** Number of resources already scanned. */
            resourcesScanned?:
                number;
            /** Time when the request started processing, i.e. when the state was set to RUNNING. */
            startTime?:
                string;
            /** The current state of the operation. */
            state?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay {
            /**
             * The OrgPolicy CustomConstraint changes to preview violations for. Any existing CustomConstraints with the same name will be overridden in the simulation. That is, violations will be
             * determined as if all custom constraints in the overlay were instantiated.
             */
            customConstraints?:
                GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay[];
            /**
             * The OrgPolicy changes to preview violations for. Any existing OrgPolicies with the same name will be overridden in the simulation. That is, violations will be determined as if all
             * policies in the overlay were created or updated.
             */
            policies?:
                GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay[];
        }
        interface GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay {
            /** The new or updated custom constraint. */
            customConstraint?:
                GoogleCloudOrgpolicyV2CustomConstraint;
            /** Resource the constraint is attached to. Example: "organization/987654" */
            customConstraintParent?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay {
            /** The new or updated OrgPolicy. */
            policy?:
                GoogleCloudOrgpolicyV2Policy;
            /** The parent of the policy we are attaching to. Example: "projects/123456" */
            policyParent?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview {
            /**
             * Output only. The resource name of the `OrgPolicyViolationsPreview`. It has the following format:
             * `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example:
             * `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
             */
            name?:
                string;
            /** Required. The proposed changes we are previewing violations for. */
            overlay?:
                GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay;
            /** Output only. A summary of the state of all resources scanned for compliance with the changed OrgPolicy. */
            resourceCounts?:
                GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts;
            /** Output only. The state of the `OrgPolicyViolationsPreview`. */
            state?:
                string;
            /**
             * Output only. The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation
             * is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple
             * constraints.
             */
            violationsCount?:
                number;
        }
        interface GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts {
            /** Number of scanned resources with zero violations. */
            compliant?:
                number;
            /** Number of resources that returned an error when scanned. */
            errors?:
                number;
            /** Number of scanned resources with at least one violation. */
            noncompliant?:
                number;
            /** Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error */
            scanned?:
                number;
            /** Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource. */
            unenforced?:
                number;
        }
        interface GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata {
            /** Time when the request was received. */
            requestTime?:
                string;
            /** Total number of resources that need scanning. Should equal resource_scanned + resources_pending */
            resourcesFound?:
                number;
            /** Number of resources still to scan. */
            resourcesPending?:
                number;
            /** Number of resources already scanned. */
            resourcesScanned?:
                number;
            /** Time when the request started processing, i.e. when the state was set to RUNNING. */
            startTime?:
                string;
            /** The current state of the operation. */
            state?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1betaListOrgPolicyViolationsPreviewsResponse {
            /** A token that you can use to retrieve the next page of results. If this field is omitted, there are no subsequent pages. */
            nextPageToken?:
                string;
            /** The list of OrgPolicyViolationsPreview */
            orgPolicyViolationsPreviews?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview[];
        }
        interface GoogleCloudPolicysimulatorV1betaListOrgPolicyViolationsResponse {
            /** A token that you can use to retrieve the next page of results. If this field is omitted, there are no subsequent pages. */
            nextPageToken?:
                string;
            /** The list of OrgPolicyViolations */
            orgPolicyViolations?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyViolation[];
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay {
            /**
             * The OrgPolicy CustomConstraint changes to preview violations for. Any existing CustomConstraints with the same name will be overridden in the simulation. That is, violations will be
             * determined as if all custom constraints in the overlay were instantiated.
             */
            customConstraints?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay[];
            /**
             * The OrgPolicy changes to preview violations for. Any existing OrgPolicies with the same name will be overridden in the simulation. That is, violations will be determined as if all
             * policies in the overlay were created or updated.
             */
            policies?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay[];
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay {
            /** The new or updated custom constraint. */
            customConstraint?:
                GoogleCloudOrgpolicyV2CustomConstraint;
            /** Resource the constraint is attached to. Example: "organization/987654" */
            customConstraintParent?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay {
            /** The new or updated OrgPolicy. */
            policy?:
                GoogleCloudOrgpolicyV2Policy;
            /** The parent of the policy we are attaching to. Example: "projects/123456" */
            policyParent?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyViolation {
            /** The custom constraint being violated. */
            customConstraint?:
                GoogleCloudOrgpolicyV2CustomConstraint;
            /** Any error encountered during the evaluation. */
            error?:
                GoogleRpcStatus;
            /** The name of the `OrgPolicyViolation`. Example: organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f/orgPolicyViolations/38ce` */
            name?:
                string;
            /** The resource violating the constraint. */
            resource?:
                GoogleCloudPolicysimulatorV1betaResourceContext;
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview {
            /**
             * Output only. The resource name of the `OrgPolicyViolationsPreview`. It has the following format:
             * `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example:
             * `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
             */
            name?:
                string;
            /** Required. The proposed changes we are previewing violations for. */
            overlay?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay;
            /** Output only. A summary of the state of all resources scanned for compliance with the changed OrgPolicy. */
            resourceCounts?:
                GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts;
            /** Output only. The state of the `OrgPolicyViolationsPreview`. */
            state?:
                string;
            /**
             * Output only. The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation
             * is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple
             * constraints.
             */
            violationsCount?:
                number;
        }
        interface GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts {
            /** Number of scanned resources with zero violations. */
            compliant?:
                number;
            /** Number of resources that returned an error when scanned. */
            errors?:
                number;
            /** Number of scanned resources with at least one violation. */
            noncompliant?:
                number;
            /** Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error */
            scanned?:
                number;
            /** Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource. */
            unenforced?:
                number;
        }
        interface GoogleCloudPolicysimulatorV1betaResourceContext {
            /**
             * The ancestry path of the resource in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of
             * relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the resource is a project, folder, or organization, the ancestry
             * path starts from the resource itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
             */
            ancestors?:
                string[];
            /**
             * The asset type of the resource as defined by CAIS. Example: `compute.googleapis.com/Firewall` See [Supported asset
             * types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.
             */
            assetType?:
                string;
            /**
             * The full name of the resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource
             * names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
             */
            resource?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1Replay {
            /** Required. The configuration used for the `Replay`. */
            config?:
                GoogleCloudPolicysimulatorV1ReplayConfig;
            /**
             * Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
             * `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example:
             * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
             */
            name?:
                string;
            /** Output only. Summary statistics about the replayed log entries. */
            resultsSummary?:
                GoogleCloudPolicysimulatorV1ReplayResultsSummary;
            /** Output only. The current state of the `Replay`. */
            state?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1ReplayConfig {
            /** The logs to use as input for the Replay. */
            logSource?:
                string;
            /**
             * A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example,
             * `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see
             * https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into
             * account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
             */
            policyOverlay?:
                { [P in string]: GoogleIamV1Policy };
        }
        interface GoogleCloudPolicysimulatorV1ReplayOperationMetadata {
            /** Time when the request was received. */
            startTime?:
                string;
        }
        interface GoogleCloudPolicysimulatorV1ReplayResultsSummary {
            /** The number of replayed log entries with a difference between baseline and simulated policies. */
            differenceCount?:
                number;
            /** The number of log entries that could not be replayed. */
            errorCount?:
                number;
            /** The total number of log entries replayed. */
            logCount?:
                number;
            /** The date of the newest log entry replayed. */
            newestDate?:
                GoogleTypeDate;
            /** The date of the oldest log entry replayed. */
            oldestDate?:
                GoogleTypeDate;
            /** The number of replayed log entries with no difference between baseline and simulated policies. */
            unchangedCount?:
                number;
        }
        interface GoogleIamV1AuditConfig {
            /** The configuration for logging of each type of permission. */
            auditLogConfigs?:
                GoogleIamV1AuditLogConfig[];
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all
             * services.
             */
            service?:
                string;
        }
        interface GoogleIamV1AuditLogConfig {
            /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
            exemptedMembers?:
                string[];
            /** The log type that this config enables. */
            logType?:
                string;
        }
        interface GoogleIamV1Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`,
             * then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which
             * resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?:
                GoogleTypeExpr;
            /**
             * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on
             * the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service
             * account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific
             * Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example,
             * `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service
             * account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
             * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the
             * users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has
             * been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains
             * the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently
             * deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and
             * the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that
             * has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group
             * retains the role in the binding.
             */
            members?:
                string[];
            /** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
            role?:
                string;
        }
        interface GoogleIamV1Policy {
            /** Specifies cloud audit logging configuration for this policy. */
            auditConfigs?:
                GoogleIamV1AuditConfig[];
            /**
             * Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings`
             * must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a
             * principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another
             * 1,450 principals to the `bindings` in the `Policy`.
             */
            bindings?:
                GoogleIamV1Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make
             * use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems
             * are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM
             * Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?:
                string;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings
             * must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a
             * policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use
             * IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave
             * the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?:
                number;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?:
                string;
            /** A list of operations that matches the specified filter in the request. */
            operations?:
                GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?:
                boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?:
                GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?:
                { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?:
                string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?:
                { [P in string]: any };
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?:
                number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?:
                Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?:
                string;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?:
                number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?:
                number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?:
                number;
        }
        interface GoogleTypeExpr {
            /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
            description?:
                string;
            /** Textual representation of an expression in Common Expression Language syntax. */
            expression?:
                string;
            /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
            location?:
                string;
            /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
            title?:
                string;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
        }
        interface OrgPolicyViolationsPreviewsResource {
            operations:
                OperationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ReplaysResource {
            operations:
                OperationsResource;
        }
        interface LocationsResource {
            orgPolicyViolationsPreviews:
                OrgPolicyViolationsPreviewsResource;
            replays:
                ReplaysResource;
        }
        interface FoldersResource {
            locations:
                LocationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
        }
        interface OrgPolicyViolationsResource {
            /** ListOrgPolicyViolations lists the OrgPolicyViolations that are present in an OrgPolicyViolationsPreview. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /**
                 * The maximum number of items to return. The service may return fewer than this value. If unspecified, at most 50 items will be returned. The maximum value is 1000; values above
                 * 1000 will be coerced to 1000.
                 */
                pageSize?:
                    number;
                /**
                 * A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters must match the call that provided the page
                 * token.
                 */
                pageToken?:
                    string;
                /**
                 * Required. The OrgPolicyViolationsPreview to get OrgPolicyViolations from. Format:
                 * organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}
                 */
                parent:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleCloudPolicysimulatorV1betaListOrgPolicyViolationsResponse>;
        }
        interface OrgPolicyViolationsPreviewsResource {
            /** GetOrgPolicyViolationsPreview gets the specified OrgPolicyViolationsPreview. Each OrgPolicyViolationsPreview is available for at least 7 days. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The name of the OrgPolicyViolationsPreview to get. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview>;
            /** ListOrgPolicyViolationsPreviews lists each OrgPolicyViolationsPreview in an organization. Each OrgPolicyViolationsPreview is available for at least 7 days. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /**
                 * The maximum number of items to return. The service may return fewer than this value. If unspecified, at most 5 items will be returned. The maximum value is 10; values above 10
                 * will be coerced to 10.
                 */
                pageSize?:
                    number;
                /**
                 * A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters must match the call that provided the page
                 * token.
                 */
                pageToken?:
                    string;
                /** Required. The parent the violations are scoped to. Format: organizations/{organization} */
                parent:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleCloudPolicysimulatorV1betaListOrgPolicyViolationsPreviewsResponse>;
            operations:
                OperationsResource;
            orgPolicyViolations:
                OrgPolicyViolationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ReplaysResource {
            operations:
                OperationsResource;
        }
        interface LocationsResource {
            orgPolicyViolationsPreviews:
                OrgPolicyViolationsPreviewsResource;
            replays:
                ReplaysResource;
        }
        interface OrganizationsResource {
            locations:
                LocationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
        }
        interface OrgPolicyViolationsPreviewsResource {
            operations:
                OperationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ReplaysResource {
            operations:
                OperationsResource;
        }
        interface LocationsResource {
            orgPolicyViolationsPreviews:
                OrgPolicyViolationsPreviewsResource;
            replays:
                ReplaysResource;
        }
        interface ProjectsResource {
            locations:
                LocationsResource;
        }

        const folders: FoldersResource;

        const operations: OperationsResource;

        const organizations: OrganizationsResource;

        const projects: ProjectsResource;
    }
}
