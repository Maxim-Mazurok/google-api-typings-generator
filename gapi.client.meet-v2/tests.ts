/* This is stub file for gapi.client.meet-v2 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250615

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://meet.googleapis.com/$discovery/rest?version=v2',
  );
  /** now we can use gapi.client.meet */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Create, edit, and see information about your Google Meet conferences created by the app. */
    'https://www.googleapis.com/auth/meetings.space.created',
    /** Read information about any of your Google Meet conferences */
    'https://www.googleapis.com/auth/meetings.space.readonly',
    /** Edit, and see settings for all of your Google Meet calls. */
    'https://www.googleapis.com/auth/meetings.space.settings',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Gets a conference record by conference ID. */
    await gapi.client.meet.conferenceRecords.get({
      name: 'Test string',
    });
    /** Lists the conference records. By default, ordered by start time and in descending order. */
    await gapi.client.meet.conferenceRecords.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** Gets a participant by participant ID. */
    await gapi.client.meet.conferenceRecords.participants.get({
      name: 'Test string',
    });
    /** Lists the participants in a conference record. By default, ordered by join time and in descending order. This API supports `fields` as standard parameters like every other API. However, when the `fields` request parameter is omitted, this API defaults to `'participants/*, next_page_token'`. */
    await gapi.client.meet.conferenceRecords.participants.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Gets a participant session by participant session ID. */
    await gapi.client.meet.conferenceRecords.participants.participantSessions.get(
      {
        name: 'Test string',
      },
    );
    /** Lists the participant sessions of a participant in a conference record. By default, ordered by join time and in descending order. This API supports `fields` as standard parameters like every other API. However, when the `fields` request parameter is omitted this API defaults to `'participantsessions/*, next_page_token'`. */
    await gapi.client.meet.conferenceRecords.participants.participantSessions.list(
      {
        filter: 'Test string',
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      },
    );
    /** Gets a recording by recording ID. */
    await gapi.client.meet.conferenceRecords.recordings.get({
      name: 'Test string',
    });
    /** Lists the recording resources from the conference record. By default, ordered by start time and in ascending order. */
    await gapi.client.meet.conferenceRecords.recordings.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Gets a transcript by transcript ID. */
    await gapi.client.meet.conferenceRecords.transcripts.get({
      name: 'Test string',
    });
    /** Lists the set of transcripts from the conference record. By default, ordered by start time and in ascending order. */
    await gapi.client.meet.conferenceRecords.transcripts.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries returned by the Google Meet API might not match the transcription found in the Google Docs transcript file. This can occur when 1) we have interleaved speakers within milliseconds, or 2) the Google Docs transcript file is modified after generation. */
    await gapi.client.meet.conferenceRecords.transcripts.entries.get({
      name: 'Test string',
    });
    /** Lists the structured transcript entries per transcript. By default, ordered by start time and in ascending order. Note: The transcript entries returned by the Google Meet API might not match the transcription found in the Google Docs transcript file. This can occur when 1) we have interleaved speakers within milliseconds, or 2) the Google Docs transcript file is modified after generation. */
    await gapi.client.meet.conferenceRecords.transcripts.entries.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Creates a space. */
    await gapi.client.meet.spaces.create(
      {},
      {
        activeConference: {
          conferenceRecord: 'Test string',
        },
        config: {
          accessType: 'Test string',
          artifactConfig: {
            recordingConfig: {
              autoRecordingGeneration: 'Test string',
            },
            smartNotesConfig: {
              autoSmartNotesGeneration: 'Test string',
            },
            transcriptionConfig: {
              autoTranscriptionGeneration: 'Test string',
            },
          },
          attendanceReportGenerationType: 'Test string',
          entryPointAccess: 'Test string',
          moderation: 'Test string',
          moderationRestrictions: {
            chatRestriction: 'Test string',
            defaultJoinAsViewerType: 'Test string',
            presentRestriction: 'Test string',
            reactionRestriction: 'Test string',
          },
        },
        meetingCode: 'Test string',
        meetingUri: 'Test string',
        name: 'Test string',
      },
    );
    /** Ends an active conference (if there's one). For an example, see [End active conference](https://developers.google.com/workspace/meet/api/guides/meeting-spaces#end-active-conference). */
    await gapi.client.meet.spaces.endActiveConference(
      {
        name: 'Test string',
      },
      {},
    );
    /** Gets details about a meeting space. For an example, see [Get a meeting space](https://developers.google.com/workspace/meet/api/guides/meeting-spaces#get-meeting-space). */
    await gapi.client.meet.spaces.get({
      name: 'Test string',
    });
    /** Updates details about a meeting space. For an example, see [Update a meeting space](https://developers.google.com/workspace/meet/api/guides/meeting-spaces#update-meeting-space). */
    await gapi.client.meet.spaces.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        activeConference: {
          conferenceRecord: 'Test string',
        },
        config: {
          accessType: 'Test string',
          artifactConfig: {
            recordingConfig: {
              autoRecordingGeneration: 'Test string',
            },
            smartNotesConfig: {
              autoSmartNotesGeneration: 'Test string',
            },
            transcriptionConfig: {
              autoTranscriptionGeneration: 'Test string',
            },
          },
          attendanceReportGenerationType: 'Test string',
          entryPointAccess: 'Test string',
          moderation: 'Test string',
          moderationRestrictions: {
            chatRestriction: 'Test string',
            defaultJoinAsViewerType: 'Test string',
            presentRestriction: 'Test string',
            reactionRestriction: 'Test string',
          },
        },
        meetingCode: 'Test string',
        meetingUri: 'Test string',
        name: 'Test string',
      },
    );
  }
});
