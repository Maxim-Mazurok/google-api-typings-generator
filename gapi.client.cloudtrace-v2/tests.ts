/* This is stub file for gapi.client.cloudtrace-v2 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250221

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://cloudtrace.googleapis.com/$discovery/rest?version=v2',
  );
  /** now we can use gapi.client.cloudtrace */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
    /** Write Trace data for a project or application */
    'https://www.googleapis.com/auth/trace.append',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Batch writes new spans to new or existing traces. You cannot update existing spans. */
    await gapi.client.cloudtrace.projects.traces.batchWrite(
      {
        name: 'Test string',
      },
      {
        spans: [
          {
            attributes: {
              attributeMap: {
                A: {
                  boolValue: true,
                  intValue: 'Test string',
                  stringValue: {
                    truncatedByteCount: 42,
                    value: 'Test string',
                  },
                },
              },
              droppedAttributesCount: 42,
            },
            childSpanCount: 42,
            displayName: {
              truncatedByteCount: 42,
              value: 'Test string',
            },
            endTime: 'Test string',
            links: {
              droppedLinksCount: 42,
              link: [
                {
                  attributes: {
                    attributeMap: {
                      A: {
                        boolValue: true,
                        intValue: 'Test string',
                        stringValue: {
                          truncatedByteCount: 42,
                          value: 'Test string',
                        },
                      },
                    },
                    droppedAttributesCount: 42,
                  },
                  spanId: 'Test string',
                  traceId: 'Test string',
                  type: 'Test string',
                },
              ],
            },
            name: 'Test string',
            parentSpanId: 'Test string',
            sameProcessAsParentSpan: true,
            spanId: 'Test string',
            spanKind: 'Test string',
            stackTrace: {
              stackFrames: {
                droppedFramesCount: 42,
                frame: [
                  {
                    columnNumber: 'Test string',
                    fileName: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                    functionName: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                    lineNumber: 'Test string',
                    loadModule: {
                      buildId: {
                        truncatedByteCount: 42,
                        value: 'Test string',
                      },
                      module: {
                        truncatedByteCount: 42,
                        value: 'Test string',
                      },
                    },
                    originalFunctionName: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                    sourceVersion: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                  },
                ],
              },
              stackTraceHashId: 'Test string',
            },
            startTime: 'Test string',
            status: {
              code: 42,
              details: [
                {
                  A: 42,
                },
              ],
              message: 'Test string',
            },
            timeEvents: {
              droppedAnnotationsCount: 42,
              droppedMessageEventsCount: 42,
              timeEvent: [
                {
                  annotation: {
                    attributes: {
                      attributeMap: {
                        A: {
                          boolValue: true,
                          intValue: 'Test string',
                          stringValue: {
                            truncatedByteCount: 42,
                            value: 'Test string',
                          },
                        },
                      },
                      droppedAttributesCount: 42,
                    },
                    description: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                  },
                  messageEvent: {
                    compressedSizeBytes: 'Test string',
                    id: 'Test string',
                    type: 'Test string',
                    uncompressedSizeBytes: 'Test string',
                  },
                  time: 'Test string',
                },
              ],
            },
          },
        ],
      },
    );
    /** Creates a new span. */
    await gapi.client.cloudtrace.projects.traces.spans.createSpan(
      {
        name: 'Test string',
      },
      {
        attributes: {
          attributeMap: {
            A: {
              boolValue: true,
              intValue: 'Test string',
              stringValue: {
                truncatedByteCount: 42,
                value: 'Test string',
              },
            },
          },
          droppedAttributesCount: 42,
        },
        childSpanCount: 42,
        displayName: {
          truncatedByteCount: 42,
          value: 'Test string',
        },
        endTime: 'Test string',
        links: {
          droppedLinksCount: 42,
          link: [
            {
              attributes: {
                attributeMap: {
                  A: {
                    boolValue: true,
                    intValue: 'Test string',
                    stringValue: {
                      truncatedByteCount: 42,
                      value: 'Test string',
                    },
                  },
                },
                droppedAttributesCount: 42,
              },
              spanId: 'Test string',
              traceId: 'Test string',
              type: 'Test string',
            },
          ],
        },
        name: 'Test string',
        parentSpanId: 'Test string',
        sameProcessAsParentSpan: true,
        spanId: 'Test string',
        spanKind: 'Test string',
        stackTrace: {
          stackFrames: {
            droppedFramesCount: 42,
            frame: [
              {
                columnNumber: 'Test string',
                fileName: {
                  truncatedByteCount: 42,
                  value: 'Test string',
                },
                functionName: {
                  truncatedByteCount: 42,
                  value: 'Test string',
                },
                lineNumber: 'Test string',
                loadModule: {
                  buildId: {
                    truncatedByteCount: 42,
                    value: 'Test string',
                  },
                  module: {
                    truncatedByteCount: 42,
                    value: 'Test string',
                  },
                },
                originalFunctionName: {
                  truncatedByteCount: 42,
                  value: 'Test string',
                },
                sourceVersion: {
                  truncatedByteCount: 42,
                  value: 'Test string',
                },
              },
            ],
          },
          stackTraceHashId: 'Test string',
        },
        startTime: 'Test string',
        status: {
          code: 42,
          details: [
            {
              A: 42,
            },
          ],
          message: 'Test string',
        },
        timeEvents: {
          droppedAnnotationsCount: 42,
          droppedMessageEventsCount: 42,
          timeEvent: [
            {
              annotation: {
                attributes: {
                  attributeMap: {
                    A: {
                      boolValue: true,
                      intValue: 'Test string',
                      stringValue: {
                        truncatedByteCount: 42,
                        value: 'Test string',
                      },
                    },
                  },
                  droppedAttributesCount: 42,
                },
                description: {
                  truncatedByteCount: 42,
                  value: 'Test string',
                },
              },
              messageEvent: {
                compressedSizeBytes: 'Test string',
                id: 'Test string',
                type: 'Test string',
                uncompressedSizeBytes: 'Test string',
              },
              time: 'Test string',
            },
          ],
        },
      },
    );
  }
});
