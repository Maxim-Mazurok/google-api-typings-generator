/* Type definitions for non-npm package Merchant API quota_v1 0.0 */
// Project: https://developers.google.com/merchant/api
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://merchantapi.googleapis.com/$discovery/rest?version=quota_v1
// Revision: 20250917

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Merchant API quota_v1 */
  function load(
    urlOrObject: 'https://merchantapi.googleapis.com/$discovery/rest?version=quota_v1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'merchantapi', version: 'quota_v1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'merchantapi',
    version: 'quota_v1',
    callback: () => any,
  ): void;

  namespace merchantapi {
    interface ListQuotaGroupsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The methods, current quota usage and limits per each group. The quota is shared between all methods in the group. The groups are sorted in descending order based on quota_usage. */
      quotaGroups?: QuotaGroup[];
    }
    interface MethodDetails {
      /** Output only. The name of the method for example `products.list`. */
      method?: string;
      /** Output only. The path for the method such as `products/v1/productInputs.insert` */
      path?: string;
      /** Output only. The sub-API that the method belongs to. */
      subapi?: string;
      /** Output only. The API version that the method belongs to. */
      version?: string;
    }
    interface ProductChange {
      /** The new value of the changed resource or attribute. If empty, it means that the product was deleted. Will have one of these values : (`approved`, `pending`, `disapproved`, ``) */
      newValue?: string;
      /** The old value of the changed resource or attribute. If empty, it means that the product was created. Will have one of these values : (`approved`, `pending`, `disapproved`, ``) */
      oldValue?: string;
      /** Countries that have the change (if applicable). Represented in the ISO 3166 format. */
      regionCode?: string;
      /** Reporting contexts that have the change (if applicable). Currently this field supports only (`SHOPPING_ADS`, `LOCAL_INVENTORY_ADS`, `YOUTUBE_SHOPPING`, `YOUTUBE_CHECKOUT`, `YOUTUBE_AFFILIATE`) from the enum value [ReportingContextEnum](/merchant/api/reference/rest/Shared.Types/ReportingContextEnum) */
      reportingContext?: string;
    }
    interface ProductStatusChangeMessage {
      /** The target account that owns the entity that changed. Format : `accounts/{merchant_id}` */
      account?: string;
      /** The attribute in the resource that changed, in this case it will be always `Status`. */
      attribute?: string;
      /** A message to describe the change that happened to the product */
      changes?: ProductChange[];
      /** The time at which the event was generated. If you want to order the notification messages you receive you should rely on this field not on the order of receiving the notifications. */
      eventTime?: string;
      /** Optional. The product expiration time. This field will not be set if the notification is sent for a product deletion event. */
      expirationTime?: string;
      /** The account that manages the merchant's account. can be the same as merchant id if it is standalone account. Format : `accounts/{service_provider_id}` */
      managingAccount?: string;
      /** The product name. Format: `accounts/{account}/products/{product}` */
      resource?: string;
      /** The product id. */
      resourceId?: string;
      /** The resource that changed, in this case it will always be `Product`. */
      resourceType?: string;
    }
    interface QuotaGroup {
      /** Output only. List of all methods group quota applies to. */
      methodDetails?: MethodDetails[];
      /** Identifier. The resource name of the quota group. Format: accounts/{account}/quotas/{group} Note: There is no guarantee on the format of {group} */
      name?: string;
      /** Output only. The maximum number of calls allowed per day for the group. */
      quotaLimit?: string;
      /** Output only. The maximum number of calls allowed per minute for the group. */
      quotaMinuteLimit?: string;
      /** Output only. The current quota usage, meaning the number of calls already made on a given day to the methods in the group. The daily quota limits reset at at 12:00 PM midday UTC. */
      quotaUsage?: string;
    }
    interface QuotasResource {
      /** Lists the daily call quota and usage per group for your Merchant Center account. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of quotas to return in the response, used for paging. Defaults to 500; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token. */
        pageToken?: string;
        /** Required. The merchant account who owns the collection of method quotas Format: accounts/{account} */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListQuotaGroupsResponse>;
    }
    interface AccountsResource {
      quotas: QuotasResource;
    }

    const accounts: AccountsResource;
  }
}
