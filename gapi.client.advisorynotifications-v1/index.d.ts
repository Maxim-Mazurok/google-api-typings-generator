/* Type definitions for non-npm package Advisory Notifications API v1 0.0 */
// Project: https://cloud.google.com/advisory-notifications
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://advisorynotifications.googleapis.com/$discovery/rest?version=v1
// Revision: 20251026

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Advisory Notifications API v1 */
  function load(
    urlOrObject: 'https://advisorynotifications.googleapis.com/$discovery/rest?version=v1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'advisorynotifications', version: 'v1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'advisorynotifications',
    version: 'v1',
    callback: () => any,
  ): void;

  namespace advisorynotifications {
    interface GoogleCloudAdvisorynotificationsV1Attachment {
      /** A CSV file attachment. Max size is 10 MB. */
      csv?: GoogleCloudAdvisorynotificationsV1Csv;
      /** The title of the attachment. */
      displayName?: string;
    }
    interface GoogleCloudAdvisorynotificationsV1Csv {
      /** The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string. */
      dataRows?: GoogleCloudAdvisorynotificationsV1CsvCsvRow[];
      /** The list of headers for data columns in a CSV file. */
      headers?: string[];
    }
    interface GoogleCloudAdvisorynotificationsV1CsvCsvRow {
      /** The data entries in a CSV file row, as a string array rather than a single comma-separated string. */
      entries?: string[];
    }
    interface GoogleCloudAdvisorynotificationsV1ListNotificationsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** List of notifications under a given parent. */
      notifications?: GoogleCloudAdvisorynotificationsV1Notification[];
      /** Estimation of a total number of notifications. */
      totalSize?: number;
    }
    interface GoogleCloudAdvisorynotificationsV1Message {
      /** The attachments to download. */
      attachments?: GoogleCloudAdvisorynotificationsV1Attachment[];
      /** The message content. */
      body?: GoogleCloudAdvisorynotificationsV1MessageBody;
      /** The Message creation timestamp. */
      createTime?: string;
      /** Time when Message was localized */
      localizationTime?: string;
    }
    interface GoogleCloudAdvisorynotificationsV1MessageBody {
      /** The text content of the message body. */
      text?: GoogleCloudAdvisorynotificationsV1Text;
    }
    interface GoogleCloudAdvisorynotificationsV1Notification {
      /** Output only. Time the notification was created. */
      createTime?: string;
      /** A list of messages in the notification. */
      messages?: GoogleCloudAdvisorynotificationsV1Message[];
      /** The resource name of the notification. Format: organizations/{organization}/locations/{location}/notifications/{notification} or projects/{project}/locations/{location}/notifications/{notification}. */
      name?: string;
      /** Type of notification */
      notificationType?: string;
      /** The subject line of the notification. */
      subject?: GoogleCloudAdvisorynotificationsV1Subject;
    }
    interface GoogleCloudAdvisorynotificationsV1NotificationSettings {
      /** Whether the associated NotificationType is enabled. */
      enabled?: boolean;
    }
    interface GoogleCloudAdvisorynotificationsV1Settings {
      /** Required. Fingerprint for optimistic concurrency returned in Get requests. Must be provided for Update requests. If the value provided does not match the value known to the server, ABORTED will be thrown, and the client should retry the read-modify-write cycle. */
      etag?: string;
      /** Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
      name?: string;
      /** Required. Map of each notification type and its settings to get/set all settings at once. The server will validate the value for each notification type. */
      notificationSettings?: {
        [P in string]: GoogleCloudAdvisorynotificationsV1NotificationSettings;
      };
    }
    interface GoogleCloudAdvisorynotificationsV1Subject {
      /** The text content. */
      text?: GoogleCloudAdvisorynotificationsV1Text;
    }
    interface GoogleCloudAdvisorynotificationsV1Text {
      /** The English copy. */
      enText?: string;
      /** Status of the localization. */
      localizationState?: string;
      /** The requested localized copy (if applicable). */
      localizedText?: string;
    }
    interface NotificationsResource {
      /** Gets a notification. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** ISO code for requested localization language. If unset, will be interpereted as "en". If the requested language is valid, but not supported for this notification, English will be returned with an "Not applicable" LocalizationState. If the ISO code is invalid (i.e. not a real language), this RPC will throw an error. */
        languageCode?: string;
        /** Required. A name of the notification to retrieve. Format: organizations/{organization}/locations/{location}/notifications/{notification} or projects/{projects}/locations/{location}/notifications/{notification}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1Notification>;
      /** Lists notifications under a given parent. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** ISO code for requested localization language. If unset, will be interpereted as "en". If the requested language is valid, but not supported for this notification, English will be returned with an "Not applicable" LocalizationState. If the ISO code is invalid (i.e. not a real language), this RPC will throw an error. */
        languageCode?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of notifications to return. The service may return fewer than this value. If unspecified or equal to 0, at most 50 notifications will be returned. The maximum value is 50; values above 50 will be coerced to 50. */
        pageSize?: number;
        /** A page token returned from a previous request. When paginating, all other parameters provided in the request must match the call that returned the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of notifications. Must be of the form "organizations/{organization}/locations/{location}" or "projects/{project}/locations/{location}". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Specifies which parts of the notification resource should be returned in the response. */
        view?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1ListNotificationsResponse>;
    }
    interface LocationsResource {
      /** Get notification settings. */
      getSettings(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      /** Update notification settings. */
      updateSettings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudAdvisorynotificationsV1Settings;
      }): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      updateSettings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudAdvisorynotificationsV1Settings,
      ): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      notifications: NotificationsResource;
    }
    interface OrganizationsResource {
      locations: LocationsResource;
    }
    interface NotificationsResource {
      /** Gets a notification. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** ISO code for requested localization language. If unset, will be interpereted as "en". If the requested language is valid, but not supported for this notification, English will be returned with an "Not applicable" LocalizationState. If the ISO code is invalid (i.e. not a real language), this RPC will throw an error. */
        languageCode?: string;
        /** Required. A name of the notification to retrieve. Format: organizations/{organization}/locations/{location}/notifications/{notification} or projects/{projects}/locations/{location}/notifications/{notification}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1Notification>;
      /** Lists notifications under a given parent. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** ISO code for requested localization language. If unset, will be interpereted as "en". If the requested language is valid, but not supported for this notification, English will be returned with an "Not applicable" LocalizationState. If the ISO code is invalid (i.e. not a real language), this RPC will throw an error. */
        languageCode?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of notifications to return. The service may return fewer than this value. If unspecified or equal to 0, at most 50 notifications will be returned. The maximum value is 50; values above 50 will be coerced to 50. */
        pageSize?: number;
        /** A page token returned from a previous request. When paginating, all other parameters provided in the request must match the call that returned the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of notifications. Must be of the form "organizations/{organization}/locations/{location}" or "projects/{project}/locations/{location}". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Specifies which parts of the notification resource should be returned in the response. */
        view?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1ListNotificationsResponse>;
    }
    interface LocationsResource {
      /** Get notification settings. */
      getSettings(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      /** Update notification settings. */
      updateSettings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudAdvisorynotificationsV1Settings;
      }): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      updateSettings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings or projects/{projects}/locations/{location}/settings. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudAdvisorynotificationsV1Settings,
      ): Request<GoogleCloudAdvisorynotificationsV1Settings>;
      notifications: NotificationsResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const organizations: OrganizationsResource;

    const projects: ProjectsResource;
  }
}
