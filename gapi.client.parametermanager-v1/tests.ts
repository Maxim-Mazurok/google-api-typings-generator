/* This is stub file for gapi.client.parametermanager-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250723

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://parametermanager.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.parametermanager */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Gets information about a location. */
    await gapi.client.parametermanager.projects.locations.get({
      name: 'Test string',
    });
    /** Lists information about the supported locations for this service. */
    await gapi.client.parametermanager.projects.locations.list({
      extraLocationTypes: 'Test string',
      filter: 'Test string',
      name: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** Creates a new Parameter in a given project and location. */
    await gapi.client.parametermanager.projects.locations.parameters.create(
      {
        parameterId: 'Test string',
        parent: 'Test string',
        requestId: 'Test string',
      },
      {
        createTime: 'Test string',
        format: 'Test string',
        kmsKey: 'Test string',
        labels: {
          A: 'Test string',
        },
        name: 'Test string',
        policyMember: {
          iamPolicyNamePrincipal: 'Test string',
          iamPolicyUidPrincipal: 'Test string',
        },
        updateTime: 'Test string',
      },
    );
    /** Deletes a single Parameter. */
    await gapi.client.parametermanager.projects.locations.parameters.delete({
      name: 'Test string',
      requestId: 'Test string',
    });
    /** Gets details of a single Parameter. */
    await gapi.client.parametermanager.projects.locations.parameters.get({
      name: 'Test string',
    });
    /** Lists Parameters in a given project and location. */
    await gapi.client.parametermanager.projects.locations.parameters.list({
      filter: 'Test string',
      orderBy: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Updates a single Parameter. */
    await gapi.client.parametermanager.projects.locations.parameters.patch(
      {
        name: 'Test string',
        requestId: 'Test string',
        updateMask: 'Test string',
      },
      {
        createTime: 'Test string',
        format: 'Test string',
        kmsKey: 'Test string',
        labels: {
          A: 'Test string',
        },
        name: 'Test string',
        policyMember: {
          iamPolicyNamePrincipal: 'Test string',
          iamPolicyUidPrincipal: 'Test string',
        },
        updateTime: 'Test string',
      },
    );
    /** Creates a new ParameterVersion in a given project, location, and parameter. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.create(
      {
        parameterVersionId: 'Test string',
        parent: 'Test string',
        requestId: 'Test string',
      },
      {
        createTime: 'Test string',
        disabled: true,
        kmsKeyVersion: 'Test string',
        name: 'Test string',
        payload: {
          data: 'Test string',
        },
        updateTime: 'Test string',
      },
    );
    /** Deletes a single ParameterVersion. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.delete(
      {
        name: 'Test string',
        requestId: 'Test string',
      },
    );
    /** Gets details of a single ParameterVersion. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.get(
      {
        name: 'Test string',
        view: 'Test string',
      },
    );
    /** Lists ParameterVersions in a given project, location, and parameter. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.list(
      {
        filter: 'Test string',
        orderBy: 'Test string',
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      },
    );
    /** Updates a single ParameterVersion. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.patch(
      {
        name: 'Test string',
        requestId: 'Test string',
        updateMask: 'Test string',
      },
      {
        createTime: 'Test string',
        disabled: true,
        kmsKeyVersion: 'Test string',
        name: 'Test string',
        payload: {
          data: 'Test string',
        },
        updateTime: 'Test string',
      },
    );
    /** Gets rendered version of a ParameterVersion. */
    await gapi.client.parametermanager.projects.locations.parameters.versions.render(
      {
        name: 'Test string',
      },
    );
  }
});
