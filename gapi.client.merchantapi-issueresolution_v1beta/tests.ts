/* This is stub file for gapi.client.merchantapi-issueresolution_v1beta definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250623

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://merchantapi.googleapis.com/$discovery/rest?version=issueresolution_v1beta',
  );
  /** now we can use gapi.client.merchantapi */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Manage your product listings and accounts for Google Shopping */
    'https://www.googleapis.com/auth/content',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Lists the `AggregateProductStatuses` resources for your merchant account. The response might contain fewer items than specified by `pageSize`. If `pageToken` was returned in previous request, it can be used to obtain additional results. */
    await gapi.client.merchantapi.accounts.aggregateProductStatuses.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Provide a list of business's account issues with an issue resolution content and available actions. This content and actions are meant to be rendered and shown in third-party applications. */
    await gapi.client.merchantapi.issueresolution.renderaccountissues(
      {
        languageCode: 'Test string',
        name: 'Test string',
        timeZone: 'Test string',
      },
      {
        contentOption: 'Test string',
        userInputActionOption: 'Test string',
      },
    );
    /** Provide a list of issues for business's product with an issue resolution content and available actions. This content and actions are meant to be rendered and shown in third-party applications. */
    await gapi.client.merchantapi.issueresolution.renderproductissues(
      {
        languageCode: 'Test string',
        name: 'Test string',
        timeZone: 'Test string',
      },
      {
        contentOption: 'Test string',
        userInputActionOption: 'Test string',
      },
    );
    /** Start an action. The action can be requested by a business in third-party application. Before the business can request the action, the third-party application needs to show them action specific content and display a user input form. The action can be successfully started only once all `required` inputs are provided. If any `required` input is missing, or invalid value was provided, the service will return 400 error. Validation errors will contain Ids for all problematic field together with translated, human readable error messages that can be shown to the user. */
    await gapi.client.merchantapi.issueresolution.triggeraction(
      {
        languageCode: 'Test string',
        name: 'Test string',
      },
      {
        actionContext: 'Test string',
        actionInput: {
          actionFlowId: 'Test string',
          inputValues: [
            {
              checkboxInputValue: {
                value: true,
              },
              choiceInputValue: {
                choiceInputOptionId: 'Test string',
              },
              inputFieldId: 'Test string',
              textInputValue: {
                value: 'Test string',
              },
            },
          ],
        },
      },
    );
  }
});
