/* This is stub file for gapi.client.mybusinessaccountmanagement-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240723

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://mybusinessaccountmanagement.googleapis.com/$discovery/rest?version=v1'
  );
  /** now we can use gapi.client.mybusinessaccountmanagement */

  void run();

  async function run() {
    /** Creates an account with the specified name and type under the given parent. - Personal accounts and Organizations cannot be created. - User Groups cannot be created with a Personal account as primary owner. - Location Groups cannot be created with a primary owner of a Personal account if the Personal account is in an Organization. - Location Groups cannot own Location Groups. */
    await gapi.client.mybusinessaccountmanagement.accounts.create(
      {},
      {
        accountName: 'Test string',
        accountNumber: 'Test string',
        name: 'Test string',
        organizationInfo: {
          address: {
            addressLines: ['Test string'],
            administrativeArea: 'Test string',
            languageCode: 'Test string',
            locality: 'Test string',
            organization: 'Test string',
            postalCode: 'Test string',
            recipients: ['Test string'],
            regionCode: 'Test string',
            revision: 42,
            sortingCode: 'Test string',
            sublocality: 'Test string',
          },
          phoneNumber: 'Test string',
          registeredDomain: 'Test string',
        },
        permissionLevel: 'Test string',
        primaryOwner: 'Test string',
        role: 'Test string',
        type: 'Test string',
        verificationState: 'Test string',
        vettedState: 'Test string',
      }
    );
    /** Gets the specified account. Returns `NOT_FOUND` if the account does not exist or if the caller does not have access rights to it. */
    await gapi.client.mybusinessaccountmanagement.accounts.get({
      name: 'Test string',
    });
    /** Lists all of the accounts for the authenticated user. This includes all accounts that the user owns, as well as any accounts for which the user has management rights. */
    await gapi.client.mybusinessaccountmanagement.accounts.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parentAccount: 'Test string',
    });
    /** Updates the specified business account. Personal accounts cannot be updated using this method. */
    await gapi.client.mybusinessaccountmanagement.accounts.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
        validateOnly: true,
      },
      {
        accountName: 'Test string',
        accountNumber: 'Test string',
        name: 'Test string',
        organizationInfo: {
          address: {
            addressLines: ['Test string'],
            administrativeArea: 'Test string',
            languageCode: 'Test string',
            locality: 'Test string',
            organization: 'Test string',
            postalCode: 'Test string',
            recipients: ['Test string'],
            regionCode: 'Test string',
            revision: 42,
            sortingCode: 'Test string',
            sublocality: 'Test string',
          },
          phoneNumber: 'Test string',
          registeredDomain: 'Test string',
        },
        permissionLevel: 'Test string',
        primaryOwner: 'Test string',
        role: 'Test string',
        type: 'Test string',
        verificationState: 'Test string',
        vettedState: 'Test string',
      }
    );
    /** Invites the specified user to become an administrator for the specified account. The invitee must accept the invitation in order to be granted access to the account. See AcceptInvitation to programmatically accept an invitation. */
    await gapi.client.mybusinessaccountmanagement.accounts.admins.create(
      {
        parent: 'Test string',
      },
      {
        account: 'Test string',
        admin: 'Test string',
        name: 'Test string',
        pendingInvitation: true,
        role: 'Test string',
      }
    );
    /** Removes the specified admin from the specified account. */
    await gapi.client.mybusinessaccountmanagement.accounts.admins.delete({
      name: 'Test string',
    });
    /** Lists the admins for the specified account. */
    await gapi.client.mybusinessaccountmanagement.accounts.admins.list({
      parent: 'Test string',
    });
    /** Updates the Admin for the specified Account Admin. */
    await gapi.client.mybusinessaccountmanagement.accounts.admins.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        account: 'Test string',
        admin: 'Test string',
        name: 'Test string',
        pendingInvitation: true,
        role: 'Test string',
      }
    );
    /** Accepts the specified invitation. */
    await gapi.client.mybusinessaccountmanagement.accounts.invitations.accept(
      {
        name: 'Test string',
      },
      {}
    );
    /** Declines the specified invitation. */
    await gapi.client.mybusinessaccountmanagement.accounts.invitations.decline(
      {
        name: 'Test string',
      },
      {}
    );
    /** Lists pending invitations for the specified account. */
    await gapi.client.mybusinessaccountmanagement.accounts.invitations.list({
      filter: 'Test string',
      parent: 'Test string',
    });
    /** Moves a location from an account that the user owns to another account that the same user administers. The user must be an owner of the account the location is currently associated with and must also be at least a manager of the destination account. */
    await gapi.client.mybusinessaccountmanagement.locations.transfer(
      {
        name: 'Test string',
      },
      {
        destinationAccount: 'Test string',
      }
    );
    /** Invites the specified user to become an administrator for the specified location. The invitee must accept the invitation in order to be granted access to the location. See AcceptInvitation to programmatically accept an invitation. */
    await gapi.client.mybusinessaccountmanagement.locations.admins.create(
      {
        parent: 'Test string',
      },
      {
        account: 'Test string',
        admin: 'Test string',
        name: 'Test string',
        pendingInvitation: true,
        role: 'Test string',
      }
    );
    /** Removes the specified admin as a manager of the specified location. */
    await gapi.client.mybusinessaccountmanagement.locations.admins.delete({
      name: 'Test string',
    });
    /** Lists all of the admins for the specified location. */
    await gapi.client.mybusinessaccountmanagement.locations.admins.list({
      parent: 'Test string',
    });
    /** Updates the Admin for the specified location. Only the AdminRole of the Admin can be updated. */
    await gapi.client.mybusinessaccountmanagement.locations.admins.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        account: 'Test string',
        admin: 'Test string',
        name: 'Test string',
        pendingInvitation: true,
        role: 'Test string',
      }
    );
  }
});
