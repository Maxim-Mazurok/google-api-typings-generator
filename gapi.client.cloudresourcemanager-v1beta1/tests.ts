/* This is stub file for gapi.client.cloudresourcemanager-v1beta1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230521

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://cloudresourcemanager.googleapis.com/$discovery/rest?version=v1beta1');
    /** now we can use gapi.client.cloudresourcemanager */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
        /** View your data across Google Cloud services and see the email address of your Google Account */
        'https://www.googleapis.com/auth/cloud-platform.read-only',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Fetches an Organization resource identified by the specified resource name. */
        await gapi.client.cloudresourcemanager.organizations.get({
            name: "Test string",
            organizationId: "Test string",
        });
        /**
         * Gets the access control policy for an Organization resource. May be empty if no such policy or resource exists. The `resource` field should be the organization's resource name, e.g.
         * "organizations/123".
         */
        await gapi.client.cloudresourcemanager.organizations.getIamPolicy({
            resource: "Test string",
        }, {
            options: {
                requestedPolicyVersion: 42,
            },
        });
        /**
         * Lists Organization resources that are visible to the user and satisfy the specified filter. This method returns Organizations in an unspecified order. New Organizations do not
         * necessarily appear at the end of the list.
         */
        await gapi.client.cloudresourcemanager.organizations.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /** Sets the access control policy on an Organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, e.g. "organizations/123". */
        await gapi.client.cloudresourcemanager.organizations.setIamPolicy({
            resource: "Test string",
        }, {
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"
                                ],
                                logType: "Test string",
                            }
                        ],
                        service: "Test string",
                    }
                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"
                        ],
                        role: "Test string",
                    }
                ],
                etag: "Test string",
                version: 42,
            },
            updateMask: "Test string",
        });
        /** Returns permissions that a caller has on the specified Organization. The `resource` field should be the organization's resource name, e.g. "organizations/123". */
        await gapi.client.cloudresourcemanager.organizations.testIamPermissions({
            resource: "Test string",
        }, {
            permissions: [
                "Test string"
            ],
        });
        /** Updates an Organization resource identified by the specified resource name. */
        await gapi.client.cloudresourcemanager.organizations.update({
            name: "Test string",
        }, {
            creationTime: "Test string",
            displayName: "Test string",
            lifecycleState: "Test string",
            name: "Test string",
            organizationId: "Test string",
            owner: {
                directoryCustomerId: "Test string",
            },
        });
        /**
         * Creates a Project resource. Initially, the Project resource is owned by its creator exclusively. The creator can later grant permission to others to read or update the Project. Several
         * APIs are activated automatically for the Project, including Google Cloud Storage. The parent is identified by a specified ResourceId, which must include both an ID and a type, such as
         * project, folder, or organization. This method does not associate the new project with a billing account. You can set or update the billing account associated with a project using the
         * [`projects.updateBillingInfo`] (/billing/reference/rest/v1/projects/updateBillingInfo) method.
         */
        await gapi.client.cloudresourcemanager.projects.create({
            useLegacyStack: true,
        }, {
            createTime: "Test string",
            labels: {
                A: "Test string"
            },
            lifecycleState: "Test string",
            name: "Test string",
            parent: {
                id: "Test string",
                type: "Test string",
            },
            projectId: "Test string",
            projectNumber: "Test string",
        });
        /**
         * Marks the Project identified by the specified `project_id` (for example, `my-project-123`) for deletion. This method will only affect the Project if it has a lifecycle state of ACTIVE.
         * This method changes the Project's lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion starts at an unspecified time, at which point the project is no longer accessible. Until
         * the deletion completes, you can check the lifecycle state checked by retrieving the Project with GetProject, and the Project remains visible to ListProjects. However, you cannot update
         * the project. After the deletion completes, the Project is not retrievable by the GetProject and ListProjects methods. The caller must have delete permissions for this Project.
         */
        await gapi.client.cloudresourcemanager.projects.delete({
            projectId: "Test string",
        });
        /** Retrieves the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have read permissions for this Project. */
        await gapi.client.cloudresourcemanager.projects.get({
            projectId: "Test string",
        });
        /**
         * Gets a list of ancestors in the resource hierarchy for the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have read permissions for
         * this Project.
         */
        await gapi.client.cloudresourcemanager.projects.getAncestry({
            projectId: "Test string",
        }, {
        });
        /**
         * Returns the IAM access control policy for the specified Project. Permission is denied if the policy or the resource does not exist. For additional information about resource structure
         * and identification, see [Resource Names](/apis/design/resource_names).
         */
        await gapi.client.cloudresourcemanager.projects.getIamPolicy({
            resource: "Test string",
        }, {
            options: {
                requestedPolicyVersion: 42,
            },
        });
        /**
         * Lists Projects that the caller has the `resourcemanager.projects.get` permission on and satisfy the specified filter. This method returns Projects in an unspecified order. This method
         * is eventually consistent with project mutations; this means that a newly created project may not appear in the results or recent updates to an existing project may not be reflected in
         * the results. To retrieve the latest state of a project, use the GetProject method. NOTE: If the request filter contains a `parent.type` and `parent.id` and the caller has the
         * `resourcemanager.projects.list` permission on the parent, the results will be drawn from an alternate index which provides more consistent results. In future versions of this API, this
         * List method will be split into List and Search to properly capture the behavioral difference.
         */
        await gapi.client.cloudresourcemanager.projects.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /**
         * Sets the IAM access control policy for the specified Project. CAUTION: This method will replace the existing policy, and cannot be used to append additional IAM settings. NOTE: Removing
         * service accounts from policies or changing their roles can render services completely inoperable. It is important to understand how the service account is being used before removing or
         * updating its roles. The following constraints apply when using `setIamPolicy()`: + Project does not support `allUsers` and `allAuthenticatedUsers` as `members` in a `Binding` of a
         * `Policy`. + The owner role can be granted to a `user`, `serviceAccount`, or a group that is part of an organization. For example, group@myownpersonaldomain.com could be added as an
         * owner to a project in the myownpersonaldomain.com organization, but not the examplepetstore.com organization. + Service accounts can be made owners of a project directly without any
         * restrictions. However, to be added as an owner, a user must be invited via Cloud Platform console and must accept the invitation. + A user cannot be granted the owner role using
         * `setIamPolicy()`. The user must be granted the owner role using the Cloud Platform Console and must explicitly accept the invitation. + Invitations to grant the owner role cannot be
         * sent using `setIamPolicy()`; they must be sent only using the Cloud Platform Console. + Membership changes that leave the project without any owners that have accepted the Terms of
         * Service (ToS) will be rejected. + If the project is not part of an organization, there must be at least one owner who has accepted the Terms of Service (ToS) agreement in the policy.
         * Calling `setIamPolicy()` to remove the last ToS-accepted owner from the policy will fail. This restriction also applies to legacy projects that no longer have owners who have accepted
         * the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting owner is rectified. Authorization requires the Google IAM permission
         * `resourcemanager.projects.setIamPolicy` on the project
         */
        await gapi.client.cloudresourcemanager.projects.setIamPolicy({
            resource: "Test string",
        }, {
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"
                                ],
                                logType: "Test string",
                            }
                        ],
                        service: "Test string",
                    }
                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"
                        ],
                        role: "Test string",
                    }
                ],
                etag: "Test string",
                version: 42,
            },
            updateMask: "Test string",
        });
        /** Returns permissions that a caller has on the specified Project. */
        await gapi.client.cloudresourcemanager.projects.testIamPermissions({
            resource: "Test string",
        }, {
            permissions: [
                "Test string"
            ],
        });
        /**
         * Restores the Project identified by the specified `project_id` (for example, `my-project-123`). You can only use this method for a Project that has a lifecycle state of DELETE_REQUESTED.
         * After deletion starts, the Project cannot be restored. The caller must have undelete permissions for this Project.
         */
        await gapi.client.cloudresourcemanager.projects.undelete({
            projectId: "Test string",
        }, {
        });
        /** Updates the attributes of the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have modify permissions for this Project. */
        await gapi.client.cloudresourcemanager.projects.update({
            projectId: "Test string",
        }, {
            createTime: "Test string",
            labels: {
                A: "Test string"
            },
            lifecycleState: "Test string",
            name: "Test string",
            parent: {
                id: "Test string",
                type: "Test string",
            },
            projectId: "Test string",
            projectNumber: "Test string",
        });
    }
});
