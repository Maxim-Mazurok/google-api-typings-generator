/* Type definitions for non-npm package Cloud Document AI API v1 1.0 */
// Project: https://cloud.google.com/document-ai/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://documentai.googleapis.com/$discovery/rest?version=v1
// Revision: 20220216

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Document AI API v1 */
    function load(name: "documentai", version: "v1"): PromiseLike<void>;
    function load(name: "documentai", version: "v1", callback: () => any): void;

    namespace documentai {
        interface GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
            /** The destination dataset split type. */
            destDatasetType?: string;
            /** The list of response details of each document. */
            individualBatchMoveStatuses?: GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus[];
        }
        interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus {
            /** The document id of the document. */
            documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
            /** The status of moving the document. */
            status?: GoogleRpcStatus;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** A related resource to this operation. */
            resource?: string;
            /** The state of the operation. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3DocumentId {
            gcsManagedDocId?: GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId;
            /** Points to a specific revision of the document if set. */
            revisionReference?: GoogleCloudDocumentaiUiv1beta3RevisionReference;
        }
        interface GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId {
            /** Optional. Id of the document (indexed) managed by Content Warehouse. */
            cwDocId?: string;
            /** Required. The Cloud Storage uri where the actual document is stored. */
            gcsUri?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse {
            /** The resource name of the created evaluation. */
            evaluation?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata {
            /** The common metadata about the operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse {
            /** The Cloud Storage URI containing the output artifacts. */
            gcsUri?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
            /** The list of response details of each document. */
            individualImportStatuses?: GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus[];
        }
        interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus {
            /** The source Cloud Storage URI of the document. */
            inputGcsSource?: string;
            /** The output_gcs_destination of the processed document if it was successful, otherwise empty. */
            outputGcsDestination?: string;
            /** The status of the importing of the document. */
            status?: GoogleRpcStatus;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
            /** Returns the newly added document Cloud Storage prefix if the documents are founded in Cloud Storage while not in Document Service storage. */
            newlyAddedDocuments?: GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataUpdatedDocument[];
        }
        interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataUpdatedDocument {
            /** The prefix of cloud storage, identifies the destination document which should be updated by resync pipeline. */
            destinationPrefix?: string;
            /** The prefix of cloud storage, identifies the original document which should be updated by resync pipeline. */
            sourcePrefix?: string;
            /** The final status of the documents which should be updated by resync pipeline. */
            status?: GoogleRpcStatus;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3RevisionReference {
            /** Read the revision generated by the processor version, returns error if it does not exist. */
            latestProcessorVersion?: string;
            /** Read the revision by the predefined case. */
            revisionCase?: string;
            /** Read the revision given by the id, returns error if it does not exist. */
            revisionId?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
            /** The test dataset validation information. */
            testDatasetValidation?: GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation;
            /** The training dataset validation information. */
            trainingDatasetValidation?: GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation;
        }
        interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation {
            /** The total number of dataset errors. */
            datasetErrorCount?: number;
            /** Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training. */
            datasetErrors?: GoogleRpcStatus[];
            /** The total number of document errors. */
            documentErrorCount?: number;
            /** Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training. */
            documentErrors?: GoogleRpcStatus[];
        }
        interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse {
            /** The resource name of the processor version produced by training. */
            processorVersion?: string;
        }
        interface GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1alpha1AnalyzeHitlDataMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1alpha1CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1alpha1CommonOperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** A related resource to this operation. */
            resource?: string;
            /** The state of the operation. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1BatchDocumentsInputConfig {
            /** The set of documents individually specified on Cloud Storage. */
            gcsDocuments?: GoogleCloudDocumentaiV1GcsDocuments;
            /** The set of documents that match the specified Cloud Storage [gcs_prefix]. */
            gcsPrefix?: GoogleCloudDocumentaiV1GcsPrefix;
        }
        interface GoogleCloudDocumentaiV1BatchProcessMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** The list of response details of each document. */
            individualProcessStatuses?: GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus[];
            /** The state of the current batch processing. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus {
            /** The status of human review on the processed document. */
            humanReviewStatus?: GoogleCloudDocumentaiV1HumanReviewStatus;
            /**
             * The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since
             * a user can move or change that document during the process.
             */
            inputGcsSource?: string;
            /** The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty. */
            outputGcsDestination?: string;
            /** The status of the processing of the document. */
            status?: GoogleRpcStatus;
        }
        interface GoogleCloudDocumentaiV1BatchProcessRequest {
            /** The overall output config for batch process. */
            documentOutputConfig?: GoogleCloudDocumentaiV1DocumentOutputConfig;
            /** The input documents for batch process. */
            inputDocuments?: GoogleCloudDocumentaiV1BatchDocumentsInputConfig;
            /** Whether Human Review feature should be skipped for this request. Default to false. */
            skipHumanReview?: boolean;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1BatchProcessResponse {
        }
        interface GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse {
            /** Responses for each individual document. */
            responses?: GoogleCloudDocumentaiV1beta1ProcessDocumentResponse[];
        }
        interface GoogleCloudDocumentaiV1beta1BoundingPoly {
            /** The bounding polygon normalized vertices. */
            normalizedVertices?: GoogleCloudDocumentaiV1beta1NormalizedVertex[];
            /** The bounding polygon vertices. */
            vertices?: GoogleCloudDocumentaiV1beta1Vertex[];
        }
        interface GoogleCloudDocumentaiV1beta1Document {
            /**
             * Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations
             * use base64.
             */
            content?: string;
            /** A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries. */
            entities?: GoogleCloudDocumentaiV1beta1DocumentEntity[];
            /** Relationship among Document.entities. */
            entityRelations?: GoogleCloudDocumentaiV1beta1DocumentEntityRelation[];
            /** Any error that occurred while processing this document. */
            error?: GoogleRpcStatus;
            /** An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml. */
            mimeType?: string;
            /** Visual page layout for the Document. */
            pages?: GoogleCloudDocumentaiV1beta1DocumentPage[];
            /** Revision history of this document. */
            revisions?: GoogleCloudDocumentaiV1beta1DocumentRevision[];
            /** Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified. */
            shardInfo?: GoogleCloudDocumentaiV1beta1DocumentShardInfo;
            /** Optional. UTF-8 encoded text in reading order from the document. */
            text?: string;
            /**
             * A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each
             * other.
             */
            textChanges?: GoogleCloudDocumentaiV1beta1DocumentTextChange[];
            /** Styles for the Document.text. */
            textStyles?: GoogleCloudDocumentaiV1beta1DocumentStyle[];
            /**
             * Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request
             * URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.
             */
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentEntity {
            /** Optional. Confidence of detected Schema entity. Range [0, 1]. */
            confidence?: number;
            /** Optional. Canonical id. This will be a unique value in the entity list for this document. */
            id?: string;
            /** Optional. Deprecated. Use `id` field instead. */
            mentionId?: string;
            /** Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty. */
            mentionText?: string;
            /**
             * Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only
             * populated for certain supported document types.
             */
            normalizedValue?: GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue;
            /** Optional. Represents the provenance of this entity wrt. the location on the page where it was found. */
            pageAnchor?: GoogleCloudDocumentaiV1beta1DocumentPageAnchor;
            /** Optional. Entities can be nested to form a hierarchical data structure representing the content in the document. */
            properties?: GoogleCloudDocumentaiV1beta1DocumentEntity[];
            /** Optional. The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
            /** Optional. Whether the entity will be redacted for de-identification purposes. */
            redacted?: boolean;
            /** Optional. Provenance of the entity. Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta1DocumentTextAnchor;
            /** Entity type from a schema e.g. `Address`. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue {
            /** Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto */
            addressValue?: GoogleTypePostalAddress;
            /** Boolean value. Can be used for entities with binary values, or for checkboxes. */
            booleanValue?: boolean;
            /** DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto */
            datetimeValue?: GoogleTypeDateTime;
            /** Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto */
            dateValue?: GoogleTypeDate;
            /** Float value. */
            floatValue?: number;
            /** Integer value. */
            integerValue?: number;
            /** Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto */
            moneyValue?: GoogleTypeMoney;
            /**
             * Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of
             * `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. -
             * Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601
             * text format.
             */
            text?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentEntityRelation {
            /** Object entity id. */
            objectId?: string;
            /** Relationship description. */
            relation?: string;
            /** Subject entity id. */
            subjectId?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPage {
            /** A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation. */
            blocks?: GoogleCloudDocumentaiV1beta1DocumentPageBlock[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Physical dimension of the page. */
            dimension?: GoogleCloudDocumentaiV1beta1DocumentPageDimension;
            /** A list of visually detected form fields on the page. */
            formFields?: GoogleCloudDocumentaiV1beta1DocumentPageFormField[];
            /** Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned. */
            image?: GoogleCloudDocumentaiV1beta1DocumentPageImage;
            /** Layout for the page. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line. */
            lines?: GoogleCloudDocumentaiV1beta1DocumentPageLine[];
            /** 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing. */
            pageNumber?: number;
            /** A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph. */
            paragraphs?: GoogleCloudDocumentaiV1beta1DocumentPageParagraph[];
            /** The history of this page. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
            /** A list of visually detected symbols on the page. */
            symbols?: GoogleCloudDocumentaiV1beta1DocumentPageSymbol[];
            /** A list of visually detected tables on the page. */
            tables?: GoogleCloudDocumentaiV1beta1DocumentPageTable[];
            /** A list of visually detected tokens on the page. */
            tokens?: GoogleCloudDocumentaiV1beta1DocumentPageToken[];
            /** Transformation matrices that were applied to the original document image to produce Page.image. */
            transforms?: GoogleCloudDocumentaiV1beta1DocumentPageMatrix[];
            /** A list of detected non-text visual elements e.g. checkbox, signature etc. on the page. */
            visualElements?: GoogleCloudDocumentaiV1beta1DocumentPageVisualElement[];
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageAnchor {
            /** One or more references to visual page elements */
            pageRefs?: GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef[];
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef {
            /** Optional. Identifies the bounding polygon of a layout element on the page. */
            boundingPoly?: GoogleCloudDocumentaiV1beta1BoundingPoly;
            /** Optional. Confidence of detected page element, if applicable. Range [0, 1]. */
            confidence?: number;
            /** Optional. Deprecated. Use PageRef.bounding_poly instead. */
            layoutId?: string;
            /** Optional. The type of the layout element that is being referenced if any. */
            layoutType?: string;
            /**
             * Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See
             * https://developers.google.com/protocol-buffers/docs/proto3#json.
             */
            page?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageBlock {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for Block. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage {
            /** Confidence of detected language. Range [0, 1]. */
            confidence?: number;
            /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. */
            languageCode?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageDimension {
            /** Page height. */
            height?: number;
            /** Dimension unit. */
            unit?: string;
            /** Page width. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageFormField {
            /** Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction. */
            correctedKeyText?: string;
            /** Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction. */
            correctedValueText?: string;
            /** Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc. */
            fieldName?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** Layout for the FormField value. */
            fieldValue?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** A list of detected languages for name together with confidence. */
            nameDetectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
            /** A list of detected languages for value together with confidence. */
            valueDetectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /**
             * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - "unfilled_checkbox" -
             * "filled_checkbox"
             */
            valueType?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageImage {
            /** Raw byte content of the image. */
            content?: string;
            /** Height of the image in pixels. */
            height?: number;
            /** Encoding mime type for the image. */
            mimeType?: string;
            /** Width of the image in pixels. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageLayout {
            /** The bounding polygon for the Layout. */
            boundingPoly?: GoogleCloudDocumentaiV1beta1BoundingPoly;
            /**
             * Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context.
             * Range [0, 1].
             */
            confidence?: number;
            /** Detected orientation for the Layout. */
            orientation?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta1DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageLine {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for Line. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageMatrix {
            /** Number of columns in the matrix. */
            cols?: number;
            /** The matrix data. */
            data?: string;
            /** Number of rows in the matrix. */
            rows?: number;
            /**
             * This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to
             * https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
             */
            type?: number;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageParagraph {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for Paragraph. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageSymbol {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for Symbol. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageTable {
            /** Body rows of the table. */
            bodyRows?: GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Header rows of the table. */
            headerRows?: GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow[];
            /** Layout for Table. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell {
            /** How many columns this cell spans. */
            colSpan?: number;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for TableCell. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** How many rows this cell spans. */
            rowSpan?: number;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow {
            /** Cells that make up this row. */
            cells?: GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell[];
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageToken {
            /** Detected break at the end of a Token. */
            detectedBreak?: GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for Token. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak {
            /** Detected break type. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentPageVisualElement {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[];
            /** Layout for VisualElement. */
            layout?: GoogleCloudDocumentaiV1beta1DocumentPageLayout;
            /** Type of the VisualElement. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentProvenance {
            /** The Id of this operation. Needs to be unique within the scope of the revision. */
            id?: number;
            /** References to the original elements that are replaced. */
            parents?: GoogleCloudDocumentaiV1beta1DocumentProvenanceParent[];
            /** The index of the revision that produced this element. */
            revision?: number;
            /** The type of provenance operation. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentProvenanceParent {
            /** The id of the parent provenance. */
            id?: number;
            /** The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision. */
            index?: number;
            /** The index of the index into current revision's parent_ids list. */
            revision?: number;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentRevision {
            /** If the change was made by a person specify the name or id of that person. */
            agent?: string;
            /** The time that the revision was created. */
            createTime?: string;
            /** Human Review information of this revision. */
            humanReview?: GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview;
            /** Id of the revision. Unique within the context of the document. */
            id?: string;
            /** The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field. */
            parent?: number[];
            /**
             * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index
             * into this field.
             */
            parentIds?: string[];
            /** If the annotation was made by processor identify the processor by its resource name. */
            processor?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview {
            /** Human review state. e.g. `requested`, `succeeded`, `rejected`. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`. */
            stateMessage?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentShardInfo {
            /** Total number of shards. */
            shardCount?: string;
            /** The 0-based index of this shard. */
            shardIndex?: string;
            /** The index of the first character in Document.text in the overall document global text. */
            textOffset?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentStyle {
            /** Text background color. */
            backgroundColor?: GoogleTypeColor;
            /** Text color. */
            color?: GoogleTypeColor;
            /** Font size. */
            fontSize?: GoogleCloudDocumentaiV1beta1DocumentStyleFontSize;
            /** Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp */
            fontWeight?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta1DocumentTextAnchor;
            /** Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp */
            textDecoration?: string;
            /** Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp */
            textStyle?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentStyleFontSize {
            /** Font size for the text. */
            size?: number;
            /** Unit for the font size. Follows CSS naming (in, px, pt, etc.). */
            unit?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentTextAnchor {
            /** Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields. */
            content?: string;
            /** The text segments from the Document.text. */
            textSegments?: GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment[];
        }
        interface GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment {
            /** TextSegment half open end UTF-8 char index in the Document.text. */
            endIndex?: string;
            /** TextSegment start UTF-8 char index in the Document.text. */
            startIndex?: string;
        }
        interface GoogleCloudDocumentaiV1beta1DocumentTextChange {
            /** The text that replaces the text identified in the `text_anchor`. */
            changedText?: string;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta1DocumentProvenance[];
            /**
             * Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text
             * segment are the same, the text change is inserted before that index.
             */
            textAnchor?: GoogleCloudDocumentaiV1beta1DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1beta1GcsDestination {
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta1GcsSource {
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta1InputConfig {
            /** The Google Cloud Storage location to read the input from. This must be a single file. */
            gcsSource?: GoogleCloudDocumentaiV1beta1GcsSource;
            /**
             * Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with
             * ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.
             */
            mimeType?: string;
        }
        interface GoogleCloudDocumentaiV1beta1NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudDocumentaiV1beta1OperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** The state of the current batch processing. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1beta1OutputConfig {
            /** The Google Cloud Storage location to write the output to. */
            gcsDestination?: GoogleCloudDocumentaiV1beta1GcsDestination;
            /**
             * The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example,
             * for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under
             * the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50:
             * pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json
             */
            pagesPerShard?: number;
        }
        interface GoogleCloudDocumentaiV1beta1ProcessDocumentResponse {
            /** Information about the input file. This is the same as the corresponding input config in the request. */
            inputConfig?: GoogleCloudDocumentaiV1beta1InputConfig;
            /** The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects. */
            outputConfig?: GoogleCloudDocumentaiV1beta1OutputConfig;
        }
        interface GoogleCloudDocumentaiV1beta1Vertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse {
            /** Responses for each individual document. */
            responses?: GoogleCloudDocumentaiV1beta2ProcessDocumentResponse[];
        }
        interface GoogleCloudDocumentaiV1beta2BoundingPoly {
            /** The bounding polygon normalized vertices. */
            normalizedVertices?: GoogleCloudDocumentaiV1beta2NormalizedVertex[];
            /** The bounding polygon vertices. */
            vertices?: GoogleCloudDocumentaiV1beta2Vertex[];
        }
        interface GoogleCloudDocumentaiV1beta2Document {
            /**
             * Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations
             * use base64.
             */
            content?: string;
            /** A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries. */
            entities?: GoogleCloudDocumentaiV1beta2DocumentEntity[];
            /** Relationship among Document.entities. */
            entityRelations?: GoogleCloudDocumentaiV1beta2DocumentEntityRelation[];
            /** Any error that occurred while processing this document. */
            error?: GoogleRpcStatus;
            /** Labels for this document. */
            labels?: GoogleCloudDocumentaiV1beta2DocumentLabel[];
            /** An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml. */
            mimeType?: string;
            /** Visual page layout for the Document. */
            pages?: GoogleCloudDocumentaiV1beta2DocumentPage[];
            /** Revision history of this document. */
            revisions?: GoogleCloudDocumentaiV1beta2DocumentRevision[];
            /** Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified. */
            shardInfo?: GoogleCloudDocumentaiV1beta2DocumentShardInfo;
            /** Optional. UTF-8 encoded text in reading order from the document. */
            text?: string;
            /**
             * A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each
             * other.
             */
            textChanges?: GoogleCloudDocumentaiV1beta2DocumentTextChange[];
            /** Styles for the Document.text. */
            textStyles?: GoogleCloudDocumentaiV1beta2DocumentStyle[];
            /**
             * Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request
             * URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.
             */
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentEntity {
            /** Optional. Confidence of detected Schema entity. Range [0, 1]. */
            confidence?: number;
            /** Optional. Canonical id. This will be a unique value in the entity list for this document. */
            id?: string;
            /** Optional. Deprecated. Use `id` field instead. */
            mentionId?: string;
            /** Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty. */
            mentionText?: string;
            /**
             * Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only
             * populated for certain supported document types.
             */
            normalizedValue?: GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue;
            /** Optional. Represents the provenance of this entity wrt. the location on the page where it was found. */
            pageAnchor?: GoogleCloudDocumentaiV1beta2DocumentPageAnchor;
            /** Optional. Entities can be nested to form a hierarchical data structure representing the content in the document. */
            properties?: GoogleCloudDocumentaiV1beta2DocumentEntity[];
            /** Optional. The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
            /** Optional. Whether the entity will be redacted for de-identification purposes. */
            redacted?: boolean;
            /** Optional. Provenance of the entity. Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta2DocumentTextAnchor;
            /** Entity type from a schema e.g. `Address`. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue {
            /** Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto */
            addressValue?: GoogleTypePostalAddress;
            /** Boolean value. Can be used for entities with binary values, or for checkboxes. */
            booleanValue?: boolean;
            /** DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto */
            datetimeValue?: GoogleTypeDateTime;
            /** Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto */
            dateValue?: GoogleTypeDate;
            /** Float value. */
            floatValue?: number;
            /** Integer value. */
            integerValue?: number;
            /** Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto */
            moneyValue?: GoogleTypeMoney;
            /**
             * Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of
             * `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. -
             * Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601
             * text format.
             */
            text?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentEntityRelation {
            /** Object entity id. */
            objectId?: string;
            /** Relationship description. */
            relation?: string;
            /** Subject entity id. */
            subjectId?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentLabel {
            /** Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}` */
            automlModel?: string;
            /** Confidence score between 0 and 1 for label assignment. */
            confidence?: number;
            /** Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category. */
            name?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPage {
            /** A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation. */
            blocks?: GoogleCloudDocumentaiV1beta2DocumentPageBlock[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Physical dimension of the page. */
            dimension?: GoogleCloudDocumentaiV1beta2DocumentPageDimension;
            /** A list of visually detected form fields on the page. */
            formFields?: GoogleCloudDocumentaiV1beta2DocumentPageFormField[];
            /** Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned. */
            image?: GoogleCloudDocumentaiV1beta2DocumentPageImage;
            /** Layout for the page. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line. */
            lines?: GoogleCloudDocumentaiV1beta2DocumentPageLine[];
            /** 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing. */
            pageNumber?: number;
            /** A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph. */
            paragraphs?: GoogleCloudDocumentaiV1beta2DocumentPageParagraph[];
            /** The history of this page. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
            /** A list of visually detected symbols on the page. */
            symbols?: GoogleCloudDocumentaiV1beta2DocumentPageSymbol[];
            /** A list of visually detected tables on the page. */
            tables?: GoogleCloudDocumentaiV1beta2DocumentPageTable[];
            /** A list of visually detected tokens on the page. */
            tokens?: GoogleCloudDocumentaiV1beta2DocumentPageToken[];
            /** Transformation matrices that were applied to the original document image to produce Page.image. */
            transforms?: GoogleCloudDocumentaiV1beta2DocumentPageMatrix[];
            /** A list of detected non-text visual elements e.g. checkbox, signature etc. on the page. */
            visualElements?: GoogleCloudDocumentaiV1beta2DocumentPageVisualElement[];
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageAnchor {
            /** One or more references to visual page elements */
            pageRefs?: GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef[];
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef {
            /** Optional. Identifies the bounding polygon of a layout element on the page. */
            boundingPoly?: GoogleCloudDocumentaiV1beta2BoundingPoly;
            /** Optional. Confidence of detected page element, if applicable. Range [0, 1]. */
            confidence?: number;
            /** Optional. Deprecated. Use PageRef.bounding_poly instead. */
            layoutId?: string;
            /** Optional. The type of the layout element that is being referenced if any. */
            layoutType?: string;
            /**
             * Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See
             * https://developers.google.com/protocol-buffers/docs/proto3#json.
             */
            page?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageBlock {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for Block. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage {
            /** Confidence of detected language. Range [0, 1]. */
            confidence?: number;
            /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. */
            languageCode?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageDimension {
            /** Page height. */
            height?: number;
            /** Dimension unit. */
            unit?: string;
            /** Page width. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageFormField {
            /** Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction. */
            correctedKeyText?: string;
            /** Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction. */
            correctedValueText?: string;
            /** Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc. */
            fieldName?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** Layout for the FormField value. */
            fieldValue?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** A list of detected languages for name together with confidence. */
            nameDetectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
            /** A list of detected languages for value together with confidence. */
            valueDetectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /**
             * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - "unfilled_checkbox" -
             * "filled_checkbox"
             */
            valueType?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageImage {
            /** Raw byte content of the image. */
            content?: string;
            /** Height of the image in pixels. */
            height?: number;
            /** Encoding mime type for the image. */
            mimeType?: string;
            /** Width of the image in pixels. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageLayout {
            /** The bounding polygon for the Layout. */
            boundingPoly?: GoogleCloudDocumentaiV1beta2BoundingPoly;
            /**
             * Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context.
             * Range [0, 1].
             */
            confidence?: number;
            /** Detected orientation for the Layout. */
            orientation?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta2DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageLine {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for Line. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageMatrix {
            /** Number of columns in the matrix. */
            cols?: number;
            /** The matrix data. */
            data?: string;
            /** Number of rows in the matrix. */
            rows?: number;
            /**
             * This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to
             * https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
             */
            type?: number;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageParagraph {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for Paragraph. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageSymbol {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for Symbol. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageTable {
            /** Body rows of the table. */
            bodyRows?: GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Header rows of the table. */
            headerRows?: GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow[];
            /** Layout for Table. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell {
            /** How many columns this cell spans. */
            colSpan?: number;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for TableCell. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** How many rows this cell spans. */
            rowSpan?: number;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow {
            /** Cells that make up this row. */
            cells?: GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell[];
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageToken {
            /** Detected break at the end of a Token. */
            detectedBreak?: GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for Token. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak {
            /** Detected break type. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentPageVisualElement {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[];
            /** Layout for VisualElement. */
            layout?: GoogleCloudDocumentaiV1beta2DocumentPageLayout;
            /** Type of the VisualElement. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentProvenance {
            /** The Id of this operation. Needs to be unique within the scope of the revision. */
            id?: number;
            /** References to the original elements that are replaced. */
            parents?: GoogleCloudDocumentaiV1beta2DocumentProvenanceParent[];
            /** The index of the revision that produced this element. */
            revision?: number;
            /** The type of provenance operation. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentProvenanceParent {
            /** The id of the parent provenance. */
            id?: number;
            /** The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision. */
            index?: number;
            /** The index of the index into current revision's parent_ids list. */
            revision?: number;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentRevision {
            /** If the change was made by a person specify the name or id of that person. */
            agent?: string;
            /** The time that the revision was created. */
            createTime?: string;
            /** Human Review information of this revision. */
            humanReview?: GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview;
            /** Id of the revision. Unique within the context of the document. */
            id?: string;
            /** The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field. */
            parent?: number[];
            /**
             * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index
             * into this field.
             */
            parentIds?: string[];
            /** If the annotation was made by processor identify the processor by its resource name. */
            processor?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview {
            /** Human review state. e.g. `requested`, `succeeded`, `rejected`. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`. */
            stateMessage?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentShardInfo {
            /** Total number of shards. */
            shardCount?: string;
            /** The 0-based index of this shard. */
            shardIndex?: string;
            /** The index of the first character in Document.text in the overall document global text. */
            textOffset?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentStyle {
            /** Text background color. */
            backgroundColor?: GoogleTypeColor;
            /** Text color. */
            color?: GoogleTypeColor;
            /** Font size. */
            fontSize?: GoogleCloudDocumentaiV1beta2DocumentStyleFontSize;
            /** Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp */
            fontWeight?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1beta2DocumentTextAnchor;
            /** Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp */
            textDecoration?: string;
            /** Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp */
            textStyle?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentStyleFontSize {
            /** Font size for the text. */
            size?: number;
            /** Unit for the font size. Follows CSS naming (in, px, pt, etc.). */
            unit?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentTextAnchor {
            /** Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields. */
            content?: string;
            /** The text segments from the Document.text. */
            textSegments?: GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment[];
        }
        interface GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment {
            /** TextSegment half open end UTF-8 char index in the Document.text. */
            endIndex?: string;
            /** TextSegment start UTF-8 char index in the Document.text. */
            startIndex?: string;
        }
        interface GoogleCloudDocumentaiV1beta2DocumentTextChange {
            /** The text that replaces the text identified in the `text_anchor`. */
            changedText?: string;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1beta2DocumentProvenance[];
            /**
             * Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text
             * segment are the same, the text change is inserted before that index.
             */
            textAnchor?: GoogleCloudDocumentaiV1beta2DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1beta2GcsDestination {
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta2GcsSource {
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1beta2InputConfig {
            /**
             * Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use
             * base64. This field only works for synchronous ProcessDocument method.
             */
            contents?: string;
            /** The Google Cloud Storage location to read the input from. This must be a single file. */
            gcsSource?: GoogleCloudDocumentaiV1beta2GcsSource;
            /**
             * Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with
             * ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.
             */
            mimeType?: string;
        }
        interface GoogleCloudDocumentaiV1beta2NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudDocumentaiV1beta2OperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** The state of the current batch processing. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1beta2OutputConfig {
            /** The Google Cloud Storage location to write the output to. */
            gcsDestination?: GoogleCloudDocumentaiV1beta2GcsDestination;
            /**
             * The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example,
             * for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under
             * the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50:
             * pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json
             */
            pagesPerShard?: number;
        }
        interface GoogleCloudDocumentaiV1beta2ProcessDocumentResponse {
            /** Information about the input file. This is the same as the corresponding input config in the request. */
            inputConfig?: GoogleCloudDocumentaiV1beta2InputConfig;
            /** The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects. */
            outputConfig?: GoogleCloudDocumentaiV1beta2OutputConfig;
        }
        interface GoogleCloudDocumentaiV1beta2Vertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudDocumentaiV1beta3BatchProcessMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** The list of response details of each document. */
            individualProcessStatuses?: GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus[];
            /** The state of the current batch processing. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus {
            /**
             * The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as
             * the long running operation returned by ReviewDocument method.
             */
            humanReviewOperation?: string;
            /** The status of human review on the processed document. */
            humanReviewStatus?: GoogleCloudDocumentaiV1beta3HumanReviewStatus;
            /**
             * The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since
             * a user can move or change that document during the process.
             */
            inputGcsSource?: string;
            /** The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty. */
            outputGcsDestination?: string;
            /** The status of the processing of the document. */
            status?: GoogleRpcStatus;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3BatchProcessResponse {
        }
        interface GoogleCloudDocumentaiV1beta3CommonOperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** A related resource to this operation. */
            resource?: string;
            /** The state of the operation. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1beta3DisableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3DisableProcessorResponse {
        }
        interface GoogleCloudDocumentaiV1beta3EnableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3EnableProcessorResponse {
        }
        interface GoogleCloudDocumentaiV1beta3HumanReviewStatus {
            /**
             * The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and
             * metadata as the long running operation returned by [ReviewDocument] method.
             */
            humanReviewOperation?: string;
            /** The state of human review on the processing request. */
            state?: string;
            /** A message providing more details about the human review state. */
            stateMessage?: string;
        }
        interface GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
            /** The creation time of the operation. */
            createTime?: string;
            /** The Crowd Compute question ID. */
            questionId?: string;
            /** Used only when Operation.done is false. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1beta3ReviewDocumentResponse {
            /** The Cloud Storage uri for the human reviewed document. */
            gcsDestination?: string;
        }
        interface GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1BoundingPoly {
            /** The bounding polygon normalized vertices. */
            normalizedVertices?: GoogleCloudDocumentaiV1NormalizedVertex[];
            /** The bounding polygon vertices. */
            vertices?: GoogleCloudDocumentaiV1Vertex[];
        }
        interface GoogleCloudDocumentaiV1CommonOperationMetadata {
            /** The creation time of the operation. */
            createTime?: string;
            /** A related resource to this operation. */
            resource?: string;
            /** The state of the operation. */
            state?: string;
            /** A message providing more details about the current state of processing. */
            stateMessage?: string;
            /** The last update time of the operation. */
            updateTime?: string;
        }
        interface GoogleCloudDocumentaiV1DeleteProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1DeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1DeployProcessorVersionRequest {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1DeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1DisableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1DisableProcessorRequest {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1DisableProcessorResponse {
        }
        interface GoogleCloudDocumentaiV1Document {
            /**
             * Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations
             * use base64.
             */
            content?: string;
            /** A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries. */
            entities?: GoogleCloudDocumentaiV1DocumentEntity[];
            /** Relationship among Document.entities. */
            entityRelations?: GoogleCloudDocumentaiV1DocumentEntityRelation[];
            /** Any error that occurred while processing this document. */
            error?: GoogleRpcStatus;
            /** An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml. */
            mimeType?: string;
            /** Visual page layout for the Document. */
            pages?: GoogleCloudDocumentaiV1DocumentPage[];
            /** Revision history of this document. */
            revisions?: GoogleCloudDocumentaiV1DocumentRevision[];
            /** Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified. */
            shardInfo?: GoogleCloudDocumentaiV1DocumentShardInfo;
            /** Optional. UTF-8 encoded text in reading order from the document. */
            text?: string;
            /**
             * A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each
             * other.
             */
            textChanges?: GoogleCloudDocumentaiV1DocumentTextChange[];
            /** Styles for the Document.text. */
            textStyles?: GoogleCloudDocumentaiV1DocumentStyle[];
            /**
             * Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request
             * URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.
             */
            uri?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentEntity {
            /** Optional. Confidence of detected Schema entity. Range [0, 1]. */
            confidence?: number;
            /** Optional. Canonical id. This will be a unique value in the entity list for this document. */
            id?: string;
            /** Optional. Deprecated. Use `id` field instead. */
            mentionId?: string;
            /** Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty. */
            mentionText?: string;
            /**
             * Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only
             * populated for certain supported document types.
             */
            normalizedValue?: GoogleCloudDocumentaiV1DocumentEntityNormalizedValue;
            /** Optional. Represents the provenance of this entity wrt. the location on the page where it was found. */
            pageAnchor?: GoogleCloudDocumentaiV1DocumentPageAnchor;
            /** Optional. Entities can be nested to form a hierarchical data structure representing the content in the document. */
            properties?: GoogleCloudDocumentaiV1DocumentEntity[];
            /** Optional. The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
            /** Optional. Whether the entity will be redacted for de-identification purposes. */
            redacted?: boolean;
            /** Optional. Provenance of the entity. Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1DocumentTextAnchor;
            /** Entity type from a schema e.g. `Address`. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentEntityNormalizedValue {
            /** Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto */
            addressValue?: GoogleTypePostalAddress;
            /** Boolean value. Can be used for entities with binary values, or for checkboxes. */
            booleanValue?: boolean;
            /** DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto */
            datetimeValue?: GoogleTypeDateTime;
            /** Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto */
            dateValue?: GoogleTypeDate;
            /** Float value. */
            floatValue?: number;
            /** Integer value. */
            integerValue?: number;
            /** Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto */
            moneyValue?: GoogleTypeMoney;
            /**
             * Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of
             * `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. -
             * Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601
             * text format.
             */
            text?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentEntityRelation {
            /** Object entity id. */
            objectId?: string;
            /** Relationship description. */
            relation?: string;
            /** Subject entity id. */
            subjectId?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentOutputConfig {
            /** Output config to write the results to Cloud Storage. */
            gcsOutputConfig?: GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig;
        }
        interface GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig {
            /** The Cloud Storage uri (a directory) of the output. */
            gcsUri?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentPage {
            /** A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation. */
            blocks?: GoogleCloudDocumentaiV1DocumentPageBlock[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Physical dimension of the page. */
            dimension?: GoogleCloudDocumentaiV1DocumentPageDimension;
            /** A list of visually detected form fields on the page. */
            formFields?: GoogleCloudDocumentaiV1DocumentPageFormField[];
            /** Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned. */
            image?: GoogleCloudDocumentaiV1DocumentPageImage;
            /** Layout for the page. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line. */
            lines?: GoogleCloudDocumentaiV1DocumentPageLine[];
            /** 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing. */
            pageNumber?: number;
            /** A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph. */
            paragraphs?: GoogleCloudDocumentaiV1DocumentPageParagraph[];
            /** The history of this page. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
            /** A list of visually detected symbols on the page. */
            symbols?: GoogleCloudDocumentaiV1DocumentPageSymbol[];
            /** A list of visually detected tables on the page. */
            tables?: GoogleCloudDocumentaiV1DocumentPageTable[];
            /** A list of visually detected tokens on the page. */
            tokens?: GoogleCloudDocumentaiV1DocumentPageToken[];
            /** Transformation matrices that were applied to the original document image to produce Page.image. */
            transforms?: GoogleCloudDocumentaiV1DocumentPageMatrix[];
            /** A list of detected non-text visual elements e.g. checkbox, signature etc. on the page. */
            visualElements?: GoogleCloudDocumentaiV1DocumentPageVisualElement[];
        }
        interface GoogleCloudDocumentaiV1DocumentPageAnchor {
            /** One or more references to visual page elements */
            pageRefs?: GoogleCloudDocumentaiV1DocumentPageAnchorPageRef[];
        }
        interface GoogleCloudDocumentaiV1DocumentPageAnchorPageRef {
            /** Optional. Identifies the bounding polygon of a layout element on the page. */
            boundingPoly?: GoogleCloudDocumentaiV1BoundingPoly;
            /** Optional. Confidence of detected page element, if applicable. Range [0, 1]. */
            confidence?: number;
            /** Optional. Deprecated. Use PageRef.bounding_poly instead. */
            layoutId?: string;
            /** Optional. The type of the layout element that is being referenced if any. */
            layoutType?: string;
            /**
             * Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See
             * https://developers.google.com/protocol-buffers/docs/proto3#json.
             */
            page?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentPageBlock {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for Block. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1DocumentPageDetectedLanguage {
            /** Confidence of detected language. Range [0, 1]. */
            confidence?: number;
            /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. */
            languageCode?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentPageDimension {
            /** Page height. */
            height?: number;
            /** Dimension unit. */
            unit?: string;
            /** Page width. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1DocumentPageFormField {
            /** Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction. */
            correctedKeyText?: string;
            /** Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction. */
            correctedValueText?: string;
            /** Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc. */
            fieldName?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** Layout for the FormField value. */
            fieldValue?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** A list of detected languages for name together with confidence. */
            nameDetectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
            /** A list of detected languages for value together with confidence. */
            valueDetectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /**
             * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - "unfilled_checkbox" -
             * "filled_checkbox"
             */
            valueType?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentPageImage {
            /** Raw byte content of the image. */
            content?: string;
            /** Height of the image in pixels. */
            height?: number;
            /** Encoding mime type for the image. */
            mimeType?: string;
            /** Width of the image in pixels. */
            width?: number;
        }
        interface GoogleCloudDocumentaiV1DocumentPageLayout {
            /** The bounding polygon for the Layout. */
            boundingPoly?: GoogleCloudDocumentaiV1BoundingPoly;
            /**
             * Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context.
             * Range [0, 1].
             */
            confidence?: number;
            /** Detected orientation for the Layout. */
            orientation?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1DocumentPageLine {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for Line. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1DocumentPageMatrix {
            /** Number of columns in the matrix. */
            cols?: number;
            /** The matrix data. */
            data?: string;
            /** Number of rows in the matrix. */
            rows?: number;
            /**
             * This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to
             * https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
             */
            type?: number;
        }
        interface GoogleCloudDocumentaiV1DocumentPageParagraph {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for Paragraph. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1DocumentPageSymbol {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for Symbol. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1DocumentPageTable {
            /** Body rows of the table. */
            bodyRows?: GoogleCloudDocumentaiV1DocumentPageTableTableRow[];
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Header rows of the table. */
            headerRows?: GoogleCloudDocumentaiV1DocumentPageTableTableRow[];
            /** Layout for Table. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
        }
        interface GoogleCloudDocumentaiV1DocumentPageTableTableCell {
            /** How many columns this cell spans. */
            colSpan?: number;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for TableCell. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** How many rows this cell spans. */
            rowSpan?: number;
        }
        interface GoogleCloudDocumentaiV1DocumentPageTableTableRow {
            /** Cells that make up this row. */
            cells?: GoogleCloudDocumentaiV1DocumentPageTableTableCell[];
        }
        interface GoogleCloudDocumentaiV1DocumentPageToken {
            /** Detected break at the end of a Token. */
            detectedBreak?: GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak;
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for Token. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
        }
        interface GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak {
            /** Detected break type. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentPageVisualElement {
            /** A list of detected languages together with confidence. */
            detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];
            /** Layout for VisualElement. */
            layout?: GoogleCloudDocumentaiV1DocumentPageLayout;
            /** Type of the VisualElement. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentProvenance {
            /** The Id of this operation. Needs to be unique within the scope of the revision. */
            id?: number;
            /** References to the original elements that are replaced. */
            parents?: GoogleCloudDocumentaiV1DocumentProvenanceParent[];
            /** The index of the revision that produced this element. */
            revision?: number;
            /** The type of provenance operation. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentProvenanceParent {
            /** The id of the parent provenance. */
            id?: number;
            /** The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision. */
            index?: number;
            /** The index of the index into current revision's parent_ids list. */
            revision?: number;
        }
        interface GoogleCloudDocumentaiV1DocumentRevision {
            /** If the change was made by a person specify the name or id of that person. */
            agent?: string;
            /** The time that the revision was created. */
            createTime?: string;
            /** Human Review information of this revision. */
            humanReview?: GoogleCloudDocumentaiV1DocumentRevisionHumanReview;
            /** Id of the revision. Unique within the context of the document. */
            id?: string;
            /** The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field. */
            parent?: number[];
            /**
             * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index
             * into this field.
             */
            parentIds?: string[];
            /** If the annotation was made by processor identify the processor by its resource name. */
            processor?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentRevisionHumanReview {
            /** Human review state. e.g. `requested`, `succeeded`, `rejected`. */
            state?: string;
            /** A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`. */
            stateMessage?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentShardInfo {
            /** Total number of shards. */
            shardCount?: string;
            /** The 0-based index of this shard. */
            shardIndex?: string;
            /** The index of the first character in Document.text in the overall document global text. */
            textOffset?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentStyle {
            /** Text background color. */
            backgroundColor?: GoogleTypeColor;
            /** Text color. */
            color?: GoogleTypeColor;
            /** Font size. */
            fontSize?: GoogleCloudDocumentaiV1DocumentStyleFontSize;
            /** Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp */
            fontWeight?: string;
            /** Text anchor indexing into the Document.text. */
            textAnchor?: GoogleCloudDocumentaiV1DocumentTextAnchor;
            /** Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp */
            textDecoration?: string;
            /** Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp */
            textStyle?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentStyleFontSize {
            /** Font size for the text. */
            size?: number;
            /** Unit for the font size. Follows CSS naming (in, px, pt, etc.). */
            unit?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentTextAnchor {
            /** Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields. */
            content?: string;
            /** The text segments from the Document.text. */
            textSegments?: GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment[];
        }
        interface GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment {
            /** TextSegment half open end UTF-8 char index in the Document.text. */
            endIndex?: string;
            /** TextSegment start UTF-8 char index in the Document.text. */
            startIndex?: string;
        }
        interface GoogleCloudDocumentaiV1DocumentTextChange {
            /** The text that replaces the text identified in the `text_anchor`. */
            changedText?: string;
            /** The history of this annotation. */
            provenance?: GoogleCloudDocumentaiV1DocumentProvenance[];
            /**
             * Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text
             * segment are the same, the text change is inserted before that index.
             */
            textAnchor?: GoogleCloudDocumentaiV1DocumentTextAnchor;
        }
        interface GoogleCloudDocumentaiV1EnableProcessorMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1EnableProcessorRequest {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1EnableProcessorResponse {
        }
        interface GoogleCloudDocumentaiV1FetchProcessorTypesResponse {
            /** The list of processor types. */
            processorTypes?: GoogleCloudDocumentaiV1ProcessorType[];
        }
        interface GoogleCloudDocumentaiV1GcsDocument {
            /** The Cloud Storage object uri. */
            gcsUri?: string;
            /** An IANA MIME type (RFC6838) of the content. */
            mimeType?: string;
        }
        interface GoogleCloudDocumentaiV1GcsDocuments {
            /** The list of documents. */
            documents?: GoogleCloudDocumentaiV1GcsDocument[];
        }
        interface GoogleCloudDocumentaiV1GcsPrefix {
            /** The URI prefix. */
            gcsUriPrefix?: string;
        }
        interface GoogleCloudDocumentaiV1HumanReviewStatus {
            /**
             * The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and
             * metadata as the long running operation returned by [ReviewDocument] method.
             */
            humanReviewOperation?: string;
            /** The state of human review on the processing request. */
            state?: string;
            /** A message providing more details about the human review state. */
            stateMessage?: string;
        }
        interface GoogleCloudDocumentaiV1ListProcessorsResponse {
            /** Points to the next processor, otherwise empty. */
            nextPageToken?: string;
            /** The list of processors. */
            processors?: GoogleCloudDocumentaiV1Processor[];
        }
        interface GoogleCloudDocumentaiV1ListProcessorVersionsResponse {
            /** Points to the next processor, otherwise empty. */
            nextPageToken?: string;
            /** The list of processors. */
            processorVersions?: GoogleCloudDocumentaiV1ProcessorVersion[];
        }
        interface GoogleCloudDocumentaiV1NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudDocumentaiV1Processor {
            /** The time the processor was created. */
            createTime?: string;
            /** The default processor version. */
            defaultProcessorVersion?: string;
            /** The display name of the processor. */
            displayName?: string;
            /** The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management. */
            kmsKeyName?: string;
            /** Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}` */
            name?: string;
            /** Output only. Immutable. The http endpoint that can be called to invoke processing. */
            processEndpoint?: string;
            /** Output only. The state of the processor. */
            state?: string;
            /** The processor type, e.g., INVOICE_PARSING, W2_PARSING, etc. */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1ProcessorType {
            /** Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access. */
            allowCreation?: boolean;
            /** The locations in which this processor is available. */
            availableLocations?: GoogleCloudDocumentaiV1ProcessorTypeLocationInfo[];
            /** The processor category, used by UI to group processor types. */
            category?: string;
            /** Launch stage of the processor type */
            launchStage?: string;
            /** The resource name of the processor type. Format: projects/{project}/processorTypes/{processor_type} */
            name?: string;
            /** The type of the processor, e.g., "invoice_parsing". */
            type?: string;
        }
        interface GoogleCloudDocumentaiV1ProcessorTypeLocationInfo {
            /** The location id, currently must be one of [us, eu]. */
            locationId?: string;
        }
        interface GoogleCloudDocumentaiV1ProcessorVersion {
            /** The time the processor version was created. */
            createTime?: string;
            /** The display name of the processor version. */
            displayName?: string;
            /** The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}` */
            name?: string;
            /** The state of the processor version. */
            state?: string;
        }
        interface GoogleCloudDocumentaiV1ProcessRequest {
            /** An inline document proto. */
            inlineDocument?: GoogleCloudDocumentaiV1Document;
            /** A raw document content (bytes). */
            rawDocument?: GoogleCloudDocumentaiV1RawDocument;
            /** Whether Human Review feature should be skipped for this request. Default to false. */
            skipHumanReview?: boolean;
        }
        interface GoogleCloudDocumentaiV1ProcessResponse {
            /** The document payload, will populate fields based on the processor's behavior. */
            document?: GoogleCloudDocumentaiV1Document;
            /** The status of human review on the processed document. */
            humanReviewStatus?: GoogleCloudDocumentaiV1HumanReviewStatus;
        }
        interface GoogleCloudDocumentaiV1RawDocument {
            /** Inline document content. */
            content?: string;
            /** An IANA MIME type (RFC6838) indicating the nature and format of the [content]. */
            mimeType?: string;
        }
        interface GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
            /** The Crowd Compute question ID. */
            questionId?: string;
        }
        interface GoogleCloudDocumentaiV1ReviewDocumentRequest {
            /** Whether the validation should be performed on the ad-hoc review request. */
            enableSchemaValidation?: boolean;
            /** An inline document proto. */
            inlineDocument?: GoogleCloudDocumentaiV1Document;
            /** The priority of the human review task. */
            priority?: string;
        }
        interface GoogleCloudDocumentaiV1ReviewDocumentResponse {
            /** The Cloud Storage uri for the human reviewed document. */
            gcsDestination?: string;
        }
        interface GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        interface GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest {
            /** Required. The resource name of child ProcessorVersion to use as default. */
            defaultProcessorVersion?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata {
            /** The basic metadata of the long running operation. */
            commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1UndeployProcessorVersionRequest {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDocumentaiV1UndeployProcessorVersionResponse {
        }
        interface GoogleCloudDocumentaiV1Vertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate (starts from the top of the image). */
            y?: number;
        }
        interface GoogleCloudLocationListLocationsResponse {
            /** A list of locations that matches the specified filter in the request. */
            locations?: GoogleCloudLocationLocation[];
            /** The standard List next-page token. */
            nextPageToken?: string;
        }
        interface GoogleCloudLocationLocation {
            /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
            displayName?: string;
            /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
            labels?: { [P in string]: string };
            /** The canonical id for this location. For example: `"us-east1"`. */
            locationId?: string;
            /** Service-specific metadata. For example the available capacity at the given location. */
            metadata?: { [P in string]: any };
            /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
            name?: string;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeColor {
            /**
             * The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) *
             * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message
             * rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color
             * (as if the alpha value had been explicitly given a value of 1.0).
             */
            alpha?: number;
            /** The amount of blue in the color as a value in the interval [0, 1]. */
            blue?: number;
            /** The amount of green in the color as a value in the interval [0, 1]. */
            green?: number;
            /** The amount of red in the color as a value in the interval [0, 1]. */
            red?: number;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?: number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?: number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?: number;
        }
        interface GoogleTypeDateTime {
            /** Required. Day of month. Must be from 1 to 31 and valid for the year and month. */
            day?: number;
            /** Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
            hours?: number;
            /** Required. Minutes of hour of day. Must be from 0 to 59. */
            minutes?: number;
            /** Required. Month of year. Must be from 1 to 12. */
            month?: number;
            /** Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. */
            nanos?: number;
            /** Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. */
            seconds?: number;
            /** Time zone. */
            timeZone?: GoogleTypeTimeZone;
            /** UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }. */
            utcOffset?: string;
            /** Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year. */
            year?: number;
        }
        interface GoogleTypeMoney {
            /** The three-letter currency code defined in ISO 4217. */
            currencyCode?: string;
            /**
             * Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units`
             * is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and
             * `nanos`=-750,000,000.
             */
            nanos?: number;
            /** The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar. */
            units?: string;
        }
        interface GoogleTypePostalAddress {
            /**
             * Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a
             * single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In
             * places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the
             * most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining
             * information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of
             * the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to
             * handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
             */
            addressLines?: string[];
            /**
             * Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture.
             * Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal
             * addresses. E.g. in Switzerland this should be left unpopulated.
             */
            administrativeArea?: string;
            /**
             * Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the
             * address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never
             * affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples:
             * "zh-Hant", "ja", "ja-Latn", "en".
             */
            languageCode?: string;
            /**
             * Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do
             * not fit into this structure well, leave locality empty and use address_lines.
             */
            locality?: string;
            /** Optional. The name of the organization at the address. */
            organization?: string;
            /**
             * Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts
             * of the address (e.g. state/zip validation in the U.S.A.).
             */
            postalCode?: string;
            /** Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information. */
            recipients?: string[];
            /**
             * Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and
             * http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
             */
            regionCode?: string;
            /** The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions. */
            revision?: number;
            /**
             * Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number
             * (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
             */
            sortingCode?: string;
            /** Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. */
            sublocality?: string;
        }
        interface GoogleTypeTimeZone {
            /** IANA Time Zone Database time zone, e.g. "America/New_York". */
            id?: string;
            /** Optional. IANA Time Zone Database version number, e.g. "2019a". */
            version?: string;
        }
        interface OperationsResource {
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface HumanReviewConfigResource {
            /** Send a document for Human Review. The input document should be processed by the specified processor. */
            reviewDocument(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Required. The resource name of the HumanReviewConfig that the document will be reviewed with. */
                humanReviewConfig: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1ReviewDocumentRequest;
            }): Request<GoogleLongrunningOperation>;
            reviewDocument(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Required. The resource name of the HumanReviewConfig that the document will be reviewed with. */
                humanReviewConfig: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1ReviewDocumentRequest): Request<GoogleLongrunningOperation>;
        }
        interface ProcessorVersionsResource {
            /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
            batchProcess(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or
                 * `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1BatchProcessRequest;
            }): Request<GoogleLongrunningOperation>;
            batchProcess(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or
                 * `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1BatchProcessRequest): Request<GoogleLongrunningOperation>;
            /** Deletes the processor version, all artifacts under the processor version will be deleted. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor version resource name to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Deploys the processor version. */
            deploy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor version resource name to be deployed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1DeployProcessorVersionRequest;
            }): Request<GoogleLongrunningOperation>;
            deploy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor version resource name to be deployed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1DeployProcessorVersionRequest): Request<GoogleLongrunningOperation>;
            /** Gets a processor version detail. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDocumentaiV1ProcessorVersion>;
            /** Lists all versions of a processor. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The maximum number of processor versions to return. If unspecified, at most 10 processor versions will be returned. The maximum value is 20; values above 20 will be coerced to
                 * 20.
                 */
                pageSize?: number;
                /** We will return the processor versions sorted by creation time. The page token will point to the next processor version. */
                pageToken?: string;
                /** Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDocumentaiV1ListProcessorVersionsResponse>;
            /** Processes a single document. */
            process(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format:
                 * `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1ProcessRequest;
            }): Request<GoogleCloudDocumentaiV1ProcessResponse>;
            process(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format:
                 * `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1ProcessRequest): Request<GoogleCloudDocumentaiV1ProcessResponse>;
            /** Undeploys the processor version. */
            undeploy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor version resource name to be undeployed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1UndeployProcessorVersionRequest;
            }): Request<GoogleLongrunningOperation>;
            undeploy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor version resource name to be undeployed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1UndeployProcessorVersionRequest): Request<GoogleLongrunningOperation>;
        }
        interface ProcessorsResource {
            /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
            batchProcess(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or
                 * `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1BatchProcessRequest;
            }): Request<GoogleLongrunningOperation>;
            batchProcess(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or
                 * `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1BatchProcessRequest): Request<GoogleLongrunningOperation>;
            /** Creates a processor from the type processor that the user chose. The processor will be at "ENABLED" state by default after its creation. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1Processor;
            }): Request<GoogleCloudDocumentaiV1Processor>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1Processor): Request<GoogleCloudDocumentaiV1Processor>;
            /** Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Disables a processor */
            disable(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name to be disabled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1DisableProcessorRequest;
            }): Request<GoogleLongrunningOperation>;
            disable(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name to be disabled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1DisableProcessorRequest): Request<GoogleLongrunningOperation>;
            /** Enables a processor */
            enable(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name to be enabled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1EnableProcessorRequest;
            }): Request<GoogleLongrunningOperation>;
            enable(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name to be enabled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1EnableProcessorRequest): Request<GoogleLongrunningOperation>;
            /** Gets a processor detail. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The processor resource name. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDocumentaiV1Processor>;
            /** Lists all processors which belong to this project. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of processors to return. If unspecified, at most 50 processors will be returned. The maximum value is 100; values above 100 will be coerced to 100. */
                pageSize?: number;
                /** We will return the processors sorted by creation time. The page token will point to the next processor. */
                pageToken?: string;
                /** Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDocumentaiV1ListProcessorsResponse>;
            /** Processes a single document. */
            process(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format:
                 * `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1ProcessRequest;
            }): Request<GoogleCloudDocumentaiV1ProcessResponse>;
            process(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format:
                 * `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1ProcessRequest): Request<GoogleCloudDocumentaiV1ProcessResponse>;
            /** Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments. */
            setDefaultProcessorVersion(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Required. The resource name of the Processor to change default version. */
                processor: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest;
            }): Request<GoogleLongrunningOperation>;
            setDefaultProcessorVersion(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Required. The resource name of the Processor to change default version. */
                processor: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest): Request<GoogleLongrunningOperation>;
            humanReviewConfig: HumanReviewConfigResource;
            processorVersions: ProcessorVersionsResource;
        }
        interface LocationsResource {
            /** Fetches processor types. Note that we do not use ListProcessorTypes here because it is not paginated. */
            fetchProcessorTypes(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDocumentaiV1FetchProcessorTypesResponse>;
            /** Gets information about a location. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Resource name for the location. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationLocation>;
            /** Lists information about the supported locations for this service. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter to narrow down results to a preferred subset. The filtering language accepts strings like "displayName=tokyo", and is documented in more detail in
                 * [AIP-160](https://google.aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource that owns the locations collection, if applicable. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of results to return. If not set, the service selects a default. */
                pageSize?: number;
                /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationListLocationsResponse>;
            operations: OperationsResource;
            processors: ProcessorsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
        }
        interface ProjectsResource {
            locations: LocationsResource;
            operations: OperationsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface LocationsResource {
            /** Gets information about a location. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Resource name for the location. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationLocation>;
            /** Lists information about the supported locations for this service. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter to narrow down results to a preferred subset. The filtering language accepts strings like "displayName=tokyo", and is documented in more detail in
                 * [AIP-160](https://google.aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource that owns the locations collection, if applicable. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of results to return. If not set, the service selects a default. */
                pageSize?: number;
                /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationListLocationsResponse>;
            operations: OperationsResource;
        }
        interface ProjectsResource {
            locations: LocationsResource;
        }
        interface Uiv1beta3Resource {
            projects: ProjectsResource;
        }

        const operations: OperationsResource;

        const projects: ProjectsResource;

        const uiv1beta3: Uiv1beta3Resource;
    }
}
