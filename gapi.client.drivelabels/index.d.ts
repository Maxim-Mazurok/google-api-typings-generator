/* Type definitions for non-npm package Drive Labels API v2 2.0 */
// Project: https://developers.google.com/drive/labels
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://drivelabels.googleapis.com/$discovery/rest?version=v2
// Revision: 20220730

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Drive Labels API v2 */
    function load(name: "drivelabels", version: "v2"): PromiseLike<void>;
    function load(name: "drivelabels", version: "v2", callback: () => any): void;

    namespace drivelabels {
        interface GoogleAppsDriveLabelsV2BadgeColors {
            /** Output only. Badge background which pairs with the foreground */
            backgroundColor?: GoogleTypeColor;
            /** Output only. Badge foreground which pairs with the background */
            foregroundColor?: GoogleTypeColor;
            /** Output only. Color that can be used for text without a background */
            soloColor?: GoogleTypeColor;
        }
        interface GoogleAppsDriveLabelsV2BadgeConfig {
            /** The color of the badge. When not specified, no badge will be rendered. This color will be coerced into the closest recommended supported color. */
            color?: GoogleTypeColor;
            /** Override the default global priority of this badge. When set to 0, the default priority heuristic will be used. */
            priorityOverride?: string;
        }
        interface GoogleAppsDriveLabelsV2Field {
            /** Output only. The capabilities this user has on this Field and its value when the Label is applied on Drive items. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2FieldAppliedCapabilities;
            /** Output only. The time this field was created. */
            createTime?: string;
            /** Output only. The user who created this field. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Date field options. */
            dateOptions?: GoogleAppsDriveLabelsV2FieldDateOptions;
            /** Output only. The user who disabled this field. This value has no meaning when the field is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this field was disabled. This value has no meaning when the field is not disabled. */
            disableTime?: string;
            /** Output only. UI Display hints for rendering a Field. */
            displayHints?: GoogleAppsDriveLabelsV2FieldDisplayHints;
            /** Output only. The key of a field, unique within a Label or Library. This value is autogenerated, and will match the form `([a-zA-Z0-9_])+ */
            id?: string;
            /** Integer field options. */
            integerOptions?: GoogleAppsDriveLabelsV2FieldIntegerOptions;
            /** Output only. The lifecycle of this Field. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this field. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** The basic properties of the field. */
            properties?: GoogleAppsDriveLabelsV2FieldProperties;
            /** Output only. The user who published this field. This value has no meaning when the field is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The key to use when constructing Drive search queries to find files based on values defined for this Field on files. For example: "`{query_key}` > 2001-01-01" */
            queryKey?: string;
            /** Output only. The capabilities this user has when editing this Field */
            schemaCapabilities?: GoogleAppsDriveLabelsV2FieldSchemaCapabilities;
            /** Selection field options. */
            selectionOptions?: GoogleAppsDriveLabelsV2FieldSelectionOptions;
            /** Text field options. */
            textOptions?: GoogleAppsDriveLabelsV2FieldTextOptions;
            /** Output only. The user who modified this field. */
            updater?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this field was updated. */
            updateTime?: string;
            /** User field options. */
            userOptions?: GoogleAppsDriveLabelsV2FieldUserOptions;
        }
        interface GoogleAppsDriveLabelsV2FieldAppliedCapabilities {
            /** Whether the user can read related applied metadata on items. */
            canRead?: boolean;
            /** Whether the user can search for drive items referencing this field. */
            canSearch?: boolean;
            /** Whether the user can set this field on drive items. */
            canWrite?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldDateOptions {
            /** Output only. ICU Date format. */
            dateFormat?: string;
            /** Localized date formatting option. Field values will be rendered in this format according to their locale. */
            dateFormatType?: string;
            /** Output only. Maximum valid value (year, month, day). */
            maxValue?: GoogleTypeDate;
            /** Output only. Minimum valid value (year, month, day). */
            minValue?: GoogleTypeDate;
        }
        interface GoogleAppsDriveLabelsV2FieldDisplayHints {
            /** Whether the field should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This Field should be hidden in the search menu. */
            hiddenInSearch?: boolean;
            /** Whether the Field should be shown as required in the UI. */
            required?: boolean;
            /** This Field should be shown when applying values to a Drive item. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldIntegerOptions {
            /** Output only. The maximum valid value for the integer field. */
            maxValue?: string;
            /** Output only. The minimum valid value for the integer field. */
            minValue?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldListOptions {
            /** Maximum number of entries permitted. */
            maxEntries?: number;
        }
        interface GoogleAppsDriveLabelsV2FieldProperties {
            /** Required. The display text to show in the UI identifying this field. */
            displayName?: string;
            /** Input only. Insert or move this Field to be ordered before the indicated Field. If empty, the Field will be placed at the end of the list. */
            insertBeforeField?: string;
            /** Whether the field should be marked as required. */
            required?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSchemaCapabilities {
            /** Whether the user can delete this Field. The user must have permissions and the Field must be deprecated. */
            canDelete?: boolean;
            /** Whether the user can disable this Field. The user must have permissions and this Field must not already be disabled. */
            canDisable?: boolean;
            /** Whether the user can enable this Field. The user must have permissions and this Field must be disabled. */
            canEnable?: boolean;
            /** Whether the user can change this field. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptions {
            /** The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`. */
            choices?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice[];
            /** When specified, indicates that this field support a list of values. Once the field is published, this cannot be changed. */
            listOptions?: GoogleAppsDriveLabelsV2FieldListOptions;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice {
            /** Output only. The capabilities related to this Choice on applied metadata. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities;
            /** Output only. The time this Choice was created. */
            createTime?: string;
            /** Output only. The user who created this Choice. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The user who disabled this Choice. This value has no meaning when the option is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this Choice was disabled. This value has no meaning when the Choice is not disabled. */
            disableTime?: string;
            /** Output only. UI Display hints for rendering a Choice. */
            displayHints?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints;
            /** The unique value of the Choice. This ID will be autogenerated, and will match the form `([a-zA-Z0-9_])+`. */
            id?: string;
            /** Output only. Lifecycle of the Choice. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this Choice. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** Basic properties of the Choice. */
            properties?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties;
            /** Output only. The user who published this Choice. This value has no meaning when the Choice is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this Choice was published. This value has no meaning when the Choice is not published. */
            publishTime?: string;
            /** Output only. The capabilities related to this option when editing the option. */
            schemaCapabilities?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities;
            /** Output only. The user who updated this Choice last. */
            updater?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this Choice was updated last. */
            updateTime?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities {
            /** Whether the user can read related applied metadata on items. */
            canRead?: boolean;
            /** Whether the user can use this Choice in search queries. */
            canSearch?: boolean;
            /** Whether the user can select this Choice on an item. */
            canSelect?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints {
            /** The colors to use for the badge. Coerced to Google Material colors based on the chosen `properties.badge_config.color`. */
            badgeColors?: GoogleAppsDriveLabelsV2BadgeColors;
            /**
             * The priority of this badge, used to compare and sort between multiple badges. A lower number means that the badge should be shown first. When a badging configuration is not present,
             * this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the Label, and field and option priority.
             */
            badgePriority?: string;
            /** The dark-mode color to use for the badge. Coerced to Google Material colors based on the chosen `properties.badge_config.color`. */
            darkBadgeColors?: GoogleAppsDriveLabelsV2BadgeColors;
            /** Whether the option should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This option should be hidden in the search menu. */
            hiddenInSearch?: boolean;
            /** This option should be shown in the menu when applying values to a Drive item. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties {
            /** The badge configuration for this Choice. When set, the Label that owns this Choice will be considered a "badged label". */
            badgeConfig?: GoogleAppsDriveLabelsV2BadgeConfig;
            /** The description of this Label. */
            description?: string;
            /** Required. The display text to show in the UI identifying this field. */
            displayName?: string;
            /** Input only. Insert or move this Choice to be ordered before the indicated Choice. If empty, the Choice will be placed at the end of the list. */
            insertBeforeChoice?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities {
            /** Whether the user can delete this Choice. */
            canDelete?: boolean;
            /** Whether the user can disable this Chioce. */
            canDisable?: boolean;
            /** Whether the user can enable this Choice. */
            canEnable?: boolean;
            /** Whether the user can update this Choice. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldTextOptions {
            /** Output only. The maximum valid length of values for the text field. */
            maxLength?: number;
            /** Output only. The minimum valid length of values for the text field. */
            minLength?: number;
        }
        interface GoogleAppsDriveLabelsV2FieldUserOptions {
            /** When specified, indicates that this field support a list of values. Once the field is published, this cannot be changed. */
            listOptions?: GoogleAppsDriveLabelsV2FieldListOptions;
        }
        interface GoogleAppsDriveLabelsV2Label {
            /** Output only. The capabilities related to this label on applied metadata. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2LabelAppliedCapabilities;
            /** Output only. Behavior of this Label when its applied to Drive items. */
            appliedLabelPolicy?: GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy;
            /** Output only. The time this label was created. */
            createTime?: string;
            /** Output only. The user who created this label. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The user who disabled this label. This value has no meaning when the label is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this label was disabled. This value has no meaning when the label is not disabled. */
            disableTime?: string;
            /** Output only. UI Display hints for rendering the Label. */
            displayHints?: GoogleAppsDriveLabelsV2LabelDisplayHints;
            /** List of Fields in descending priority order. */
            fields?: GoogleAppsDriveLabelsV2Field[];
            /**
             * Output only. Globally unique identifier of this Label. ID makes up part of the Label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex:
             * `([a-zA-Z0-9])+`
             */
            id?: string;
            /** Required. The type of this label. */
            labelType?: string;
            /** Custom URL to present to users to allow them to learn more about this label and how it should be used. */
            learnMoreUri?: string;
            /** Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this label. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** Output only. Resource name of the Label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below. */
            name?: string;
            /** Required. The basic properties of the Label. */
            properties?: GoogleAppsDriveLabelsV2LabelProperties;
            /** Output only. The user who published this label. This value has no meaning when the label is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this label was published. This value has no meaning when the label is not published. */
            publishTime?: string;
            /** Output only. The time this label revision was created. */
            revisionCreateTime?: string;
            /** Output only. The user who created this label revision. */
            revisionCreator?: GoogleAppsDriveLabelsV2UserInfo;
            /**
             * Output only. Revision ID of the Label. Revision ID may be part of the Label `name` depending on the request issued. A new revision is created whenever revisioned properties of a
             * Label are changed. Matches the regex: `([a-zA-Z0-9])+`
             */
            revisionId?: string;
            /** Output only. The capabilities the user has on this Label. */
            schemaCapabilities?: GoogleAppsDriveLabelsV2LabelSchemaCapabilities;
        }
        interface GoogleAppsDriveLabelsV2LabelAppliedCapabilities {
            /** Whether the user can apply this Label to items. */
            canApply?: boolean;
            /** Whether the user can read applied metadata related to this label. */
            canRead?: boolean;
            /** Whether the user can remove this Label from items. */
            canRemove?: boolean;
        }
        interface GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy {
            /** Indicates how the applied Label, and Field values should be copied when a Drive item is copied. */
            copyMode?: string;
        }
        interface GoogleAppsDriveLabelsV2LabelDisplayHints {
            /** Whether the Label should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This Label should be hidden in the search menu when searching for Drive items. */
            hiddenInSearch?: boolean;
            /** Order to display label in a list */
            priority?: string;
            /** This Label should be shown in the apply menu. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2LabelProperties {
            /** The description of this Label. */
            description?: string;
            /** Required. Title of the Label. */
            title?: string;
        }
        interface GoogleAppsDriveLabelsV2LabelSchemaCapabilities {
            /** Whether the user can delete this Label. The user must have permission and the Label must be disabled. */
            canDelete?: boolean;
            /** Whether the user can disable this Label. The user must have permission and this Label must not already be disabled. */
            canDisable?: boolean;
            /** Whether the user can enable this Label. The user must have permission and this Label must be disabled. */
            canEnable?: boolean;
            /** Whether the user can change this Label. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2Lifecycle {
            /** The policy that governs how to show a disabled label, field, or selection choice. */
            disabledPolicy?: GoogleAppsDriveLabelsV2LifecycleDisabledPolicy;
            /** Output only. Whether the object associated with this lifecycle has unpublished changes. */
            hasUnpublishedChanges?: boolean;
            /** Output only. The state of the object associated with this lifecycle. */
            state?: string;
        }
        interface GoogleAppsDriveLabelsV2LifecycleDisabledPolicy {
            /**
             * Whether to hide this disabled object in the search menu for Drive items. * When `false` the object will generally be shown in the UI as disabled (but still permit searching) when
             * searching for Drive items. * When `true` the object will generally be hidden in the UI when searching for Drive items.
             */
            hideInSearch?: boolean;
            /**
             * Whether to show this disabled object in the apply menu on Drive items. * When `true` the object will generally be shown in the UI as disabled and is unselectable. * When `false` the
             * object will generally be hidden in the UI.
             */
            showInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2ListLabelsResponse {
            /** Labels. */
            labels?: GoogleAppsDriveLabelsV2Label[];
            /** The token of the next page in the response. */
            nextPageToken?: string;
        }
        interface GoogleAppsDriveLabelsV2LockStatus {
            /**
             * Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component may be implicitly locked even if it is not the direct target of a
             * LabelLock, in which case this field will be false.
             */
            locked?: boolean;
        }
        interface GoogleAppsDriveLabelsV2UserInfo {
            /** The identifier for this user who can be used with the People API to get more information. e.g. people/12345678 */
            person?: string;
        }
        interface GoogleTypeColor {
            /**
             * The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) *
             * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message
             * rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color
             * (as if the alpha value had been explicitly given a value of 1.0).
             */
            alpha?: number;
            /** The amount of blue in the color as a value in the interval [0, 1]. */
            blue?: number;
            /** The amount of green in the color as a value in the interval [0, 1]. */
            green?: number;
            /** The amount of red in the color as a value in the interval [0, 1]. */
            red?: number;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?: number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?: number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?: number;
        }
        interface LabelsResource {
            /**
             * Get a Label by its resource name. Resource name may be any of: * `labels/{id}` - See to `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the Label. *
             * `labels/{id}@published` - Gets the current published revision of the Label. * `labels/{id}@{revision_id}` - Gets the Label at the specified revision ID.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The BCP-47 language code to use for evaluating localized Field labels. When not specified, values in the default configured language will be used. */
                languageCode?: string;
                /** Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. */
                useAdminAccess?: boolean;
                /** When specified, only certain Fields belonging to the indicated view will be returned. */
                view?: string;
            }): Request<GoogleAppsDriveLabelsV2Label>;
            /** -------------------------------------------------------------------------- ## Label APIs --------------------------------------------------------------- List Labels. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
                languageCode?: string;
                /** Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`. */
                minimumRole?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum number of Labels to return per page. Default: 50. Max: 200. */
                pageSize?: number;
                /** The token of the page to return. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Whether to include only published labels in the results. * When `true`, only the current published label revisions will be returned. Disabled labels will be included. Returned
                 * Label resource names will reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions will be returned, which may not by
                 * published. Returned Label resource names will not reference a specific revision (`labels/{id}`).
                 */
                publishedOnly?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer. */
                useAdminAccess?: boolean;
                /** When specified, only certain fields belonging to the indicated view will be returned. */
                view?: string;
            }): Request<GoogleAppsDriveLabelsV2ListLabelsResponse>;
        }

        const labels: LabelsResource;
    }
}
