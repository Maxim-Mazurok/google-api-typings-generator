/* Type definitions for non-npm package Oracle Database@Google Cloud API v1 0.0 */
// Project: https://cloud.google.com/oracle/database/docs
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://oracledatabase.googleapis.com/$discovery/rest?version=v1
// Revision: 20250226

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Oracle Database@Google Cloud API v1 */
  function load(
    urlOrObject: 'https://oracledatabase.googleapis.com/$discovery/rest?version=v1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'oracledatabase', version: 'v1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'oracledatabase',
    version: 'v1',
    callback: () => any,
  ): void;

  namespace oracledatabase {
    interface AllConnectionStrings {
      /** Output only. The database service provides the highest level of resources to each SQL statement. */
      high?: string;
      /** Output only. The database service provides the least level of resources to each SQL statement. */
      low?: string;
      /** Output only. The database service provides a lower level of resources to each SQL statement. */
      medium?: string;
    }
    interface AutonomousDatabase {
      /** Optional. The password for the default ADMIN user. */
      adminPassword?: string;
      /** Optional. The subnet CIDR range for the Autonmous Database. */
      cidr?: string;
      /** Output only. The date and time that the Autonomous Database was created. */
      createTime?: string;
      /** Optional. The name of the Autonomous Database. The database name must be unique in the project. The name must begin with a letter and can contain a maximum of 30 alphanumeric characters. */
      database?: string;
      /** Optional. The display name for the Autonomous Database. The name does not have to be unique within your project. */
      displayName?: string;
      /** Output only. The ID of the subscription entitlement associated with the Autonomous Database. */
      entitlementId?: string;
      /** Optional. The labels or tags associated with the Autonomous Database. */
      labels?: {[P in string]: string};
      /** Identifier. The name of the Autonomous Database resource in the following format: projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database} */
      name?: string;
      /** Optional. The name of the VPC network used by the Autonomous Database in the following format: projects/{project}/global/networks/{network} */
      network?: string;
      /** Optional. The properties of the Autonomous Database. */
      properties?: AutonomousDatabaseProperties;
    }
    interface AutonomousDatabaseApex {
      /** Output only. The Oracle APEX Application Development version. */
      apexVersion?: string;
      /** Output only. The Oracle REST Data Services (ORDS) version. */
      ordsVersion?: string;
    }
    interface AutonomousDatabaseBackup {
      /** Required. The name of the Autonomous Database resource for which the backup is being created. Format: projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database} */
      autonomousDatabase?: string;
      /** Optional. User friendly name for the Backup. The name does not have to be unique. */
      displayName?: string;
      /** Optional. labels or tags associated with the resource. */
      labels?: {[P in string]: string};
      /** Identifier. The name of the Autonomous Database Backup resource with the format: projects/{project}/locations/{region}/autonomousDatabaseBackups/{autonomous_database_backup} */
      name?: string;
      /** Optional. Various properties of the backup. */
      properties?: AutonomousDatabaseBackupProperties;
    }
    interface AutonomousDatabaseBackupProperties {
      /** Output only. Timestamp until when the backup will be available. */
      availableTillTime?: string;
      /** Output only. The OCID of the compartment. */
      compartmentId?: string;
      /** Output only. The quantity of data in the database, in terabytes. */
      databaseSizeTb?: number;
      /** Output only. A valid Oracle Database version for Autonomous Database. */
      dbVersion?: string;
      /** Output only. The date and time the backup completed. */
      endTime?: string;
      /** Output only. Indicates if the backup is automatic or user initiated. */
      isAutomaticBackup?: boolean;
      /** Output only. Indicates if the backup is long term backup. */
      isLongTermBackup?: boolean;
      /** Output only. Indicates if the backup can be used to restore the Autonomous Database. */
      isRestorable?: boolean;
      /** Optional. The OCID of the key store of Oracle Vault. */
      keyStoreId?: string;
      /** Optional. The wallet name for Oracle Key Vault. */
      keyStoreWallet?: string;
      /** Optional. The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations. */
      kmsKeyId?: string;
      /** Optional. The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances. */
      kmsKeyVersionId?: string;
      /** Output only. Additional information about the current lifecycle state. */
      lifecycleDetails?: string;
      /** Output only. The lifecycle state of the backup. */
      lifecycleState?: string;
      /** Output only. OCID of the Autonomous Database backup. https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle */
      ocid?: string;
      /** Optional. Retention period in days for the backup. */
      retentionPeriodDays?: number;
      /** Output only. The backup size in terabytes. */
      sizeTb?: number;
      /** Output only. The date and time the backup started. */
      startTime?: string;
      /** Output only. The type of the backup. */
      type?: string;
      /** Optional. The OCID of the vault. */
      vaultId?: string;
    }
    interface AutonomousDatabaseCharacterSet {
      /** Output only. The character set name for the Autonomous Database which is the ID in the resource name. */
      characterSet?: string;
      /** Output only. The character set type for the Autonomous Database. */
      characterSetType?: string;
      /** Identifier. The name of the Autonomous Database Character Set resource in the following format: projects/{project}/locations/{region}/autonomousDatabaseCharacterSets/{autonomous_database_character_set} */
      name?: string;
    }
    interface AutonomousDatabaseConnectionStrings {
      /** Output only. Returns all connection strings that can be used to connect to the Autonomous Database. */
      allConnectionStrings?: AllConnectionStrings;
      /** Output only. The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. */
      dedicated?: string;
      /** Output only. The database service provides the highest level of resources to each SQL statement. */
      high?: string;
      /** Output only. The database service provides the least level of resources to each SQL statement. */
      low?: string;
      /** Output only. The database service provides a lower level of resources to each SQL statement. */
      medium?: string;
      /** Output only. A list of connection string profiles to allow clients to group, filter, and select values based on the structured metadata. */
      profiles?: DatabaseConnectionStringProfile[];
    }
    interface AutonomousDatabaseConnectionUrls {
      /** Output only. Oracle Application Express (APEX) URL. */
      apexUri?: string;
      /** Output only. The URL of the Database Transforms for the Autonomous Database. */
      databaseTransformsUri?: string;
      /** Output only. The URL of the Graph Studio for the Autonomous Database. */
      graphStudioUri?: string;
      /** Output only. The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database. */
      machineLearningNotebookUri?: string;
      /** Output only. The URL of Machine Learning user management the Autonomous Database. */
      machineLearningUserManagementUri?: string;
      /** Output only. The URL of the MongoDB API for the Autonomous Database. */
      mongoDbUri?: string;
      /** Output only. The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database. */
      ordsUri?: string;
      /** Output only. The URL of the Oracle SQL Developer Web for the Autonomous Database. */
      sqlDevWebUri?: string;
    }
    interface AutonomousDatabaseProperties {
      /** Output only. The amount of storage currently being used for user and system data, in terabytes. */
      actualUsedDataStorageSizeTb?: number;
      /** Output only. The amount of storage currently allocated for the database tables and billed for, rounded up in terabytes. */
      allocatedStorageSizeTb?: number;
      /** Output only. The details for the Oracle APEX Application Development. */
      apexDetails?: AutonomousDatabaseApex;
      /** Output only. This field indicates the status of Data Guard and Access control for the Autonomous Database. The field's value is null if Data Guard is disabled or Access Control is disabled. The field's value is TRUE if both Data Guard and Access Control are enabled, and the Autonomous Database is using primary IP access control list (ACL) for standby. The field's value is FALSE if both Data Guard and Access Control are enabled, and the Autonomous Database is using a different IP access control list (ACL) for standby compared to primary. */
      arePrimaryAllowlistedIpsUsed?: boolean;
      /** Output only. The Autonomous Container Database OCID. */
      autonomousContainerDatabaseId?: string;
      /** Output only. The list of available Oracle Database upgrade versions for an Autonomous Database. */
      availableUpgradeVersions?: string[];
      /** Optional. The retention period for the Autonomous Database. This field is specified in days, can range from 1 day to 60 days, and has a default value of 60 days. */
      backupRetentionPeriodDays?: number;
      /** Optional. The character set for the Autonomous Database. The default is AL32UTF8. */
      characterSet?: string;
      /** Optional. The number of compute servers for the Autonomous Database. */
      computeCount?: number;
      /** Output only. The connection strings used to connect to an Autonomous Database. */
      connectionStrings?: AutonomousDatabaseConnectionStrings;
      /** Output only. The Oracle Connection URLs for an Autonomous Database. */
      connectionUrls?: AutonomousDatabaseConnectionUrls;
      /** Optional. The number of CPU cores to be made available to the database. */
      cpuCoreCount?: number;
      /** Optional. The list of customer contacts. */
      customerContacts?: CustomerContact[];
      /** Output only. The current state of database management for the Autonomous Database. */
      databaseManagementState?: string;
      /** Output only. The current state of the Data Safe registration for the Autonomous Database. */
      dataSafeState?: string;
      /** Optional. The size of the data stored in the database, in gigabytes. */
      dataStorageSizeGb?: number;
      /** Optional. The size of the data stored in the database, in terabytes. */
      dataStorageSizeTb?: number;
      /** Optional. The edition of the Autonomous Databases. */
      dbEdition?: string;
      /** Optional. The Oracle Database version for the Autonomous Database. */
      dbVersion?: string;
      /** Required. The workload type of the Autonomous Database. */
      dbWorkload?: string;
      /** Output only. This field indicates the number of seconds of data loss during a Data Guard failover. */
      failedDataRecoveryDuration?: string;
      /** Optional. This field indicates if auto scaling is enabled for the Autonomous Database CPU core count. */
      isAutoScalingEnabled?: boolean;
      /** Output only. This field indicates whether the Autonomous Database has local (in-region) Data Guard enabled. */
      isLocalDataGuardEnabled?: boolean;
      /** Optional. This field indicates if auto scaling is enabled for the Autonomous Database storage. */
      isStorageAutoScalingEnabled?: boolean;
      /** Required. The license type used for the Autonomous Database. */
      licenseType?: string;
      /** Output only. The details of the current lifestyle state of the Autonomous Database. */
      lifecycleDetails?: string;
      /** Output only. This field indicates the maximum data loss limit for an Autonomous Database, in seconds. */
      localAdgAutoFailoverMaxDataLossLimit?: number;
      /** Output only. This field indicates the local disaster recovery (DR) type of an Autonomous Database. */
      localDisasterRecoveryType?: string;
      /** Output only. The details of the Autonomous Data Guard standby database. */
      localStandbyDb?: AutonomousDatabaseStandbySummary;
      /** Output only. The date and time when maintenance will begin. */
      maintenanceBeginTime?: string;
      /** Output only. The date and time when maintenance will end. */
      maintenanceEndTime?: string;
      /** Optional. The maintenance schedule of the Autonomous Database. */
      maintenanceScheduleType?: string;
      /** Output only. The amount of memory enabled per ECPU, in gigabytes. */
      memoryPerOracleComputeUnitGbs?: number;
      /** Output only. The memory assigned to in-memory tables in an Autonomous Database. */
      memoryTableGbs?: number;
      /** Optional. This field specifies if the Autonomous Database requires mTLS connections. */
      mtlsConnectionRequired?: boolean;
      /** Optional. The national character set for the Autonomous Database. The default is AL16UTF16. */
      nCharacterSet?: string;
      /** Output only. The long term backup schedule of the Autonomous Database. */
      nextLongTermBackupTime?: string;
      /** Output only. OCID of the Autonomous Database. https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle */
      ocid?: string;
      /** Output only. The Oracle Cloud Infrastructure link for the Autonomous Database. */
      ociUrl?: string;
      /** Output only. This field indicates the current mode of the Autonomous Database. */
      openMode?: string;
      /** Output only. This field indicates the state of Operations Insights for the Autonomous Database. */
      operationsInsightsState?: string;
      /** Output only. The list of OCIDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. */
      peerDbIds?: string[];
      /** Output only. The permission level of the Autonomous Database. */
      permissionLevel?: string;
      /** Output only. The private endpoint for the Autonomous Database. */
      privateEndpoint?: string;
      /** Optional. The private endpoint IP address for the Autonomous Database. */
      privateEndpointIp?: string;
      /** Optional. The private endpoint label for the Autonomous Database. */
      privateEndpointLabel?: string;
      /** Output only. The refresh mode of the cloned Autonomous Database. */
      refreshableMode?: string;
      /** Output only. The refresh State of the clone. */
      refreshableState?: string;
      /** Output only. The Data Guard role of the Autonomous Database. */
      role?: string;
      /** Output only. The list and details of the scheduled operations of the Autonomous Database. */
      scheduledOperationDetails?: ScheduledOperationDetails[];
      /** Optional. The ID of the Oracle Cloud Infrastructure vault secret. */
      secretId?: string;
      /** Output only. The SQL Web Developer URL for the Autonomous Database. */
      sqlWebDeveloperUrl?: string;
      /** Output only. The current lifecycle state of the Autonomous Database. */
      state?: string;
      /** Output only. The list of available regions that can be used to create a clone for the Autonomous Database. */
      supportedCloneRegions?: string[];
      /** Output only. The storage space used by automatic backups of Autonomous Database, in gigabytes. */
      totalAutoBackupStorageSizeGbs?: number;
      /** Output only. The storage space used by Autonomous Database, in gigabytes. */
      usedDataStorageSizeTbs?: number;
      /** Optional. The ID of the Oracle Cloud Infrastructure vault. */
      vaultId?: string;
    }
    interface AutonomousDatabaseStandbySummary {
      /** Output only. The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database. */
      dataGuardRoleChangedTime?: string;
      /** Output only. The date and time the Disaster Recovery role was switched for the standby Autonomous Database. */
      disasterRecoveryRoleChangedTime?: string;
      /** Output only. The amount of time, in seconds, that the data of the standby database lags in comparison to the data of the primary database. */
      lagTimeDuration?: string;
      /** Output only. The additional details about the current lifecycle state of the Autonomous Database. */
      lifecycleDetails?: string;
      /** Output only. The current lifecycle state of the Autonomous Database. */
      state?: string;
    }
    interface AutonomousDbVersion {
      /** Output only. The Autonomous Database workload type. */
      dbWorkload?: string;
      /** Identifier. The name of the Autonomous Database Version resource with the format: projects/{project}/locations/{region}/autonomousDbVersions/{autonomous_db_version} */
      name?: string;
      /** Output only. An Oracle Database version for Autonomous Database. */
      version?: string;
      /** Output only. A URL that points to a detailed description of the Autonomous Database version. */
      workloadUri?: string;
    }
    interface CancelOperationRequest {}
    interface CloudAccountDetails {
      /** Output only. URL to create a new account and link. */
      accountCreationUri?: string;
      /** Output only. OCI account name. */
      cloudAccount?: string;
      /** Output only. OCI account home region. */
      cloudAccountHomeRegion?: string;
      /** Output only. URL to link an existing account. */
      linkExistingAccountUri?: string;
    }
    interface CloudExadataInfrastructure {
      /** Output only. The date and time that the Exadata Infrastructure was created. */
      createTime?: string;
      /** Optional. User friendly name for this resource. */
      displayName?: string;
      /** Output only. Entitlement ID of the private offer against which this infrastructure resource is provisioned. */
      entitlementId?: string;
      /** Optional. Google Cloud Platform location where Oracle Exadata is hosted. */
      gcpOracleZone?: string;
      /** Optional. Labels or tags associated with the resource. */
      labels?: {[P in string]: string};
      /** Identifier. The name of the Exadata Infrastructure resource with the format: projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure} */
      name?: string;
      /** Optional. Various properties of the infra. */
      properties?: CloudExadataInfrastructureProperties;
    }
    interface CloudExadataInfrastructureProperties {
      /** Output only. The requested number of additional storage servers activated for the Exadata Infrastructure. */
      activatedStorageCount?: number;
      /** Output only. The requested number of additional storage servers for the Exadata Infrastructure. */
      additionalStorageCount?: number;
      /** Output only. The available storage can be allocated to the Exadata Infrastructure resource, in gigabytes (GB). */
      availableStorageSizeGb?: number;
      /** Optional. The number of compute servers for the Exadata Infrastructure. */
      computeCount?: number;
      /** Output only. The number of enabled CPU cores. */
      cpuCount?: number;
      /** Optional. The list of customer contacts. */
      customerContacts?: CustomerContact[];
      /** Output only. Size, in terabytes, of the DATA disk group. */
      dataStorageSizeTb?: number;
      /** Output only. The local node storage allocated in GBs. */
      dbNodeStorageSizeGb?: number;
      /** Output only. The software version of the database servers (dom0) in the Exadata Infrastructure. */
      dbServerVersion?: string;
      /** Optional. Maintenance window for repair. */
      maintenanceWindow?: MaintenanceWindow;
      /** Output only. The total number of CPU cores available. */
      maxCpuCount?: number;
      /** Output only. The total available DATA disk group size. */
      maxDataStorageTb?: number;
      /** Output only. The total local node storage available in GBs. */
      maxDbNodeStorageSizeGb?: number;
      /** Output only. The total memory available in GBs. */
      maxMemoryGb?: number;
      /** Output only. The memory allocated in GBs. */
      memorySizeGb?: number;
      /** Output only. The monthly software version of the database servers (dom0) in the Exadata Infrastructure. Example: 20.1.15 */
      monthlyDbServerVersion?: string;
      /** Output only. The monthly software version of the storage servers (cells) in the Exadata Infrastructure. Example: 20.1.15 */
      monthlyStorageServerVersion?: string;
      /** Output only. The OCID of the next maintenance run. */
      nextMaintenanceRunId?: string;
      /** Output only. The time when the next maintenance run will occur. */
      nextMaintenanceRunTime?: string;
      /** Output only. The time when the next security maintenance run will occur. */
      nextSecurityMaintenanceRunTime?: string;
      /** Output only. OCID of created infra. https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle */
      ocid?: string;
      /** Output only. Deep link to the OCI console to view this resource. */
      ociUrl?: string;
      /** Required. The shape of the Exadata Infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance. */
      shape?: string;
      /** Output only. The current lifecycle state of the Exadata Infrastructure. */
      state?: string;
      /** Optional. The number of Cloud Exadata storage servers for the Exadata Infrastructure. */
      storageCount?: number;
      /** Output only. The software version of the storage servers (cells) in the Exadata Infrastructure. */
      storageServerVersion?: string;
      /** Optional. The total storage allocated to the Exadata Infrastructure resource, in gigabytes (GB). */
      totalStorageSizeGb?: number;
    }
    interface CloudVmCluster {
      /** Required. CIDR range of the backup subnet. */
      backupSubnetCidr?: string;
      /** Required. Network settings. CIDR to use for cluster IP allocation. */
      cidr?: string;
      /** Output only. The date and time that the VM cluster was created. */
      createTime?: string;
      /** Optional. User friendly name for this resource. */
      displayName?: string;
      /** Required. The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format: projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure} */
      exadataInfrastructure?: string;
      /** Output only. Google Cloud Platform location where Oracle Exadata is hosted. It is same as Google Cloud Platform Oracle zone of Exadata infrastructure. */
      gcpOracleZone?: string;
      /** Optional. Labels or tags associated with the VM Cluster. */
      labels?: {[P in string]: string};
      /** Identifier. The name of the VM Cluster resource with the format: projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster} */
      name?: string;
      /** Required. The name of the VPC network. Format: projects/{project}/global/networks/{network} */
      network?: string;
      /** Optional. Various properties of the VM Cluster. */
      properties?: CloudVmClusterProperties;
    }
    interface CloudVmClusterProperties {
      /** Optional. OCI Cluster name. */
      clusterName?: string;
      /** Output only. Compartment ID of cluster. */
      compartmentId?: string;
      /** Required. Number of enabled CPU cores. */
      cpuCoreCount?: number;
      /** Optional. The data disk group size to be allocated in TBs. */
      dataStorageSizeTb?: number;
      /** Optional. Local storage per VM. */
      dbNodeStorageSizeGb?: number;
      /** Optional. OCID of database servers. */
      dbServerOcids?: string[];
      /** Optional. Data collection options for diagnostics. */
      diagnosticsDataCollectionOptions?: DataCollectionOptions;
      /** Optional. The type of redundancy. */
      diskRedundancy?: string;
      /** Output only. DNS listener IP. */
      dnsListenerIp?: string;
      /** Output only. Parent DNS domain where SCAN DNS and hosts names are qualified. ex: ocispdelegated.ocisp10jvnet.oraclevcn.com */
      domain?: string;
      /** Optional. Grid Infrastructure Version. */
      giVersion?: string;
      /** Output only. host name without domain. format: "-" with some suffix. ex: sp2-yi0xq where "sp2" is the hostname_prefix. */
      hostname?: string;
      /** Optional. Prefix for VM cluster host names. */
      hostnamePrefix?: string;
      /** Required. License type of VM Cluster. */
      licenseType?: string;
      /** Optional. Use local backup. */
      localBackupEnabled?: boolean;
      /** Optional. Memory allocated in GBs. */
      memorySizeGb?: number;
      /** Optional. Number of database servers. */
      nodeCount?: number;
      /** Output only. Oracle Cloud Infrastructure ID of VM Cluster. */
      ocid?: string;
      /** Output only. Deep link to the OCI console to view this resource. */
      ociUrl?: string;
      /** Optional. OCPU count per VM. Minimum is 0.1. */
      ocpuCount?: number;
      /** Output only. SCAN DNS name. ex: sp2-yi0xq-scan.ocispdelegated.ocisp10jvnet.oraclevcn.com */
      scanDns?: string;
      /** Output only. OCID of scan DNS record. */
      scanDnsRecordId?: string;
      /** Output only. OCIDs of scan IPs. */
      scanIpIds?: string[];
      /** Output only. SCAN listener port - TCP */
      scanListenerPortTcp?: number;
      /** Output only. SCAN listener port - TLS */
      scanListenerPortTcpSsl?: number;
      /** Output only. Shape of VM Cluster. */
      shape?: string;
      /** Optional. Use exadata sparse snapshots. */
      sparseDiskgroupEnabled?: boolean;
      /** Optional. SSH public keys to be stored with cluster. */
      sshPublicKeys?: string[];
      /** Output only. State of the cluster. */
      state?: string;
      /** Output only. The storage allocation for the disk group, in gigabytes (GB). */
      storageSizeGb?: number;
      /** Optional. Operating system version of the image. */
      systemVersion?: string;
      /** Optional. Time zone of VM Cluster to set. Defaults to UTC if not specified. */
      timeZone?: TimeZone;
    }
    interface CustomerContact {
      /** Required. The email address used by Oracle to send notifications regarding databases and infrastructure. */
      email?: string;
    }
    interface DatabaseConnectionStringProfile {
      /** Output only. The current consumer group being used by the connection. */
      consumerGroup?: string;
      /** Output only. The display name for the database connection. */
      displayName?: string;
      /** Output only. The host name format being currently used in connection string. */
      hostFormat?: string;
      /** Output only. This field indicates if the connection string is regional and is only applicable for cross-region Data Guard. */
      isRegional?: boolean;
      /** Output only. The protocol being used by the connection. */
      protocol?: string;
      /** Output only. The current session mode of the connection. */
      sessionMode?: string;
      /** Output only. The syntax of the connection string. */
      syntaxFormat?: string;
      /** Output only. This field indicates the TLS authentication type of the connection. */
      tlsAuthentication?: string;
      /** Output only. The value of the connection string. */
      value?: string;
    }
    interface DataCollectionOptions {
      /** Optional. Indicates whether diagnostic collection is enabled for the VM cluster */
      diagnosticsEventsEnabled?: boolean;
      /** Optional. Indicates whether health monitoring is enabled for the VM cluster */
      healthMonitoringEnabled?: boolean;
      /** Optional. Indicates whether incident logs and trace collection are enabled for the VM cluster */
      incidentLogsEnabled?: boolean;
    }
    interface DbNode {
      /** Identifier. The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}/dbNodes/{db_node} */
      name?: string;
      /** Optional. Various properties of the database node. */
      properties?: DbNodeProperties;
    }
    interface DbNodeProperties {
      /** Optional. Local storage per database node. */
      dbNodeStorageSizeGb?: number;
      /** Optional. Database server OCID. */
      dbServerOcid?: string;
      /** Optional. DNS */
      hostname?: string;
      /** Memory allocated in GBs. */
      memorySizeGb?: number;
      /** Output only. OCID of database node. */
      ocid?: string;
      /** Optional. OCPU count per database node. */
      ocpuCount?: number;
      /** Output only. State of the database node. */
      state?: string;
      /** Total CPU core count of the database node. */
      totalCpuCoreCount?: number;
    }
    interface DbServer {
      /** Optional. User friendly name for this resource. */
      displayName?: string;
      /** Identifier. The name of the database server resource with the format: projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}/dbServers/{db_server} */
      name?: string;
      /** Optional. Various properties of the database server. */
      properties?: DbServerProperties;
    }
    interface DbServerProperties {
      /** Output only. OCID of database nodes associated with the database server. */
      dbNodeIds?: string[];
      /** Optional. Local storage per VM. */
      dbNodeStorageSizeGb?: number;
      /** Optional. Maximum local storage per VM. */
      maxDbNodeStorageSizeGb?: number;
      /** Optional. Maximum memory allocated in GBs. */
      maxMemorySizeGb?: number;
      /** Optional. Maximum OCPU count per database. */
      maxOcpuCount?: number;
      /** Optional. Memory allocated in GBs. */
      memorySizeGb?: number;
      /** Output only. OCID of database server. */
      ocid?: string;
      /** Optional. OCPU count per database. */
      ocpuCount?: number;
      /** Output only. State of the database server. */
      state?: string;
      /** Optional. Vm count per database. */
      vmCount?: number;
    }
    interface DbSystemShape {
      /** Optional. Number of cores per node. */
      availableCoreCountPerNode?: number;
      /** Optional. Storage per storage server in terabytes. */
      availableDataStorageTb?: number;
      /** Optional. Memory per database server node in gigabytes. */
      availableMemoryPerNodeGb?: number;
      /** Optional. Maximum number of database servers. */
      maxNodeCount?: number;
      /** Optional. Maximum number of storage servers. */
      maxStorageCount?: number;
      /** Optional. Minimum core count per node. */
      minCoreCountPerNode?: number;
      /** Optional. Minimum node storage per database server in gigabytes. */
      minDbNodeStoragePerNodeGb?: number;
      /** Optional. Minimum memory per node in gigabytes. */
      minMemoryPerNodeGb?: number;
      /** Optional. Minimum number of database servers. */
      minNodeCount?: number;
      /** Optional. Minimum number of storage servers. */
      minStorageCount?: number;
      /** Identifier. The name of the Database System Shape resource with the format: projects/{project}/locations/{region}/dbSystemShapes/{db_system_shape} */
      name?: string;
      /** Optional. shape */
      shape?: string;
    }
    interface Empty {}
    interface Entitlement {
      /** Details of the OCI Cloud Account. */
      cloudAccountDetails?: CloudAccountDetails;
      /** Output only. Google Cloud Marketplace order ID (aka entitlement ID) */
      entitlementId?: string;
      /** Identifier. The name of the Entitlement resource with the format: projects/{project}/locations/{region}/entitlements/{entitlement} */
      name?: string;
      /** Output only. Entitlement State. */
      state?: string;
    }
    interface GenerateAutonomousDatabaseWalletRequest {
      /** Optional. True when requesting regional connection strings in PDB connect info, applicable to cross-region Data Guard only. */
      isRegional?: boolean;
      /** Required. The password used to encrypt the keys inside the wallet. The password must be a minimum of 8 characters. */
      password?: string;
      /** Optional. The type of wallet generation for the Autonomous Database. The default value is SINGLE. */
      type?: string;
    }
    interface GenerateAutonomousDatabaseWalletResponse {
      /** Output only. The base64 encoded wallet files. */
      archiveContent?: string;
    }
    interface GiVersion {
      /** Identifier. The name of the Oracle Grid Infrastructure (GI) version resource with the format: projects/{project}/locations/{region}/giVersions/{gi_versions} */
      name?: string;
      /** Optional. version */
      version?: string;
    }
    interface ListAutonomousDatabaseBackupsResponse {
      /** The list of Autonomous Database Backups. */
      autonomousDatabaseBackups?: AutonomousDatabaseBackup[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListAutonomousDatabaseCharacterSetsResponse {
      /** The list of Autonomous Database Character Sets. */
      autonomousDatabaseCharacterSets?: AutonomousDatabaseCharacterSet[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListAutonomousDatabasesResponse {
      /** The list of Autonomous Databases. */
      autonomousDatabases?: AutonomousDatabase[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListAutonomousDbVersionsResponse {
      /** The list of Autonomous Database versions. */
      autonomousDbVersions?: AutonomousDbVersion[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListCloudExadataInfrastructuresResponse {
      /** The list of Exadata Infrastructures. */
      cloudExadataInfrastructures?: CloudExadataInfrastructure[];
      /** A token for fetching next page of response. */
      nextPageToken?: string;
    }
    interface ListCloudVmClustersResponse {
      /** The list of VM Clusters. */
      cloudVmClusters?: CloudVmCluster[];
      /** A token to fetch the next page of results. */
      nextPageToken?: string;
    }
    interface ListDbNodesResponse {
      /** The list of DB Nodes */
      dbNodes?: DbNode[];
      /** A token identifying a page of results the node should return. */
      nextPageToken?: string;
    }
    interface ListDbServersResponse {
      /** The list of database servers. */
      dbServers?: DbServer[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListDbSystemShapesResponse {
      /** The list of Database System shapes. */
      dbSystemShapes?: DbSystemShape[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListEntitlementsResponse {
      /** The list of Entitlements */
      entitlements?: Entitlement[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListGiVersionsResponse {
      /** The list of Oracle Grid Infrastructure (GI) versions. */
      giVersions?: GiVersion[];
      /** A token identifying a page of results the server should return. */
      nextPageToken?: string;
    }
    interface ListLocationsResponse {
      /** A list of locations that matches the specified filter in the request. */
      locations?: Location[];
      /** The standard List next-page token. */
      nextPageToken?: string;
    }
    interface ListOperationsResponse {
      /** The standard List next-page token. */
      nextPageToken?: string;
      /** A list of operations that matches the specified filter in the request. */
      operations?: Operation[];
    }
    interface Location {
      /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
      displayName?: string;
      /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
      labels?: {[P in string]: string};
      /** The canonical id for this location. For example: `"us-east1"`. */
      locationId?: string;
      /** Service-specific metadata. For example the available capacity at the given location. */
      metadata?: {[P in string]: any};
      /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
      name?: string;
    }
    interface LocationMetadata {
      /** Output only. Google Cloud Platform Oracle zones in a location. */
      gcpOracleZones?: string[];
    }
    interface MaintenanceWindow {
      /** Optional. Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive). */
      customActionTimeoutMins?: number;
      /** Optional. Days during the week when maintenance should be performed. */
      daysOfWeek?: string[];
      /** Optional. The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are: 0 - represents time slot 0:00 - 3:59 UTC 4 - represents time slot 4:00 - 7:59 UTC 8 - represents time slot 8:00 - 11:59 UTC 12 - represents time slot 12:00 - 15:59 UTC 16 - represents time slot 16:00 - 19:59 UTC 20 - represents time slot 20:00 - 23:59 UTC */
      hoursOfDay?: number[];
      /** Optional. If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations. */
      isCustomActionTimeoutEnabled?: boolean;
      /** Optional. Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. */
      leadTimeWeek?: number;
      /** Optional. Months during the year when maintenance should be performed. */
      months?: string[];
      /** Optional. Cloud CloudExadataInfrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING. */
      patchingMode?: string;
      /** Optional. The maintenance window scheduling preference. */
      preference?: string;
      /** Optional. Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. */
      weeksOfMonth?: number[];
    }
    interface Operation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: Status;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface OperationMetadata {
      /** Output only. API version used to start the operation. */
      apiVersion?: string;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. An estimated percentage of the operation that has been completed at a given moment of time, between 0 and 100. */
      percentComplete?: number;
      /** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
      requestedCancellation?: boolean;
      /** Output only. The status of the operation. */
      statusMessage?: string;
      /** Output only. Server-defined resource path for the target of the operation. */
      target?: string;
      /** Output only. Name of the verb executed by the operation. */
      verb?: string;
    }
    interface RestoreAutonomousDatabaseRequest {
      /** Required. The time and date to restore the database to. */
      restoreTime?: string;
    }
    interface ScheduledOperationDetails {
      /** Output only. Day of week. */
      dayOfWeek?: string;
      /** Output only. Auto start time. */
      startTime?: TimeOfDay;
      /** Output only. Auto stop time. */
      stopTime?: TimeOfDay;
    }
    interface Status {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface TimeOfDay {
      /** Hours of a day in 24 hour format. Must be greater than or equal to 0 and typically must be less than or equal to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
      hours?: number;
      /** Minutes of an hour. Must be greater than or equal to 0 and less than or equal to 59. */
      minutes?: number;
      /** Fractions of seconds, in nanoseconds. Must be greater than or equal to 0 and less than or equal to 999,999,999. */
      nanos?: number;
      /** Seconds of a minute. Must be greater than or equal to 0 and typically must be less than or equal to 59. An API may allow the value 60 if it allows leap-seconds. */
      seconds?: number;
    }
    interface TimeZone {
      /** IANA Time Zone Database time zone. For example "America/New_York". */
      id?: string;
      /** Optional. IANA Time Zone Database version number. For example "2019a". */
      version?: string;
    }
    interface AutonomousDatabaseBackupsResource {
      /** Lists the long-term and automatic backups of an Autonomous Database. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression for filtering the results of the request. Only the **autonomous_database_id** field is supported in the following format: `autonomous_database_id="{autonomous_database_id}"`. The accepted values must be a valid Autonomous Database ID, limited to the naming restrictions of the ID: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$). The ID must start with a letter, end with a letter or a number, and be a maximum of 63 characters. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Backups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for ListAutonomousDatabaseBackups in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListAutonomousDatabaseBackupsResponse>;
    }
    interface AutonomousDatabaseCharacterSetsResource {
      /** Lists Autonomous Database Character Sets in a given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression for filtering the results of the request. Only the **character_set_type** field is supported in the following format: `character_set_type="{characterSetType}"`. Accepted values include `DATABASE` and `NATIONAL`. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Character Sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for the Autonomous Database in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListAutonomousDatabaseCharacterSetsResponse>;
    }
    interface AutonomousDatabasesResource {
      /** Creates a new Autonomous Database in a given project and location. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Required. The ID of the Autonomous Database to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
        autonomousDatabaseId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The name of the parent in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: AutonomousDatabase;
      }): Request<Operation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Required. The ID of the Autonomous Database to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
          autonomousDatabaseId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The name of the parent in the following format: projects/{project}/locations/{location}. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
          requestId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: AutonomousDatabase,
      ): Request<Operation>;
      /** Deletes a single Autonomous Database. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the resource in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Generates a wallet for an Autonomous Database. */
      generateWallet(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Autonomous Database in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GenerateAutonomousDatabaseWalletRequest;
      }): Request<GenerateAutonomousDatabaseWalletResponse>;
      generateWallet(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the Autonomous Database in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GenerateAutonomousDatabaseWalletRequest,
      ): Request<GenerateAutonomousDatabaseWalletResponse>;
      /** Gets the details of a single Autonomous Database. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Autonomous Database in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<AutonomousDatabase>;
      /** Lists the Autonomous Databases in a given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression for filtering the results of the request. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. An expression for ordering the results of the request. */
        orderBy?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous Database will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for the Autonomous Database in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListAutonomousDatabasesResponse>;
      /** Restores a single Autonomous Database. */
      restore(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Autonomous Database in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: RestoreAutonomousDatabaseRequest;
      }): Request<Operation>;
      restore(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the Autonomous Database in the following format: projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: RestoreAutonomousDatabaseRequest,
      ): Request<Operation>;
    }
    interface AutonomousDbVersionsResource {
      /** Lists all the available Autonomous Database versions for a project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Versions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for the Autonomous Database in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListAutonomousDbVersionsResponse>;
    }
    interface DbServersResource {
      /** Lists the database servers of an Exadata Infrastructure instance. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 db servers will be returned. The maximum value is 1000; values above 1000 will be reset to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for database server in the following format: projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListDbServersResponse>;
    }
    interface CloudExadataInfrastructuresResource {
      /** Creates a new Exadata Infrastructure in a given project and location. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID of the Exadata Infrastructure to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
        cloudExadataInfrastructureId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent value for CloudExadataInfrastructure in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: CloudExadataInfrastructure;
      }): Request<Operation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID of the Exadata Infrastructure to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
          cloudExadataInfrastructureId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent value for CloudExadataInfrastructure in the following format: projects/{project}/locations/{location}. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
          requestId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: CloudExadataInfrastructure,
      ): Request<Operation>;
      /** Deletes a single Exadata Infrastructure. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all VM clusters for this Exadata Infrastructure will be deleted. An Exadata Infrastructure can only be deleted once all its VM clusters have been deleted. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Cloud Exadata Infrastructure in the following format: projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Gets details of a single Exadata Infrastructure. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Cloud Exadata Infrastructure in the following format: projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<CloudExadataInfrastructure>;
      /** Lists Exadata Infrastructures in a given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 Exadata infrastructures will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for CloudExadataInfrastructure in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListCloudExadataInfrastructuresResponse>;
      dbServers: DbServersResource;
    }
    interface DbNodesResource {
      /** Lists the database nodes of a VM Cluster. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 db nodes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the node should return. */
        pageToken?: string;
        /** Required. The parent value for database node in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListDbNodesResponse>;
    }
    interface CloudVmClustersResource {
      /** Creates a new VM Cluster in a given project and location. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID of the VM Cluster to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
        cloudVmClusterId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The name of the parent in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: CloudVmCluster;
      }): Request<Operation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID of the VM Cluster to create. This value is restricted to (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value must start with a letter and end with a letter or a number. */
          cloudVmClusterId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The name of the parent in the following format: projects/{project}/locations/{location}. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
          requestId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: CloudVmCluster,
      ): Request<Operation>;
      /** Deletes a single VM Cluster. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, all child resources for the VM Cluster will be deleted. A VM Cluster can only be deleted once all its child resources have been deleted. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Cloud VM Cluster in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. An optional ID to identify the request. This value is used to identify duplicate requests. If you make a request with the same request ID and the original request is still in progress or completed, the server ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000). */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Gets details of a single VM Cluster. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Cloud VM Cluster in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<CloudVmCluster>;
      /** Lists the VM Clusters in a given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression for filtering the results of the request. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The number of VM clusters to return. If unspecified, at most 50 VM clusters will be returned. The maximum value is 1,000. */
        pageSize?: number;
        /** Optional. A token identifying the page of results the server returns. */
        pageToken?: string;
        /** Required. The name of the parent in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListCloudVmClustersResponse>;
      dbNodes: DbNodesResource;
    }
    interface DbSystemShapesResource {
      /** Lists the database system shapes available for the project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, at most 50 database system shapes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for Database System Shapes in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListDbSystemShapesResponse>;
    }
    interface EntitlementsResource {
      /** Lists the entitlements in a given project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 entitlements will be returned. The maximum value is 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for the entitlement in the following format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListEntitlementsResponse>;
    }
    interface GiVersionsResource {
      /** Lists all the valid Oracle Grid Infrastructure (GI) versions for the given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 Oracle Grid Infrastructure (GI) versions will be returned. The maximum value is 1000; values above 1000 will be reset to 1000. */
        pageSize?: number;
        /** Optional. A token identifying a page of results the server should return. */
        pageToken?: string;
        /** Required. The parent value for Grid Infrastructure Version in the following format: Format: projects/{project}/locations/{location}. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListGiVersionsResponse>;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: CancelOperationRequest;
      }): Request<{}>;
      cancel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the operation resource to be cancelled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: CancelOperationRequest,
      ): Request<{}>;
      /** Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be deleted. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListOperationsResponse>;
    }
    interface LocationsResource {
      /** Gets information about a location. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name for the location. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Location>;
      /** Lists information about the supported locations for this service. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160). */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource that owns the locations collection, if applicable. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. If not set, the service selects a default. */
        pageSize?: number;
        /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListLocationsResponse>;
      autonomousDatabaseBackups: AutonomousDatabaseBackupsResource;
      autonomousDatabaseCharacterSets: AutonomousDatabaseCharacterSetsResource;
      autonomousDatabases: AutonomousDatabasesResource;
      autonomousDbVersions: AutonomousDbVersionsResource;
      cloudExadataInfrastructures: CloudExadataInfrastructuresResource;
      cloudVmClusters: CloudVmClustersResource;
      dbSystemShapes: DbSystemShapesResource;
      entitlements: EntitlementsResource;
      giVersions: GiVersionsResource;
      operations: OperationsResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const projects: ProjectsResource;
  }
}
