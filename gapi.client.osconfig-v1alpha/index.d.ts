/* Type definitions for non-npm package OS Config API v1alpha 0.0 */
// Project: https://cloud.google.com/compute/docs/osconfig/rest
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://osconfig.googleapis.com/$discovery/rest?version=v1alpha
// Revision: 20240728

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load OS Config API v1alpha */
  function load(
    urlOrObject: 'https://osconfig.googleapis.com/$discovery/rest?version=v1alpha'
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'osconfig', version: 'v1alpha'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'osconfig',
    version: 'v1alpha',
    callback: () => any
  ): void;

  namespace osconfig {
    interface CancelOperationRequest {}
    interface CVSSv3 {
      /** This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability. */
      attackComplexity?: string;
      /** This metric reflects the context by which vulnerability exploitation is possible. */
      attackVector?: string;
      /** This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability. */
      availabilityImpact?: string;
      /** The base score is a function of the base metric scores. https://www.first.org/cvss/specification-document#Base-Metrics */
      baseScore?: number;
      /** This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability. */
      confidentialityImpact?: string;
      /** The Exploitability sub-score equation is derived from the Base Exploitability metrics. https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics */
      exploitabilityScore?: number;
      /** The Impact sub-score equation is derived from the Base Impact metrics. */
      impactScore?: number;
      /** This metric measures the impact to integrity of a successfully exploited vulnerability. */
      integrityImpact?: string;
      /** This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability. */
      privilegesRequired?: string;
      /** The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope. */
      scope?: string;
      /** This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component. */
      userInteraction?: string;
    }
    interface Date {
      /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
      day?: number;
      /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
      month?: number;
      /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
      year?: number;
    }
    interface Empty {}
    interface FixedOrPercent {
      /** Specifies a fixed value. */
      fixed?: number;
      /** Specifies the relative value defined as a percentage, which will be multiplied by a reference value. */
      percent?: number;
    }
    interface GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata {
      /** The OS policy assignment API method. */
      apiMethod?: string;
      /** Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}` */
      osPolicyAssignment?: string;
      /** Rollout start time */
      rolloutStartTime?: string;
      /** State of the rollout */
      rolloutState?: string;
      /** Rollout update time */
      rolloutUpdateTime?: string;
    }
    interface InstanceOSPoliciesCompliance {
      /** Output only. Detailed compliance state of the VM. This field is populated only when compliance state is `UNKNOWN`. It may contain one of the following values: * `no-compliance-data`: Compliance data is not available for this VM. * `no-agent-detected`: OS Config agent is not detected for this VM. * `config-not-supported-by-agent`: The version of the OS Config agent running on this VM does not support configuration management. * `inactive`: VM is not running. * `internal-service-errors`: There were internal service errors encountered while enforcing compliance. * `agent-errors`: OS config agent encountered errors while enforcing compliance. */
      detailedState?: string;
      /** Output only. The reason for the `detailed_state` of the VM (if any). */
      detailedStateReason?: string;
      /** Output only. The Compute Engine VM instance name. */
      instance?: string;
      /** Output only. Timestamp of the last compliance check for the VM. */
      lastComplianceCheckTime?: string;
      /** Output only. Unique identifier for the last compliance run. This id will be logged by the OS config agent during a compliance run and can be used for debugging and tracing purpose. */
      lastComplianceRunId?: string;
      /** Output only. The `InstanceOSPoliciesCompliance` API resource name. Format: `projects/{project_number}/locations/{location}/instanceOSPoliciesCompliances/{instance_id}` */
      name?: string;
      /** Output only. Compliance data for each `OSPolicy` that is applied to the VM. */
      osPolicyCompliances?: InstanceOSPoliciesComplianceOSPolicyCompliance[];
      /** Output only. Compliance state of the VM. */
      state?: string;
    }
    interface InstanceOSPoliciesComplianceOSPolicyCompliance {
      /** Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}` */
      osPolicyAssignment?: string;
      /** The OS policy id */
      osPolicyId?: string;
      /** Compliance data for each `OSPolicyResource` that is applied to the VM. */
      osPolicyResourceCompliances?: OSPolicyResourceCompliance[];
      /** Compliance state of the OS policy. */
      state?: string;
    }
    interface Inventory {
      /** Output only. Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version. */
      items?: {[P in string]: InventoryItem};
      /** Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory` */
      name?: string;
      /** Output only. Base level operating system information for the VM. */
      osInfo?: InventoryOsInfo;
      /** Output only. Timestamp of the last reported inventory for the VM. */
      updateTime?: string;
    }
    interface InventoryItem {
      /** Software package available to be installed on the VM instance. */
      availablePackage?: InventorySoftwarePackage;
      /** When this inventory item was first detected. */
      createTime?: string;
      /** Identifier for this item, unique across items for this VM. */
      id?: string;
      /** Software package present on the VM instance. */
      installedPackage?: InventorySoftwarePackage;
      /** The origin of this inventory item. */
      originType?: string;
      /** The specific type of inventory, correlating to its specific details. */
      type?: string;
      /** When this inventory item was last modified. */
      updateTime?: string;
    }
    interface InventoryOsInfo {
      /** The system architecture of the operating system. */
      architecture?: string;
      /** The VM hostname. */
      hostname?: string;
      /** The kernel release of the operating system. */
      kernelRelease?: string;
      /** The kernel version of the operating system. */
      kernelVersion?: string;
      /** The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'. */
      longName?: string;
      /** The current version of the OS Config agent running on the VM. */
      osconfigAgentVersion?: string;
      /** The operating system short name. For example, 'windows' or 'debian'. */
      shortName?: string;
      /** The version of the operating system. */
      version?: string;
    }
    interface InventorySoftwarePackage {
      /** Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt. */
      aptPackage?: InventoryVersionedPackage;
      /** Details of a COS package. */
      cosPackage?: InventoryVersionedPackage;
      /** Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet. */
      googetPackage?: InventoryVersionedPackage;
      /** Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering. */
      qfePackage?: InventoryWindowsQuickFixEngineeringPackage;
      /** Details of Windows Application. */
      windowsApplication?: InventoryWindowsApplication;
      /** Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update. */
      wuaPackage?: InventoryWindowsUpdatePackage;
      /** Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum. */
      yumPackage?: InventoryVersionedPackage;
      /** Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual. */
      zypperPackage?: InventoryVersionedPackage;
      /** Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual. */
      zypperPatch?: InventoryZypperPatch;
    }
    interface InventoryVersionedPackage {
      /** The system architecture this package is intended for. */
      architecture?: string;
      /** The name of the package. */
      packageName?: string;
      /** The version of the package. */
      version?: string;
    }
    interface InventoryWindowsApplication {
      /** The name of the application or product. */
      displayName?: string;
      /** The version of the product or application in string format. */
      displayVersion?: string;
      /** The internet address for technical support. */
      helpLink?: string;
      /** The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the command-line option is used to repair the product. */
      installDate?: Date;
      /** The name of the manufacturer for the product or application. */
      publisher?: string;
    }
    interface InventoryWindowsQuickFixEngineeringPackage {
      /** A short textual description of the QFE update. */
      caption?: string;
      /** A textual description of the QFE update. */
      description?: string;
      /** Unique identifier associated with a particular QFE update. */
      hotFixId?: string;
      /** Date that the QFE update was installed. Mapped from installed_on field. */
      installTime?: string;
    }
    interface InventoryWindowsUpdatePackage {
      /** The categories that are associated with this update package. */
      categories?: InventoryWindowsUpdatePackageWindowsUpdateCategory[];
      /** The localized description of the update package. */
      description?: string;
      /** A collection of Microsoft Knowledge Base article IDs that are associated with the update package. */
      kbArticleIds?: string[];
      /** The last published date of the update, in (UTC) date and time. */
      lastDeploymentChangeTime?: string;
      /** A collection of URLs that provide more information about the update package. */
      moreInfoUrls?: string[];
      /** The revision number of this update package. */
      revisionNumber?: number;
      /** A hyperlink to the language-specific support information for the update. */
      supportUrl?: string;
      /** The localized title of the update package. */
      title?: string;
      /** Gets the identifier of an update package. Stays the same across revisions. */
      updateId?: string;
    }
    interface InventoryWindowsUpdatePackageWindowsUpdateCategory {
      /** The identifier of the windows update category. */
      id?: string;
      /** The name of the windows update category. */
      name?: string;
    }
    interface InventoryZypperPatch {
      /** The category of the patch. */
      category?: string;
      /** The name of the patch. */
      patchName?: string;
      /** The severity specified for this patch */
      severity?: string;
      /** Any summary information provided about this patch. */
      summary?: string;
    }
    interface ListInstanceOSPoliciesCompliancesResponse {
      /** List of instance OS policies compliance objects. */
      instanceOsPoliciesCompliances?: InstanceOSPoliciesCompliance[];
      /** The pagination token to retrieve the next page of instance OS policies compliance objects. */
      nextPageToken?: string;
    }
    interface ListInventoriesResponse {
      /** List of inventory objects. */
      inventories?: Inventory[];
      /** The pagination token to retrieve the next page of inventory objects. */
      nextPageToken?: string;
    }
    interface ListOSPolicyAssignmentReportsResponse {
      /** The pagination token to retrieve the next page of OS policy assignment report objects. */
      nextPageToken?: string;
      /** List of OS policy assignment reports. */
      osPolicyAssignmentReports?: OSPolicyAssignmentReport[];
    }
    interface ListOSPolicyAssignmentRevisionsResponse {
      /** The pagination token to retrieve the next page of OS policy assignment revisions. */
      nextPageToken?: string;
      /** The OS policy assignment revisions */
      osPolicyAssignments?: OSPolicyAssignment[];
    }
    interface ListOSPolicyAssignmentsResponse {
      /** The pagination token to retrieve the next page of OS policy assignments. */
      nextPageToken?: string;
      /** The list of assignments */
      osPolicyAssignments?: OSPolicyAssignment[];
    }
    interface ListVulnerabilityReportsResponse {
      /** The pagination token to retrieve the next page of vulnerabilityReports object. */
      nextPageToken?: string;
      /** List of vulnerabilityReport objects. */
      vulnerabilityReports?: VulnerabilityReport[];
    }
    interface Operation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: Status;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface OSPolicy {
      /** This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce. */
      allowNoResourceGroupMatch?: boolean;
      /** Policy description. Length of the description is limited to 1024 characters. */
      description?: string;
      /** Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment. */
      id?: string;
      /** Required. Policy mode */
      mode?: string;
      /** Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match` */
      resourceGroups?: OSPolicyResourceGroup[];
    }
    interface OSPolicyAssignment {
      /** Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field. */
      baseline?: boolean;
      /** Output only. Indicates that this revision deletes the OS policy assignment. */
      deleted?: boolean;
      /** OS policy assignment description. Length of the description is limited to 1024 characters. */
      description?: string;
      /** The etag for this OS policy assignment. If this is provided on update, it must match the server's etag. */
      etag?: string;
      /** Required. Filter to select VMs. */
      instanceFilter?: OSPolicyAssignmentInstanceFilter;
      /** Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment. */
      name?: string;
      /** Required. List of OS policies to be applied to the VMs. */
      osPolicies?: OSPolicy[];
      /** Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING */
      reconciling?: boolean;
      /** Output only. The timestamp that the revision was created. */
      revisionCreateTime?: string;
      /** Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment */
      revisionId?: string;
      /** Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted. */
      rollout?: OSPolicyAssignmentRollout;
      /** Output only. OS policy assignment rollout state */
      rolloutState?: string;
      /** Output only. Server generated unique id for the OS policy assignment resource. */
      uid?: string;
    }
    interface OSPolicyAssignmentInstanceFilter {
      /** Target all VMs in the project. If true, no other criteria is permitted. */
      all?: boolean;
      /** List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM. */
      exclusionLabels?: OSPolicyAssignmentLabelSet[];
      /** List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM. */
      inclusionLabels?: OSPolicyAssignmentLabelSet[];
      /** List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories. */
      inventories?: OSPolicyAssignmentInstanceFilterInventory[];
      /** Deprecated. Use the `inventories` field instead. A VM is selected if it's OS short name matches with any of the values provided in this list. */
      osShortNames?: string[];
    }
    interface OSPolicyAssignmentInstanceFilterInventory {
      /** Required. The OS short name */
      osShortName?: string;
      /** The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions. */
      osVersion?: string;
    }
    interface OSPolicyAssignmentLabelSet {
      /** Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected. */
      labels?: {[P in string]: string};
    }
    interface OSPolicyAssignmentOperationMetadata {
      /** The OS policy assignment API method. */
      apiMethod?: string;
      /** Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}` */
      osPolicyAssignment?: string;
      /** Rollout start time */
      rolloutStartTime?: string;
      /** State of the rollout */
      rolloutState?: string;
      /** Rollout update time */
      rolloutUpdateTime?: string;
    }
    interface OSPolicyAssignmentReport {
      /** The Compute Engine VM instance name. */
      instance?: string;
      /** Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs. */
      lastRunId?: string;
      /** The `OSPolicyAssignmentReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report` */
      name?: string;
      /** Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}` */
      osPolicyAssignment?: string;
      /** Compliance data for each `OSPolicy` that is applied to the VM. */
      osPolicyCompliances?: OSPolicyAssignmentReportOSPolicyCompliance[];
      /** Timestamp for when the report was last generated. */
      updateTime?: string;
    }
    interface OSPolicyAssignmentReportOSPolicyCompliance {
      /** The compliance state of the OS policy. */
      complianceState?: string;
      /** The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy. * `os-policy-execution-pending`: OS policy was assigned to the given VM, but was not executed yet. Typically this is a transient condition that will go away after the next policy execution cycle. */
      complianceStateReason?: string;
      /** The OS policy id */
      osPolicyId?: string;
      /** Compliance data for each resource within the policy that is applied to the VM. */
      osPolicyResourceCompliances?: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance[];
    }
    interface OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance {
      /** The compliance state of the resource. */
      complianceState?: string;
      /** A reason for the resource to be in the given compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. The following values are supported when `compliance_state == UNKNOWN` * `execution-errors`: Errors were encountered by the agent while executing the resource and the compliance state couldn't be determined. * `execution-skipped-by-agent`: Resource execution was skipped by the agent because errors were encountered while executing prior resources in the OS policy. * `os-policy-execution-attempt-failed`: The execution of the OS policy containing this resource failed and the compliance state couldn't be determined. * `os-policy-execution-pending`: OS policy that owns this resource was assigned to the given VM, but was not executed yet. */
      complianceStateReason?: string;
      /** Ordered list of configuration completed by the agent for the OS policy resource. */
      configSteps?: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep[];
      /** ExecResource specific output. */
      execResourceOutput?: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput;
      /** The ID of the OS policy resource. */
      osPolicyResourceId?: string;
    }
    interface OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput {
      /** Output from enforcement phase output file (if run). Output size is limited to 100K bytes. */
      enforcementOutput?: string;
    }
    interface OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep {
      /** An error message recorded during the execution of this step. Only populated if errors were encountered during this step execution. */
      errorMessage?: string;
      /** Configuration step type. */
      type?: string;
    }
    interface OSPolicyAssignmentRollout {
      /** Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment. */
      disruptionBudget?: FixedOrPercent;
      /** Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied. */
      minWaitDuration?: string;
    }
    interface OSPolicyInventoryFilter {
      /** Required. The OS short name */
      osShortName?: string;
      /** The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions. */
      osVersion?: string;
    }
    interface OSPolicyOSFilter {
      /** This should match OS short name emitted by the OS inventory agent. An empty value matches any OS. */
      osShortName?: string;
      /** This value should match the version emitted by the OS inventory agent. Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` */
      osVersion?: string;
    }
    interface OSPolicyResource {
      /** Exec resource */
      exec?: OSPolicyResourceExecResource;
      /** File resource */
      file?: OSPolicyResourceFileResource;
      /** Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy. */
      id?: string;
      /** Package resource */
      pkg?: OSPolicyResourcePackageResource;
      /** Package repository resource */
      repository?: OSPolicyResourceRepositoryResource;
    }
    interface OSPolicyResourceCompliance {
      /** Ordered list of configuration steps taken by the agent for the OS policy resource. */
      configSteps?: OSPolicyResourceConfigStep[];
      /** ExecResource specific output. */
      execResourceOutput?: OSPolicyResourceComplianceExecResourceOutput;
      /** The id of the OS policy resource. */
      osPolicyResourceId?: string;
      /** Compliance state of the OS policy resource. */
      state?: string;
    }
    interface OSPolicyResourceComplianceExecResourceOutput {
      /** Output from Enforcement phase output file (if run). Output size is limited to 100K bytes. */
      enforcementOutput?: string;
    }
    interface OSPolicyResourceConfigStep {
      /** An error message recorded during the execution of this step. Only populated when outcome is FAILED. */
      errorMessage?: string;
      /** Outcome of the configuration step. */
      outcome?: string;
      /** Configuration step type. */
      type?: string;
    }
    interface OSPolicyResourceExecResource {
      /** What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce. */
      enforce?: OSPolicyResourceExecResourceExec;
      /** Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate. */
      validate?: OSPolicyResourceExecResourceExec;
    }
    interface OSPolicyResourceExecResourceExec {
      /** Optional arguments to pass to the source during execution. */
      args?: string[];
      /** A remote or local file. */
      file?: OSPolicyResourceFile;
      /** Required. The script interpreter to use. */
      interpreter?: string;
      /** Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes. */
      outputFilePath?: string;
      /** An inline script. The size of the script is limited to 32KiB. */
      script?: string;
    }
    interface OSPolicyResourceFile {
      /** Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified. */
      allowInsecure?: boolean;
      /** A Cloud Storage object. */
      gcs?: OSPolicyResourceFileGcs;
      /** A local path within the VM to use. */
      localPath?: string;
      /** A generic remote file. */
      remote?: OSPolicyResourceFileRemote;
    }
    interface OSPolicyResourceFileGcs {
      /** Required. Bucket of the Cloud Storage object. */
      bucket?: string;
      /** Generation number of the Cloud Storage object. */
      generation?: string;
      /** Required. Name of the Cloud Storage object. */
      object?: string;
    }
    interface OSPolicyResourceFileRemote {
      /** SHA256 checksum of the remote file. */
      sha256Checksum?: string;
      /** Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`. */
      uri?: string;
    }
    interface OSPolicyResourceFileResource {
      /** A a file with this content. The size of the content is limited to 32KiB. */
      content?: string;
      /** A remote or local source. */
      file?: OSPolicyResourceFile;
      /** Required. The absolute path of the file within the VM. */
      path?: string;
      /** Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4 */
      permissions?: string;
      /** Required. Desired state of the file. */
      state?: string;
    }
    interface OSPolicyResourceGroup {
      /** List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally. */
      inventoryFilters?: OSPolicyInventoryFilter[];
      /** Deprecated. Use the `inventory_filters` field instead. Used to specify the OS filter for a resource group */
      osFilter?: OSPolicyOSFilter;
      /** Required. List of resources configured for this resource group. The resources are executed in the exact order specified here. */
      resources?: OSPolicyResource[];
    }
    interface OSPolicyResourcePackageResource {
      /** A package managed by Apt. */
      apt?: OSPolicyResourcePackageResourceAPT;
      /** A deb package file. */
      deb?: OSPolicyResourcePackageResourceDeb;
      /** Required. The desired state the agent should maintain for this package. */
      desiredState?: string;
      /** A package managed by GooGet. */
      googet?: OSPolicyResourcePackageResourceGooGet;
      /** An MSI package. */
      msi?: OSPolicyResourcePackageResourceMSI;
      /** An rpm package file. */
      rpm?: OSPolicyResourcePackageResourceRPM;
      /** A package managed by YUM. */
      yum?: OSPolicyResourcePackageResourceYUM;
      /** A package managed by Zypper. */
      zypper?: OSPolicyResourcePackageResourceZypper;
    }
    interface OSPolicyResourcePackageResourceAPT {
      /** Required. Package name. */
      name?: string;
    }
    interface OSPolicyResourcePackageResourceDeb {
      /** Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb` */
      pullDeps?: boolean;
      /** Required. A deb package. */
      source?: OSPolicyResourceFile;
    }
    interface OSPolicyResourcePackageResourceGooGet {
      /** Required. Package name. */
      name?: string;
    }
    interface OSPolicyResourcePackageResourceMSI {
      /** Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`. */
      properties?: string[];
      /** Required. The MSI package. */
      source?: OSPolicyResourceFile;
    }
    interface OSPolicyResourcePackageResourceRPM {
      /** Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm` */
      pullDeps?: boolean;
      /** Required. An rpm package. */
      source?: OSPolicyResourceFile;
    }
    interface OSPolicyResourcePackageResourceYUM {
      /** Required. Package name. */
      name?: string;
    }
    interface OSPolicyResourcePackageResourceZypper {
      /** Required. Package name. */
      name?: string;
    }
    interface OSPolicyResourceRepositoryResource {
      /** An Apt Repository. */
      apt?: OSPolicyResourceRepositoryResourceAptRepository;
      /** A Goo Repository. */
      goo?: OSPolicyResourceRepositoryResourceGooRepository;
      /** A Yum Repository. */
      yum?: OSPolicyResourceRepositoryResourceYumRepository;
      /** A Zypper Repository. */
      zypper?: OSPolicyResourceRepositoryResourceZypperRepository;
    }
    interface OSPolicyResourceRepositoryResourceAptRepository {
      /** Required. Type of archive files in this repository. */
      archiveType?: string;
      /** Required. List of components for this repository. Must contain at least one item. */
      components?: string[];
      /** Required. Distribution of this repository. */
      distribution?: string;
      /** URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`. */
      gpgKey?: string;
      /** Required. URI for this repository. */
      uri?: string;
    }
    interface OSPolicyResourceRepositoryResourceGooRepository {
      /** Required. The name of the repository. */
      name?: string;
      /** Required. The url of the repository. */
      url?: string;
    }
    interface OSPolicyResourceRepositoryResourceYumRepository {
      /** Required. The location of the repository directory. */
      baseUrl?: string;
      /** The display name of the repository. */
      displayName?: string;
      /** URIs of GPG keys. */
      gpgKeys?: string[];
      /** Required. A one word, unique name for this repository. This is the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for resource conflicts. */
      id?: string;
    }
    interface OSPolicyResourceRepositoryResourceZypperRepository {
      /** Required. The location of the repository directory. */
      baseUrl?: string;
      /** The display name of the repository. */
      displayName?: string;
      /** URIs of GPG keys. */
      gpgKeys?: string[];
      /** Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts. */
      id?: string;
    }
    interface Status {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface VulnerabilityReport {
      /** Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport` */
      name?: string;
      /** Output only. The timestamp for when the last vulnerability report was generated for the VM. */
      updateTime?: string;
      /** Output only. List of vulnerabilities affecting the VM. */
      vulnerabilities?: VulnerabilityReportVulnerability[];
    }
    interface VulnerabilityReportVulnerability {
      /** Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability. */
      availableInventoryItemIds?: string[];
      /** The timestamp for when the vulnerability was first detected. */
      createTime?: string;
      /** Contains metadata as per the upstream feed of the operating system and NVD. */
      details?: VulnerabilityReportVulnerabilityDetails;
      /** Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some distros, this field may be empty. */
      installedInventoryItemIds?: string[];
      /** List of items affected by the vulnerability. */
      items?: VulnerabilityReportVulnerabilityItem[];
      /** The timestamp for when the vulnerability was last modified. */
      updateTime?: string;
    }
    interface VulnerabilityReportVulnerabilityDetails {
      /** The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM. */
      cve?: string;
      /** The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity. */
      cvssV2Score?: number;
      /** The full description of the CVSSv3 for this vulnerability from NVD. */
      cvssV3?: CVSSv3;
      /** The note or description describing the vulnerability from the distro. */
      description?: string;
      /** Corresponds to the references attached to the `VulnerabilityDetails`. */
      references?: VulnerabilityReportVulnerabilityDetailsReference[];
      /** Assigned severity/impact ranking from the distro. */
      severity?: string;
    }
    interface VulnerabilityReportVulnerabilityDetailsReference {
      /** The source of the reference e.g. NVD. */
      source?: string;
      /** The url of the reference. */
      url?: string;
    }
    interface VulnerabilityReportVulnerabilityItem {
      /** Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability. */
      availableInventoryItemId?: string;
      /** The recommended [CPE URI](https://cpe.mitre.org/specification/) update that contains a fix for this vulnerability. */
      fixedCpeUri?: string;
      /** Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some operating systems, this field might be empty. */
      installedInventoryItemId?: string;
      /** The upstream OS patch, packages or KB that fixes the vulnerability. */
      upstreamFix?: string;
    }
    interface InstanceOSPoliciesCompliancesResource {
      /** Get OS policies compliance data for the specified Compute Engine VM instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. API resource name for instance OS policies compliance resource. Format: `projects/{project}/locations/{location}/instanceOSPoliciesCompliances/{instance}` For `{project}`, either Compute Engine project-number or project-id can be provided. For `{instance}`, either Compute Engine VM instance-id or instance-name can be provided. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<InstanceOSPoliciesCompliance>;
      /** List OS policies compliance data for all Compute Engine VM instances in the specified zone. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If provided, this field specifies the criteria that must be met by a `InstanceOSPoliciesCompliance` API resource to be included in the response. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to `ListInstanceOSPoliciesCompliances` that indicates where this listing should continue from. */
        pageToken?: string;
        /** Required. The parent resource name. Format: `projects/{project}/locations/{location}` For `{project}`, either Compute Engine project-number or project-id can be provided. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListInstanceOSPoliciesCompliancesResponse>;
    }
    interface InventoriesResource {
      /** Get inventory data for the specified VM instance. If the VM has no associated inventory, the message `NOT_FOUND` is returned. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. API resource name for inventory resource. Format: `projects/{project}/locations/{location}/instances/{instance}/inventory` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC. */
        view?: string;
      }): Request<Inventory>;
      /** List inventory data for all VM instances in the specified zone. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If provided, this field specifies the criteria that must be met by a `Inventory` API resource to be included in the response. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to `ListInventories` that indicates where this listing should continue from. */
        pageToken?: string;
        /** Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC. */
        view?: string;
      }): Request<ListInventoriesResponse>;
    }
    interface ReportsResource {
      /** Get the OS policy assignment report for the specified Compute Engine VM instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. API resource name for OS policy assignment report. Format: `/projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/report` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance_id}`, either Compute Engine `instance-id` or `instance-name` can be provided. For `{assignment_id}`, the OSPolicyAssignment id must be provided. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<OSPolicyAssignmentReport>;
      /** List OS policy assignment reports for all Compute Engine VM instances in the specified zone. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** If provided, this field specifies the criteria that must be met by the `OSPolicyAssignmentReport` API resource that is included in the response. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to the `ListOSPolicyAssignmentReports` method that indicates where this listing should continue from. */
        pageToken?: string;
        /** Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either `instance-name`, `instance-id`, or `-` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all instances in the project/location. For `{assignment}`, either `assignment-id` or `-` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all OSPolicyAssignments in the project/location. Either {instance} or {assignment} must be `-`. For example: `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports` returns all reports for the instance `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports` returns all the reports for the given assignment across all instances. `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports` returns all the reports for all assignments across all instances. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListOSPolicyAssignmentReportsResponse>;
    }
    interface OsPolicyAssignmentsResource {
      reports: ReportsResource;
    }
    interface VulnerabilityReportsResource {
      /** Gets the vulnerability report for the specified VM instance. Only VMs with inventory data have vulnerability reports associated with them. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. API resource name for vulnerability resource. Format: `projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<VulnerabilityReport>;
      /** List vulnerability reports for all VM instances in the specified zone. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** This field supports filtering by the severity level for the vulnerability. For a list of severity levels, see [Severity levels for vulnerabilities](https://cloud.google.com/container-analysis/docs/container-scanning-overview#severity_levels_for_vulnerabilities). The filter field follows the rules described in the [AIP-160](https://google.aip.dev/160) guidelines as follows: + **Filter for a specific severity type**: you can list reports that contain vulnerabilities that are classified as medium by specifying `vulnerabilities.details.severity:MEDIUM`. + **Filter for a range of severities** : you can list reports that have vulnerabilities that are classified as critical or high by specifying `vulnerabilities.details.severity:HIGH OR vulnerabilities.details.severity:CRITICAL` */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to `ListVulnerabilityReports` that indicates where this listing should continue from. */
        pageToken?: string;
        /** Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListVulnerabilityReportsResponse>;
    }
    interface InstancesResource {
      inventories: InventoriesResource;
      osPolicyAssignments: OsPolicyAssignmentsResource;
      vulnerabilityReports: VulnerabilityReportsResource;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
      cancel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: CancelOperationRequest;
      }): Request<{}>;
      cancel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the operation resource to be cancelled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: CancelOperationRequest
      ): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
    }
    interface OsPolicyAssignmentsResource {
      /** Create an OS policy assignment. This method also creates the first revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel). */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The logical name of the OS policy assignment in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project. */
        osPolicyAssignmentId?: string;
        /** Required. The parent resource name in the form: projects/{project}/locations/{location} */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: OSPolicyAssignment;
      }): Request<Operation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The logical name of the OS policy assignment in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project. */
          osPolicyAssignmentId?: string;
          /** Required. The parent resource name in the form: projects/{project}/locations/{location} */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
          requestId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: OSPolicyAssignment
      ): Request<Operation>;
      /** Delete the OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. If the LRO completes and is not cancelled, all revisions associated with the OS policy assignment are deleted. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel). */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the OS policy assignment to be deleted */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
        requestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of OS policy assignment. Format: `projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}@{revisionId}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<OSPolicyAssignment>;
      /** List the OS policy assignments under the parent resource. For each OS policy assignment, the latest revision is returned. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of assignments to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to `ListOSPolicyAssignments` that indicates where this listing should continue from. */
        pageToken?: string;
        /** Required. The parent resource name. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListOSPolicyAssignmentsResponse>;
      /** List the OS policy assignment revisions for a given OS policy assignment. */
      listRevisions(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the OS policy assignment to list revisions for. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of revisions to return. */
        pageSize?: number;
        /** A pagination token returned from a previous call to `ListOSPolicyAssignmentRevisions` that indicates where this listing should continue from. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ListOSPolicyAssignmentRevisionsResponse>;
      /** Update an existing OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel). */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Optional. If set to true, and the OS policy assignment is not found, a new OS policy assignment will be created. In this situation, `update_mask` is ignored. */
        allowMissing?: boolean;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
        requestId?: string;
        /** Optional. Field mask that controls which fields of the assignment should be updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: OSPolicyAssignment;
      }): Request<Operation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Optional. If set to true, and the OS policy assignment is not found, a new OS policy assignment will be created. In this situation, `update_mask` is ignored. */
          allowMissing?: boolean;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
          requestId?: string;
          /** Optional. Field mask that controls which fields of the assignment should be updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: OSPolicyAssignment
      ): Request<Operation>;
      operations: OperationsResource;
    }
    interface LocationsResource {
      instanceOSPoliciesCompliances: InstanceOSPoliciesCompliancesResource;
      instances: InstancesResource;
      osPolicyAssignments: OsPolicyAssignmentsResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const projects: ProjectsResource;
  }
}
