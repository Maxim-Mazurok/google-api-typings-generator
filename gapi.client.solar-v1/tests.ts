/* This is stub file for gapi.client.solar-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250128

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://solar.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.solar */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Locates the closest building to a query point. Returns an error with code `NOT_FOUND` if there are no buildings within approximately 50m of the query point. */
    await gapi.client.solar.buildingInsights.findClosest({
      experiments: 'Test string',
      'location.latitude': 42,
      'location.longitude': 42,
      requiredQuality: 'Test string',
    });
    /** Gets solar information for a region surrounding a location. Returns an error with code `NOT_FOUND` if the location is outside the coverage area. */
    await gapi.client.solar.dataLayers.get({
      exactQualityRequired: true,
      experiments: 'Test string',
      'location.latitude': 42,
      'location.longitude': 42,
      pixelSizeMeters: 42,
      radiusMeters: 42,
      requiredQuality: 'Test string',
      view: 'Test string',
    });
    /** Returns an image by its ID. */
    await gapi.client.solar.geoTiff.get({
      id: 'Test string',
    });
  }
});
