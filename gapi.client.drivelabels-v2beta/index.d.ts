/* Type definitions for non-npm package Drive Labels API v2beta 0.0 */
// Project: https://developers.google.com/workspace/drive/labels
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://drivelabels.googleapis.com/$discovery/rest?version=v2beta
// Revision: 20250818

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Drive Labels API v2beta */
  function load(
    urlOrObject: 'https://drivelabels.googleapis.com/$discovery/rest?version=v2beta',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'drivelabels', version: 'v2beta'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'drivelabels',
    version: 'v2beta',
    callback: () => any,
  ): void;

  namespace drivelabels {
    interface GoogleAppsDriveLabelsV2betaBadgeColors {
      /** Output only. Badge background that pairs with the foreground. */
      backgroundColor?: GoogleTypeColor;
      /** Output only. Badge foreground that pairs with the background. */
      foregroundColor?: GoogleTypeColor;
      /** Output only. Color that can be used for text without a background. */
      soloColor?: GoogleTypeColor;
    }
    interface GoogleAppsDriveLabelsV2betaBadgeConfig {
      /** The color of the badge. When not specified, no badge is rendered. The background, foreground, and solo (light and dark mode) colors set here are changed in the Drive UI into the closest recommended supported color. */
      color?: GoogleTypeColor;
      /** Override the default global priority of this badge. When set to 0, the default priority heuristic is used. */
      priorityOverride?: string;
    }
    interface GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest {
      /** Required. The request message specifying the resources to update. */
      requests?: GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest[];
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. If this is set, the `use_admin_access` field in the `DeleteLabelPermissionRequest` messages must either be empty or match this field. */
      useAdminAccess?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest {
      /** Required. The request message specifying the resources to update. */
      requests?: GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest[];
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. If this is set, the `use_admin_access` field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
      useAdminAccess?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse {
      /** Required. Permissions updated. */
      permissions?: GoogleAppsDriveLabelsV2betaLabelPermission[];
    }
    interface GoogleAppsDriveLabelsV2betaDateLimits {
      /** Maximum value for the date field type. */
      maxValue?: GoogleTypeDate;
      /** Minimum value for the date field type. */
      minValue?: GoogleTypeDate;
    }
    interface GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest {
      /** Required. Label permission resource name. */
      name?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest {
      /** The BCP-47 language code to use for evaluating localized field labels when `include_label_in_response` is `true`. */
      languageCode?: string;
      /** A list of updates to apply to the label. Requests will be applied in the order they are specified. */
      requests?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest[];
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** When specified, only certain fields belonging to the indicated view will be returned. */
      view?: string;
      /** Provides control over how write requests are executed. */
      writeControl?: GoogleAppsDriveLabelsV2betaWriteControl;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest {
      /** Required. Field to create. */
      field?: GoogleAppsDriveLabelsV2betaField;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest {
      /** Required. The choice to create. */
      choice?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice;
      /** Required. The selection field in which a choice will be created. */
      fieldId?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest {
      /** Required. ID of the field to delete. */
      id?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest {
      /** Required. The selection field from which a choice will be deleted. */
      fieldId?: string;
      /** Required. Choice to delete. */
      id?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest {
      /** Required. Field disabled policy. */
      disabledPolicy?: GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy;
      /** Required. Key of the field to disable. */
      id?: string;
      /** The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest {
      /** Required. The disabled policy to update. */
      disabledPolicy?: GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy;
      /** Required. The selection field in which a choice will be disabled. */
      fieldId?: string;
      /** Required. Choice to disable. */
      id?: string;
      /** The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest {
      /** Required. ID of the field to enable. */
      id?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest {
      /** Required. The selection field in which a choice will be enabled. */
      fieldId?: string;
      /** Required. Choice to enable. */
      id?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest {
      /** Creates a field. */
      createField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest;
      /** Create a choice within a selection field. */
      createSelectionChoice?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest;
      /** Deletes a field from the label. */
      deleteField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest;
      /** Delete a choice within a selection field. */
      deleteSelectionChoice?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest;
      /** Disables the field. */
      disableField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest;
      /** Disable a choice within a selection field. */
      disableSelectionChoice?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest;
      /** Enables the field. */
      enableField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest;
      /** Enable a choice within a selection field. */
      enableSelectionChoice?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest;
      /** Updates basic properties of a field. */
      updateField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest;
      /** Update field type and/or type options. */
      updateFieldType?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest;
      /** Updates the label properties. */
      updateLabel?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest;
      /** Update a choice property within a selection field. */
      updateSelectionChoiceProperties?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest {
      /** Required. The field to update. */
      id?: string;
      /** Required. Basic field properties. */
      properties?: GoogleAppsDriveLabelsV2betaFieldProperties;
      /** The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest {
      /** Update field to Date. */
      dateOptions?: GoogleAppsDriveLabelsV2betaFieldDateOptions;
      /** Required. The field to update. */
      id?: string;
      /** Update field to Integer. */
      integerOptions?: GoogleAppsDriveLabelsV2betaFieldIntegerOptions;
      /** Update field to Selection. */
      selectionOptions?: GoogleAppsDriveLabelsV2betaFieldSelectionOptions;
      /** Update field to Text. */
      textOptions?: GoogleAppsDriveLabelsV2betaFieldTextOptions;
      /** The fields that should be updated. At least one field must be specified. The root of `type_options` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
      /** Update field to User. */
      userOptions?: GoogleAppsDriveLabelsV2betaFieldUserOptions;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest {
      /** Required. Label properties to update. */
      properties?: GoogleAppsDriveLabelsV2betaLabelProperties;
      /** The fields that should be updated. At least one field must be specified. The root `label_properties` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest {
      /** Required. The selection field to update. */
      fieldId?: string;
      /** Required. The choice to update. */
      id?: string;
      /** Required. The choice properties to update. */
      properties?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties;
      /** The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse {
      /** The reply of the updates. This maps 1:1 with the updates, although responses to some requests may be empty. */
      responses?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse[];
      /** The label after updates were applied. This is only set if `include_label_in_response` is `true` and there were no errors. */
      updatedLabel?: GoogleAppsDriveLabelsV2betaLabel;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse {
      /** The field of the created field. When left blank in a create request, a key will be autogenerated and can be identified here. */
      id?: string;
      /** The priority of the created field. The priority may change from what was specified to assure contiguous priorities between fields (1-n). */
      priority?: number;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse {
      /** The server-generated ID of the field. */
      fieldId?: string;
      /** The server-generated ID of the created choice within the field. */
      id?: string;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse {
      /** Creates a field. */
      createField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse;
      /** Creates a selection list option to add to a selection field. */
      createSelectionChoice?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse;
      /** Deletes a field from the label. */
      deleteField?: any;
      /** Deletes a choice from a selection field. */
      deleteSelectionChoice?: any;
      /** Disables field. */
      disableField?: any;
      /** Disables a choice within a selection field. */
      disableSelectionChoice?: any;
      /** Enables field. */
      enableField?: any;
      /** Enables a choice within a selection field. */
      enableSelectionChoice?: any;
      /** Updates basic properties of a field. */
      updateField?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse;
      /** Updates field type and/or type options. */
      updateFieldType?: any;
      /** Updates basic properties of a label. */
      updateLabel?: any;
      /** Updates a choice within a selection field. */
      updateSelectionChoiceProperties?: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse {
      /** The priority of the updated field. The priority may change from what was specified to assure contiguous priorities between fields (1-n). */
      priority?: number;
    }
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse {}
    interface GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse {
      /** The priority of the updated choice. The priority may change from what was specified to assure contiguous priorities between choices (1-n). */
      priority?: number;
    }
    interface GoogleAppsDriveLabelsV2betaDisableLabelRequest {
      /** Disabled policy to use. */
      disabledPolicy?: GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy;
      /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
      languageCode?: string;
      /** The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as a short-hand for updating every field. */
      updateMask?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** Provides control over how write requests are executed. Defaults to unset, which means the last write wins. */
      writeControl?: GoogleAppsDriveLabelsV2betaWriteControl;
    }
    interface GoogleAppsDriveLabelsV2betaEnableLabelRequest {
      /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
      languageCode?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** Provides control over how write requests are executed. Defaults to unset, which means the last write wins. */
      writeControl?: GoogleAppsDriveLabelsV2betaWriteControl;
    }
    interface GoogleAppsDriveLabelsV2betaField {
      /** Output only. The capabilities this user has on this field and its value when the label is applied on Drive items. */
      appliedCapabilities?: GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities;
      /** Output only. The time this field was created. */
      createTime?: string;
      /** Output only. The user who created this field. */
      creator?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Date field options. */
      dateOptions?: GoogleAppsDriveLabelsV2betaFieldDateOptions;
      /** Output only. The user who disabled this field. This value has no meaning when the field is not disabled. */
      disabler?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this field was disabled. This value has no meaning when the field is not disabled. */
      disableTime?: string;
      /** Output only. UI display hints for rendering a field. */
      displayHints?: GoogleAppsDriveLabelsV2betaFieldDisplayHints;
      /** Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`. */
      id?: string;
      /** Integer field options. */
      integerOptions?: GoogleAppsDriveLabelsV2betaFieldIntegerOptions;
      /** Output only. The lifecycle of this field. */
      lifecycle?: GoogleAppsDriveLabelsV2betaLifecycle;
      /** Output only. The `LockStatus` of this field. */
      lockStatus?: GoogleAppsDriveLabelsV2betaLockStatus;
      /** The basic properties of the field. */
      properties?: GoogleAppsDriveLabelsV2betaFieldProperties;
      /** Output only. The user who published this field. This value has no meaning when the field is not published. */
      publisher?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, "`{query_key}` > 2001-01-01". */
      queryKey?: string;
      /** Output only. The capabilities this user has when editing this field. */
      schemaCapabilities?: GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities;
      /** Selection field options. */
      selectionOptions?: GoogleAppsDriveLabelsV2betaFieldSelectionOptions;
      /** Text field options. */
      textOptions?: GoogleAppsDriveLabelsV2betaFieldTextOptions;
      /** Output only. The user who modified this field. */
      updater?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this field was updated. */
      updateTime?: string;
      /** User field options. */
      userOptions?: GoogleAppsDriveLabelsV2betaFieldUserOptions;
    }
    interface GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities {
      /** Whether the user can read related applied metadata on items. */
      canRead?: boolean;
      /** Whether the user can search for Drive items referencing this field. */
      canSearch?: boolean;
      /** Whether the user can set this field on Drive items. */
      canWrite?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldDateOptions {
      /** Output only. ICU date format. */
      dateFormat?: string;
      /** Localized date formatting option. Field values are rendered in this format according to their locale. */
      dateFormatType?: string;
      /** Output only. Maximum valid value (year, month, day). */
      maxValue?: GoogleTypeDate;
      /** Output only. Minimum valid value (year, month, day). */
      minValue?: GoogleTypeDate;
    }
    interface GoogleAppsDriveLabelsV2betaFieldDisplayHints {
      /** Whether the field should be shown in the UI as disabled. */
      disabled?: boolean;
      /** This field should be hidden in the search menu when searching for Drive items. */
      hiddenInSearch?: boolean;
      /** Whether the field should be shown as required in the UI. */
      required?: boolean;
      /** This field should be shown in the apply menu when applying values to a Drive item. */
      shownInApply?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldIntegerOptions {
      /** Output only. The maximum valid value for the integer field. */
      maxValue?: string;
      /** Output only. The minimum valid value for the integer field. */
      minValue?: string;
    }
    interface GoogleAppsDriveLabelsV2betaFieldLimits {
      /** Date field limits. */
      dateLimits?: GoogleAppsDriveLabelsV2betaDateLimits;
      /** Integer field limits. */
      integerLimits?: GoogleAppsDriveLabelsV2betaIntegerLimits;
      /** Long text field limits. */
      longTextLimits?: GoogleAppsDriveLabelsV2betaLongTextLimits;
      /** Limits for field description, also called help text. */
      maxDescriptionLength?: number;
      /** Limits for field title. */
      maxDisplayNameLength?: number;
      /** Maximum length for the id. */
      maxIdLength?: number;
      /** Selection field limits. */
      selectionLimits?: GoogleAppsDriveLabelsV2betaSelectionLimits;
      /** The relevant limits for the specified Field.Type. Text field limits. */
      textLimits?: GoogleAppsDriveLabelsV2betaTextLimits;
      /** User field limits. */
      userLimits?: GoogleAppsDriveLabelsV2betaUserLimits;
    }
    interface GoogleAppsDriveLabelsV2betaFieldListOptions {
      /** Maximum number of entries permitted. */
      maxEntries?: number;
    }
    interface GoogleAppsDriveLabelsV2betaFieldProperties {
      /** Required. The display text to show in the UI identifying this field. */
      displayName?: string;
      /** Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list. */
      insertBeforeField?: string;
      /** Whether the field should be marked as required. */
      required?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities {
      /** Whether the user can delete this field. The user must have permission and the field must be deprecated. */
      canDelete?: boolean;
      /** Whether the user can disable this field. The user must have permission and this field must not already be disabled. */
      canDisable?: boolean;
      /** Whether the user can enable this field. The user must have permission and this field must be disabled. */
      canEnable?: boolean;
      /** Whether the user can change this field. */
      canUpdate?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptions {
      /** The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`. */
      choices?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice[];
      /** When specified, indicates this field supports a list of values. Once the field is published, this cannot be changed. */
      listOptions?: GoogleAppsDriveLabelsV2betaFieldListOptions;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice {
      /** Output only. The capabilities related to this choice on applied metadata. */
      appliedCapabilities?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities;
      /** Output only. The time this choice was created. */
      createTime?: string;
      /** Output only. The user who created this choice. */
      creator?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The user who disabled this choice. This value has no meaning when the option is not disabled. */
      disabler?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled. */
      disableTime?: string;
      /** Output only. UI display hints for rendering a choice. */
      displayHints?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints;
      /** The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`. */
      id?: string;
      /** Output only. Lifecycle of the choice. */
      lifecycle?: GoogleAppsDriveLabelsV2betaLifecycle;
      /** Output only. The `LockStatus` of this choice. */
      lockStatus?: GoogleAppsDriveLabelsV2betaLockStatus;
      /** Basic properties of the choice. */
      properties?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties;
      /** Output only. The user who published this choice. This value has no meaning when the choice is not published. */
      publisher?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this choice was published. This value has no meaning when the choice is not published. */
      publishTime?: string;
      /** Output only. The capabilities related to this option when editing the option. */
      schemaCapabilities?: GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities;
      /** Output only. The user who updated this choice last. */
      updater?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this choice was updated last. */
      updateTime?: string;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities {
      /** Whether the user can read related applied metadata on items. */
      canRead?: boolean;
      /** Whether the user can use this choice in search queries. */
      canSearch?: boolean;
      /** Whether the user can select this choice on an item. */
      canSelect?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints {
      /** The colors to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`. */
      badgeColors?: GoogleAppsDriveLabelsV2betaBadgeColors;
      /** The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority. */
      badgePriority?: string;
      /** The dark-mode color to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`. */
      darkBadgeColors?: GoogleAppsDriveLabelsV2betaBadgeColors;
      /** Whether the option should be shown in the UI as disabled. */
      disabled?: boolean;
      /** This option should be hidden in the search menu when searching for Drive items. */
      hiddenInSearch?: boolean;
      /** This option should be shown in the apply menu when applying values to a Drive item. */
      shownInApply?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties {
      /** The badge configuration for this choice. When set, the label that owns this choice is considered a "badged label". */
      badgeConfig?: GoogleAppsDriveLabelsV2betaBadgeConfig;
      /** The description of this label. */
      description?: string;
      /** Required. The display text to show in the UI identifying this field. */
      displayName?: string;
      /** Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list. */
      insertBeforeChoice?: string;
    }
    interface GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities {
      /** Whether the user can delete this choice. */
      canDelete?: boolean;
      /** Whether the user can disable this choice. */
      canDisable?: boolean;
      /** Whether the user can enable this choice. */
      canEnable?: boolean;
      /** Whether the user can update this choice. */
      canUpdate?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaFieldTextOptions {
      /** Output only. The maximum valid length of values for the text field. */
      maxLength?: number;
      /** Output only. The minimum valid length of values for the text field. */
      minLength?: number;
    }
    interface GoogleAppsDriveLabelsV2betaFieldUserOptions {
      /** When specified, indicates that this field supports a list of values. Once the field is published, this cannot be changed. */
      listOptions?: GoogleAppsDriveLabelsV2betaFieldListOptions;
    }
    interface GoogleAppsDriveLabelsV2betaIntegerLimits {
      /** Maximum value for an integer field type. */
      maxValue?: string;
      /** Minimum value for an integer field type. */
      minValue?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabel {
      /** Output only. The capabilities related to this label on applied metadata. */
      appliedCapabilities?: GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities;
      /** Output only. Behavior of this label when it's applied to Drive items. */
      appliedLabelPolicy?: GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy;
      /** Output only. The time this label was created. */
      createTime?: string;
      /** Output only. The user who created this label. */
      creator?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The customer this label belongs to. For example: `customers/123abc789`. */
      customer?: string;
      /** Output only. The user who disabled this label. This value has no meaning when the label isn't disabled. */
      disabler?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this label was disabled. This value has no meaning when the label isn't disabled. */
      disableTime?: string;
      /** Output only. UI display hints for rendering the label. */
      displayHints?: GoogleAppsDriveLabelsV2betaLabelDisplayHints;
      /** Optional. The `EnabledAppSettings` for this Label. */
      enabledAppSettings?: GoogleAppsDriveLabelsV2betaLabelEnabledAppSettings;
      /** List of fields in descending priority order. */
      fields?: GoogleAppsDriveLabelsV2betaField[];
      /** Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`. */
      id?: string;
      /** Required. The type of label. */
      labelType?: string;
      /** Custom URL to present to users to allow them to learn more about this label and how it should be used. */
      learnMoreUri?: string;
      /** Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes. */
      lifecycle?: GoogleAppsDriveLabelsV2betaLifecycle;
      /** Output only. The `LockStatus` of this label. */
      lockStatus?: GoogleAppsDriveLabelsV2betaLockStatus;
      /** Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below. */
      name?: string;
      /** Required. The basic properties of the label. */
      properties?: GoogleAppsDriveLabelsV2betaLabelProperties;
      /** Output only. The user who published this label. This value has no meaning when the label isn't published.>> */
      publisher?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. The time this label was published. This value has no meaning when the label isn't published. */
      publishTime?: string;
      /** Output only. The time this label revision was created. */
      revisionCreateTime?: string;
      /** Output only. The user who created this label revision. */
      revisionCreator?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`. */
      revisionId?: string;
      /** Output only. The capabilities the user has on this label. */
      schemaCapabilities?: GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities;
    }
    interface GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities {
      /** Whether the user can apply this label to items. */
      canApply?: boolean;
      /** Whether the user can read applied metadata related to this label. */
      canRead?: boolean;
      /** Whether the user can remove this label from items. */
      canRemove?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy {
      /** Indicates how the applied label and field values should be copied when a Drive item is copied. */
      copyMode?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelDisplayHints {
      /** Whether the label should be shown in the UI as disabled. */
      disabled?: boolean;
      /** This label should be hidden in the search menu when searching for Drive items. */
      hiddenInSearch?: boolean;
      /** The order to display labels in a list. */
      priority?: string;
      /** This label should be shown in the apply menu when applying values to a Drive item. */
      shownInApply?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaLabelEnabledAppSettings {
      /** Optional. The list of apps where the label can be used. */
      enabledApps?: GoogleAppsDriveLabelsV2betaLabelEnabledAppSettingsEnabledApp[];
    }
    interface GoogleAppsDriveLabelsV2betaLabelEnabledAppSettingsEnabledApp {
      /** Optional. The name of the app. */
      app?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelLimits {
      /** The limits for fields. */
      fieldLimits?: GoogleAppsDriveLabelsV2betaFieldLimits;
      /** The maximum number of published fields that can be deleted. */
      maxDeletedFields?: number;
      /** The maximum number of characters allowed for the description. */
      maxDescriptionLength?: number;
      /** The maximum number of draft revisions that will be kept before deleting old drafts. */
      maxDraftRevisions?: number;
      /** The maximum number of fields allowed within the label. */
      maxFields?: number;
      /** The maximum number of characters allowed for the title. */
      maxTitleLength?: number;
      /** Resource name. */
      name?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelLock {
      /** Output only. The user's capabilities on this label lock. */
      capabilities?: GoogleAppsDriveLabelsV2betaLabelLockCapabilities;
      /** The ID of the selection field choice that should be locked. If present, `field_id` must also be present. */
      choiceId?: string;
      /** Output only. The time this label lock was created. */
      createTime?: string;
      /** Output only. The user whose credentials were used to create the label lock. Not present if no user was responsible for creating the label lock. */
      creator?: GoogleAppsDriveLabelsV2betaUserInfo;
      /** Output only. A timestamp indicating when this label lock was scheduled for deletion. Present only if this label lock is in the `DELETING` state. */
      deleteTime?: string;
      /** The ID of the field that should be locked. Empty if the whole label should be locked. */
      fieldId?: string;
      /** Output only. Resource name of this label lock. */
      name?: string;
      /** Output only. This label lock's state. */
      state?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelLockCapabilities {
      /** True if the user is authorized to view the policy. */
      canViewPolicy?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaLabelPermission {
      /** Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the label. */
      audience?: string;
      /** Specifies the email address for a user or group principal. Not populated for audience principals. User and group permissions may only be inserted using an email address. On update requests, if email address is specified, no principal should be specified. */
      email?: string;
      /** Group resource name. */
      group?: string;
      /** Resource name of this permission. */
      name?: string;
      /** Person resource name. */
      person?: string;
      /** The role the principal should have. */
      role?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelProperties {
      /** The description of the label. */
      description?: string;
      /** Required. Title of the label. */
      title?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities {
      /** Whether the user can delete this label. The user must have permission and the label must be disabled. */
      canDelete?: boolean;
      /** Whether the user can disable this label. The user must have permission and this label must not already be disabled. */
      canDisable?: boolean;
      /** Whether the user can enable this label. The user must have permission and this label must be disabled. */
      canEnable?: boolean;
      /** Whether the user can change this label. */
      canUpdate?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaLifecycle {
      /** The policy that governs how to show a disabled label, field, or selection choice. */
      disabledPolicy?: GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy;
      /** Output only. Whether the object associated with this lifecycle has unpublished changes. */
      hasUnpublishedChanges?: boolean;
      /** Output only. The state of the object associated with this lifecycle. */
      state?: string;
    }
    interface GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy {
      /** Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items. */
      hideInSearch?: boolean;
      /** Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI. */
      showInApply?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaListLabelLocksResponse {
      /** Label locks. */
      labelLocks?: GoogleAppsDriveLabelsV2betaLabelLock[];
      /** The token of the next page in the response. */
      nextPageToken?: string;
    }
    interface GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse {
      /** Label permissions. */
      labelPermissions?: GoogleAppsDriveLabelsV2betaLabelPermission[];
      /** The token of the next page in the response. */
      nextPageToken?: string;
    }
    interface GoogleAppsDriveLabelsV2betaListLabelsResponse {
      /** Labels. */
      labels?: GoogleAppsDriveLabelsV2betaLabel[];
      /** The token of the next page in the response. */
      nextPageToken?: string;
    }
    interface GoogleAppsDriveLabelsV2betaListLimits {
      /** Maximum number of values allowed for the field type. */
      maxEntries?: number;
    }
    interface GoogleAppsDriveLabelsV2betaLockStatus {
      /** Output only. Indicates whether this label component is the (direct) target of a label lock. A label component can be implicitly locked even if it's not the direct target of a label lock, in which case this field is set to false. */
      locked?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaLongTextLimits {
      /** Maximum length allowed for a long text field type. */
      maxLength?: number;
      /** Minimum length allowed for a long text field type. */
      minLength?: number;
    }
    interface GoogleAppsDriveLabelsV2betaPublishLabelRequest {
      /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
      languageCode?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** Provides control over how write requests are executed. Defaults to unset, which means the last write wins. */
      writeControl?: GoogleAppsDriveLabelsV2betaWriteControl;
    }
    interface GoogleAppsDriveLabelsV2betaSelectionLimits {
      /** Limits for list-variant of a field type. */
      listLimits?: GoogleAppsDriveLabelsV2betaListLimits;
      /** Maximum number of choices. */
      maxChoices?: number;
      /** Maximum number of deleted choices. */
      maxDeletedChoices?: number;
      /** Maximum length for display name. */
      maxDisplayNameLength?: number;
      /** Maximum ID length for a selection option. */
      maxIdLength?: number;
    }
    interface GoogleAppsDriveLabelsV2betaTextLimits {
      /** Maximum length allowed for a text field type. */
      maxLength?: number;
      /** Minimum length allowed for a text field type. */
      minLength?: number;
    }
    interface GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest {
      /** Required. Indicates how the applied label and field values should be copied when a Drive item is copied. */
      copyMode?: string;
      /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
      languageCode?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** When specified, only certain fields belonging to the indicated view will be returned. */
      view?: string;
    }
    interface GoogleAppsDriveLabelsV2betaUpdateLabelEnabledAppSettingsRequest {
      /** Required. The new `EnabledAppSettings` value for the label. */
      enabledAppSettings?: GoogleAppsDriveLabelsV2betaLabelEnabledAppSettings;
      /** Optional. The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used. */
      languageCode?: string;
      /** Optional. Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
      /** Optional. When specified, only certain fields belonging to the indicated view will be returned. */
      view?: string;
    }
    interface GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest {
      /** Required. The permission to create or update on the label. */
      labelPermission?: GoogleAppsDriveLabelsV2betaLabelPermission;
      /** Required. The parent label resource name. */
      parent?: string;
      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
      useAdminAccess?: boolean;
    }
    interface GoogleAppsDriveLabelsV2betaUserCapabilities {
      /** Output only. Whether the user is allowed access to the label manager. */
      canAccessLabelManager?: boolean;
      /** Output only. Whether the user is an administrator for the shared labels feature. */
      canAdministrateLabels?: boolean;
      /** Output only. Whether the user is allowed to create admin labels. */
      canCreateAdminLabels?: boolean;
      /** Output only. Whether the user is allowed to create shared labels. */
      canCreateSharedLabels?: boolean;
      /** Output only. Resource name for the user capabilities. */
      name?: string;
    }
    interface GoogleAppsDriveLabelsV2betaUserInfo {
      /** The identifier for this user that can be used with the [People API](https://developers.google.com/people) to get more information. For example, `people/12345678`. */
      person?: string;
    }
    interface GoogleAppsDriveLabelsV2betaUserLimits {
      /** Limits for list-variant of a field type. */
      listLimits?: GoogleAppsDriveLabelsV2betaListLimits;
    }
    interface GoogleAppsDriveLabelsV2betaWriteControl {
      /** The revision ID of the label that the write request will be applied to. If this isn't the latest revision of the label, the request will not be processed and will return a 400 Bad Request error. */
      requiredRevisionId?: string;
    }
    interface GoogleProtobufEmpty {}
    interface GoogleTypeColor {
      /** The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0). */
      alpha?: number;
      /** The amount of blue in the color as a value in the interval [0, 1]. */
      blue?: number;
      /** The amount of green in the color as a value in the interval [0, 1]. */
      green?: number;
      /** The amount of red in the color as a value in the interval [0, 1]. */
      red?: number;
    }
    interface GoogleTypeDate {
      /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
      day?: number;
      /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
      month?: number;
      /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
      year?: number;
    }
    interface LocksResource {
      /** Lists the label locks on a label. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of locks to return per page. Default: 100. Max: 200. */
        pageSize?: number;
        /** The token of the page to return. */
        pageToken?: string;
        /** Required. Label on which locks are applied. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleAppsDriveLabelsV2betaListLabelLocksResponse>;
    }
    interface PermissionsResource {
      /** Deletes label permissions. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      batchDelete(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name shared by all permissions being deleted. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest;
      }): Request<{}>;
      batchDelete(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name shared by all permissions being deleted. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest,
      ): Request<{}>;
      /** Updates label permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      batchUpdate(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name shared by all permissions being updated. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest;
      }): Request<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse>;
      batchUpdate(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name shared by all permissions being updated. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest,
      ): Request<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse>;
      /** Updates a label's permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name on the label permission is created. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaLabelPermission;
      }): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name on the label permission is created. Format: `labels/{label}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
          useAdminAccess?: boolean;
        },
        body: GoogleAppsDriveLabelsV2betaLabelPermission,
      ): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      /** Deletes a label's permission. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label permission resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
      }): Request<{}>;
      /** Lists a label's permissions. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of permissions to return per page. Default: 50. Max: 200. */
        pageSize?: number;
        /** The token of the page to return. */
        pageToken?: string;
        /** Required. The parent label resource name on which label permissions are listed. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
      }): Request<GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse>;
    }
    interface LocksResource {
      /** Lists the label locks on a label. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of locks to return per page. Default: 100. Max: 200. */
        pageSize?: number;
        /** The token of the page to return. */
        pageToken?: string;
        /** Required. Label on which locks are applied. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleAppsDriveLabelsV2betaListLabelLocksResponse>;
    }
    interface PermissionsResource {
      /** Deletes label permissions. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      batchDelete(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name shared by all permissions being deleted. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest;
      }): Request<{}>;
      batchDelete(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name shared by all permissions being deleted. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest,
      ): Request<{}>;
      /** Updates label permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      batchUpdate(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name shared by all permissions being updated. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest;
      }): Request<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse>;
      batchUpdate(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name shared by all permissions being updated. Format: `labels/{label}`. If this is set, the parent field in the `UpdateLabelPermissionRequest` messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest,
      ): Request<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse>;
      /** Updates a label's permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name on the label permission is created. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaLabelPermission;
      }): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name on the label permission is created. Format: `labels/{label}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
          useAdminAccess?: boolean;
        },
        body: GoogleAppsDriveLabelsV2betaLabelPermission,
      ): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      /** Deletes a label's permission. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label permission resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
      }): Request<{}>;
      /** Lists a label's permissions. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of permissions to return per page. Default: 50. Max: 200. */
        pageSize?: number;
        /** The token of the page to return. */
        pageToken?: string;
        /** Required. The parent label resource name on which label permissions are listed. Format: `labels/{label}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
      }): Request<GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse>;
    }
    interface RevisionsResource {
      /** Updates a label's permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      updatePermissions(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaLabelPermission;
      }): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      updatePermissions(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
          useAdminAccess?: boolean;
        },
        body: GoogleAppsDriveLabelsV2betaLabelPermission,
      ): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      locks: LocksResource;
      permissions: PermissionsResource;
    }
    interface LabelsResource {
      /** Creates a label. For more information, see [Create and publish a label](https://developers.google.com/workspace/drive/labels/guides/create-label). */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The BCP-47 language code to use for evaluating localized field labels in response. When not specified, values in the default configured language will be used. */
        languageCode?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access. */
        useAdminAccess?: boolean;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaLabel;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The BCP-47 language code to use for evaluating localized field labels in response. When not specified, values in the default configured language will be used. */
          languageCode?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access. */
          useAdminAccess?: boolean;
        },
        body: GoogleAppsDriveLabelsV2betaLabel,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Permanently deletes a label and related metadata on Drive items. For more information, see [Disable, enable, and delete a label](https://developers.google.com/workspace/drive/labels/guides/disable-delete-label). Once deleted, the label and related Drive item metadata will be deleted. Only draft labels and disabled labels may be deleted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** The revision ID of the label that the write request will be applied to. If this isn't the latest revision of the label, the request will not be processed and will return a 400 Bad Request error. */
        'writeControl.requiredRevisionId'?: string;
      }): Request<{}>;
      /** Updates a single label by applying a set of update requests resulting in a new draft revision. For more information, see [Update a label](https://developers.google.com/workspace/drive/labels/guides/update-label). The batch update is all-or-nothing: If any of the update requests are invalid, no changes are applied. The resulting draft revision must be published before the changes may be used with Drive items. */
      delta(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the label to update. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest;
      }): Request<GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse>;
      delta(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the label to update. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest,
      ): Request<GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse>;
      /** Disable a published label. For more information, see [Disable, enable, and delete a label](https://developers.google.com/workspace/drive/labels/guides/disable-delete-label). Disabling a label will result in a new disabled published revision based on the current published revision. If there's a draft revision, a new disabled draft revision will be created based on the latest draft revision. Older draft revisions will be deleted. Once disabled, a label may be deleted with `DeleteLabel`. */
      disable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaDisableLabelRequest;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      disable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. Label resource name. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaDisableLabelRequest,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Enable a disabled label and restore it to its published state. For more information, see [Disable, enable, and delete a label](https://developers.google.com/workspace/drive/labels/guides/disable-delete-label). This will result in a new published revision based on the current disabled published revision. If there's an existing disabled draft revision, a new revision will be created based on that draft and will be enabled. */
      enable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaEnableLabelRequest;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      enable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. Label resource name. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaEnableLabelRequest,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Get a label by its resource name. For more information, see [Search for labels](https://developers.google.com/workspace/drive/labels/guides/search-label). Resource name may be any of: * `labels/{id}` - See `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the label. * `labels/{id}@published` - Gets the current published revision of the label. * `labels/{id}@{revision_id}` - Gets the label at the specified revision ID. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used. */
        languageCode?: string;
        /** Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** When specified, only certain fields belonging to the indicated view are returned. */
        view?: string;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** List labels. For more information, see [Search for labels](https://developers.google.com/workspace/drive/labels/guides/search-label). */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** The customer to scope this list request to. For example: `customers/abcd1234`. If unset, will return all labels within the current customer. */
        customer?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used. */
        languageCode?: string;
        /** Specifies the level of access the user must have on the returned labels. The minimum role a user must have on a label. Defaults to `READER`. */
        minimumRole?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of labels to return per page. Default: 50. Max: 200. */
        pageSize?: number;
        /** The token of the page to return. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`). */
        publishedOnly?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. This will return all labels within the customer. */
        useAdminAccess?: boolean;
        /** When specified, only certain fields belonging to the indicated view are returned. */
        view?: string;
      }): Request<GoogleAppsDriveLabelsV2betaListLabelsResponse>;
      /** Publish all draft changes to the label. Once published, the label may not return to its draft state. For more information, see [Create and publish a label](https://developers.google.com/workspace/drive/labels/guides/create-label). Publishing a label will result in a new published revision. All previous draft revisions will be deleted. Previous published revisions will be kept but are subject to automated deletion as needed. For more information, see [Label lifecycle](https://developers.google.com/workspace/drive/labels/guides/label-lifecycle). Once published, some changes are no longer permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label will be rejected. For example, the following changes to a label will be rejected after the label is published: * The label cannot be directly deleted. It must be disabled first, then deleted. * `Field.FieldType` cannot be changed. * Changes to field validation options cannot reject something that was previously accepted. * Reducing the maximum entries. */
      publish(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaPublishLabelRequest;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      publish(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. Label resource name. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaPublishLabelRequest,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Updates a label's `CopyMode`. Changes to this policy aren't revisioned, don't require publishing, and take effect immediately. */
      updateLabelCopyMode(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the label to update. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      updateLabelCopyMode(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the label to update. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Updates a label's `EnabledAppSettings`. Enabling a label in a Google Workspace app allows it to be used in that app. This change isn't revisioned, doesn't require publishing, and takes effect immediately. */
      updateLabelEnabledAppSettings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the label to update. The resource name of the label to update. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaUpdateLabelEnabledAppSettingsRequest;
      }): Request<GoogleAppsDriveLabelsV2betaLabel>;
      updateLabelEnabledAppSettings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the label to update. The resource name of the label to update. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleAppsDriveLabelsV2betaUpdateLabelEnabledAppSettingsRequest,
      ): Request<GoogleAppsDriveLabelsV2betaLabel>;
      /** Updates a label's permissions. If a permission for the indicated principal doesn't exist, a label permission is created, otherwise the existing permission is updated. Permissions affect the label resource as a whole, aren't revisioned, and don't require publishing. */
      updatePermissions(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent label resource name. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
        useAdminAccess?: boolean;
        /** Request body */
        resource: GoogleAppsDriveLabelsV2betaLabelPermission;
      }): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      updatePermissions(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent label resource name. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the label before allowing access. */
          useAdminAccess?: boolean;
        },
        body: GoogleAppsDriveLabelsV2betaLabelPermission,
      ): Request<GoogleAppsDriveLabelsV2betaLabelPermission>;
      locks: LocksResource;
      permissions: PermissionsResource;
      revisions: RevisionsResource;
    }
    interface LimitsResource {
      /** Get the constraints on the structure of a label; such as, the maximum number of fields allowed and maximum length of the label title. */
      getLabel(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Label revision resource name must be: "limits/label". */
        name?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleAppsDriveLabelsV2betaLabelLimits>;
    }
    interface UsersResource {
      /** Gets the user capabilities. */
      getCapabilities(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** The customer to scope this request to. For example: `customers/abcd1234`. If unset, it will return settings within the current customer. */
        customer?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the user. Only "users/me/capabilities" is supported. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleAppsDriveLabelsV2betaUserCapabilities>;
    }

    const labels: LabelsResource;

    const limits: LimitsResource;

    const users: UsersResource;
  }
}
