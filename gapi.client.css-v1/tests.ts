/* This is stub file for gapi.client.css-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250422

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://css.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.css */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Manage your product listings and accounts for Google Shopping */
    'https://www.googleapis.com/auth/content',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Retrieves a single CSS/MC account by ID. */
    await gapi.client.css.accounts.get({
      name: 'Test string',
      parent: 'Test string',
    });
    /** Lists all the accounts under the specified CSS account ID, and optionally filters by label ID and account name. */
    await gapi.client.css.accounts.listChildAccounts({
      fullName: 'Test string',
      labelId: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Updates labels assigned to CSS/MC accounts by a CSS domain. */
    await gapi.client.css.accounts.updateLabels(
      {
        name: 'Test string',
      },
      {
        labelIds: ['Test string'],
        parent: 'Test string',
      },
    );
    /** Deletes a CSS Product input from your CSS Center account. After a delete it may take several minutes until the input is no longer available. */
    await gapi.client.css.accounts.cssProductInputs.delete({
      name: 'Test string',
      supplementalFeedId: 'Test string',
    });
    /** Uploads a CssProductInput to your CSS Center account. If an input with the same contentLanguage, identity, feedLabel and feedId already exists, this method replaces that entry. After inserting, updating, or deleting a CSS Product input, it may take several minutes before the processed CSS Product can be retrieved. */
    await gapi.client.css.accounts.cssProductInputs.insert(
      {
        feedId: 'Test string',
        parent: 'Test string',
      },
      {
        attributes: {
          additionalImageLinks: ['Test string'],
          adult: true,
          ageGroup: 'Test string',
          brand: 'Test string',
          certifications: [
            {
              authority: 'Test string',
              code: 'Test string',
              name: 'Test string',
            },
          ],
          color: 'Test string',
          cppAdsRedirect: 'Test string',
          cppLink: 'Test string',
          cppMobileLink: 'Test string',
          customLabel0: 'Test string',
          customLabel1: 'Test string',
          customLabel2: 'Test string',
          customLabel3: 'Test string',
          customLabel4: 'Test string',
          description: 'Test string',
          excludedDestinations: ['Test string'],
          expirationDate: 'Test string',
          gender: 'Test string',
          googleProductCategory: 'Test string',
          gtin: 'Test string',
          headlineOfferCondition: 'Test string',
          headlineOfferInstallment: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            downpayment: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            months: 'Test string',
          },
          headlineOfferLink: 'Test string',
          headlineOfferMobileLink: 'Test string',
          headlineOfferPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          headlineOfferShippingPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          headlineOfferSubscriptionCost: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            period: 'Test string',
            periodLength: 'Test string',
          },
          highPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          imageLink: 'Test string',
          includedDestinations: ['Test string'],
          isBundle: true,
          itemGroupId: 'Test string',
          lowPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          material: 'Test string',
          mpn: 'Test string',
          multipack: 'Test string',
          numberOfOffers: 'Test string',
          pattern: 'Test string',
          pause: 'Test string',
          productDetails: [
            {
              attributeName: 'Test string',
              attributeValue: 'Test string',
              sectionName: 'Test string',
            },
          ],
          productHeight: {
            unit: 'Test string',
            value: 42,
          },
          productHighlights: ['Test string'],
          productLength: {
            unit: 'Test string',
            value: 42,
          },
          productTypes: ['Test string'],
          productWeight: {
            unit: 'Test string',
            value: 42,
          },
          productWidth: {
            unit: 'Test string',
            value: 42,
          },
          size: 'Test string',
          sizeSystem: 'Test string',
          sizeTypes: ['Test string'],
          title: 'Test string',
        },
        contentLanguage: 'Test string',
        customAttributes: [
          {
            groupValues: undefined,
            name: 'Test string',
            value: 'Test string',
          },
        ],
        feedLabel: 'Test string',
        finalName: 'Test string',
        freshnessTime: 'Test string',
        name: 'Test string',
        rawProvidedId: 'Test string',
      },
    );
    /** Updates the existing Css Product input in your CSS Center account. After inserting, updating, or deleting a CSS Product input, it may take several minutes before the processed Css Product can be retrieved. */
    await gapi.client.css.accounts.cssProductInputs.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        attributes: {
          additionalImageLinks: ['Test string'],
          adult: true,
          ageGroup: 'Test string',
          brand: 'Test string',
          certifications: [
            {
              authority: 'Test string',
              code: 'Test string',
              name: 'Test string',
            },
          ],
          color: 'Test string',
          cppAdsRedirect: 'Test string',
          cppLink: 'Test string',
          cppMobileLink: 'Test string',
          customLabel0: 'Test string',
          customLabel1: 'Test string',
          customLabel2: 'Test string',
          customLabel3: 'Test string',
          customLabel4: 'Test string',
          description: 'Test string',
          excludedDestinations: ['Test string'],
          expirationDate: 'Test string',
          gender: 'Test string',
          googleProductCategory: 'Test string',
          gtin: 'Test string',
          headlineOfferCondition: 'Test string',
          headlineOfferInstallment: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            downpayment: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            months: 'Test string',
          },
          headlineOfferLink: 'Test string',
          headlineOfferMobileLink: 'Test string',
          headlineOfferPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          headlineOfferShippingPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          headlineOfferSubscriptionCost: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            period: 'Test string',
            periodLength: 'Test string',
          },
          highPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          imageLink: 'Test string',
          includedDestinations: ['Test string'],
          isBundle: true,
          itemGroupId: 'Test string',
          lowPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          material: 'Test string',
          mpn: 'Test string',
          multipack: 'Test string',
          numberOfOffers: 'Test string',
          pattern: 'Test string',
          pause: 'Test string',
          productDetails: [
            {
              attributeName: 'Test string',
              attributeValue: 'Test string',
              sectionName: 'Test string',
            },
          ],
          productHeight: {
            unit: 'Test string',
            value: 42,
          },
          productHighlights: ['Test string'],
          productLength: {
            unit: 'Test string',
            value: 42,
          },
          productTypes: ['Test string'],
          productWeight: {
            unit: 'Test string',
            value: 42,
          },
          productWidth: {
            unit: 'Test string',
            value: 42,
          },
          size: 'Test string',
          sizeSystem: 'Test string',
          sizeTypes: ['Test string'],
          title: 'Test string',
        },
        contentLanguage: 'Test string',
        customAttributes: [
          {
            groupValues: undefined,
            name: 'Test string',
            value: 'Test string',
          },
        ],
        feedLabel: 'Test string',
        finalName: 'Test string',
        freshnessTime: 'Test string',
        name: 'Test string',
        rawProvidedId: 'Test string',
      },
    );
    /** Retrieves the processed CSS Product from your CSS Center account. After inserting, updating, or deleting a product input, it may take several minutes before the updated final product can be retrieved. */
    await gapi.client.css.accounts.cssProducts.get({
      name: 'Test string',
    });
    /** Lists the processed CSS Products in your CSS Center account. The response might contain fewer items than specified by pageSize. Rely on pageToken to determine if there are more items to be requested. After inserting, updating, or deleting a CSS product input, it may take several minutes before the updated processed CSS product can be retrieved. */
    await gapi.client.css.accounts.cssProducts.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Creates a new label, not assigned to any account. */
    await gapi.client.css.accounts.labels.create(
      {
        parent: 'Test string',
      },
      {
        accountId: 'Test string',
        description: 'Test string',
        displayName: 'Test string',
        labelId: 'Test string',
        labelType: 'Test string',
        name: 'Test string',
      },
    );
    /** Deletes a label and removes it from all accounts to which it was assigned. */
    await gapi.client.css.accounts.labels.delete({
      name: 'Test string',
    });
    /** Lists the labels owned by an account. */
    await gapi.client.css.accounts.labels.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Updates a label. */
    await gapi.client.css.accounts.labels.patch(
      {
        name: 'Test string',
      },
      {
        accountId: 'Test string',
        description: 'Test string',
        displayName: 'Test string',
        labelId: 'Test string',
        labelType: 'Test string',
        name: 'Test string',
      },
    );
    /** Lists the daily call quota and usage per group for your CSS Center account. */
    await gapi.client.css.accounts.quotas.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
  }
});
