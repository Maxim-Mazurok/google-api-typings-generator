/* Type definitions for non-npm package Cloud Asset API v1 1.0 */
// Project: https://cloud.google.com/asset-inventory/docs/quickstart
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://cloudasset.googleapis.com/$discovery/rest?version=v1
// Revision: 20210518

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Asset API v1 */
    function load(name: "cloudasset", version: "v1"): PromiseLike<void>;
    function load(name: "cloudasset", version: "v1", callback: () => any): void;

    namespace cloudasset {
        interface AccessSelector {
            /** Optional. The permissions to appear in result. */
            permissions?: string[];
            /** Optional. The roles to appear in result. */
            roles?: string[];
        }
        interface AnalyzeIamPolicyLongrunningRequest {
            /** Required. The request query. */
            analysisQuery?: IamPolicyAnalysisQuery;
            /** Required. Output configuration indicating where the results will be output to. */
            outputConfig?: IamPolicyAnalysisOutputConfig;
        }
        // tslint:disable-next-line:no-empty-interface
        interface AnalyzeIamPolicyLongrunningResponse {
        }
        interface AnalyzeIamPolicyResponse {
            /** Represents whether all entries in the main_analysis and service_account_impersonation_analysis have been fully explored to answer the query in the request. */
            fullyExplored?: boolean;
            /** The main analysis that matches the original request. */
            mainAnalysis?: IamPolicyAnalysis;
            /** The service account impersonation analysis if AnalyzeIamPolicyRequest.analyze_service_account_impersonation is enabled. */
            serviceAccountImpersonationAnalysis?: IamPolicyAnalysis[];
        }
        interface AnalyzeMoveResponse {
            /** The list of analyses returned from performing the intended resource move analysis. The analysis is grouped by different Cloud services. */
            moveAnalysis?: MoveAnalysis[];
        }
        interface Asset {
            /** Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels). */
            accessLevel?: GoogleIdentityAccesscontextmanagerV1AccessLevel;
            /** Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies). */
            accessPolicy?: GoogleIdentityAccesscontextmanagerV1AccessPolicy;
            /**
             * The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of
             * relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path
             * starts from the asset itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
             */
            ancestors?: string[];
            /** The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information. */
            assetType?: string;
            /**
             * A representation of the Cloud IAM policy set on a Google Cloud resource. There can be a maximum of one Cloud IAM policy set on any given resource. In addition, Cloud IAM policies
             * inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this
             * resource and each policy set on all of the resource's ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for more
             * information.
             */
            iamPolicy?: Policy;
            /**
             * The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource
             * names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
             */
            name?: string;
            /**
             * A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one
             * organization policy with different constraints set on a given resource.
             */
            orgPolicy?: GoogleCloudOrgpolicyV1Policy[];
            /** A representation of runtime OS Inventory information. See [this topic](https://cloud.google.com/compute/docs/instances/os-inventory-management) for more information. */
            osInventory?: Inventory;
            /** A representation of the resource. */
            resource?: Resource;
            /** Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview). */
            servicePerimeter?: GoogleIdentityAccesscontextmanagerV1ServicePerimeter;
            /** The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed. */
            updateTime?: string;
        }
        interface AuditConfig {
            /** The configuration for logging of each type of permission. */
            auditLogConfigs?: AuditLogConfig[];
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all
             * services.
             */
            service?: string;
        }
        interface AuditLogConfig {
            /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
            exemptedMembers?: string[];
            /** The log type that this config enables. */
            logType?: string;
        }
        interface BatchGetAssetsHistoryResponse {
            /** A list of assets with valid time windows. */
            assets?: TemporalAsset[];
        }
        interface BigQueryDestination {
            /**
             * Required. The BigQuery dataset in format "projects/projectId/datasets/datasetId", to which the snapshot result should be exported. If this dataset does not exist, the export call
             * returns an INVALID_ARGUMENT error.
             */
            dataset?: string;
            /**
             * If the destination table already exists and this flag is `TRUE`, the table will be overwritten by the contents of assets snapshot. If the flag is `FALSE` or unset and the
             * destination table already exists, the export call returns an INVALID_ARGUMEMT error.
             */
            force?: boolean;
            /**
             * [partition_spec] determines whether to export to partitioned table(s) and how to partition the data. If [partition_spec] is unset or [partition_spec.partition_key] is unset or
             * `PARTITION_KEY_UNSPECIFIED`, the snapshot results will be exported to non-partitioned table(s). [force] will decide whether to overwrite existing table(s). If [partition_spec] is
             * specified. First, the snapshot results will be written to partitioned table(s) with two additional timestamp columns, readTime and requestTime, one of which will be the partition
             * key. Secondly, in the case when any destination table already exists, it will first try to update existing table's schema as necessary by appending additional columns. Then, if
             * [force] is `TRUE`, the corresponding partition will be overwritten by the snapshot results (data in different partitions will remain intact); if [force] is unset or `FALSE`, it will
             * append the data. An error will be returned if the schema update or data appension fails.
             */
            partitionSpec?: PartitionSpec;
            /**
             * If this flag is `TRUE`, the snapshot results will be written to one or multiple tables, each of which contains results of one asset type. The [force] and [partition_spec] fields
             * will apply to each of them. Field [table] will be concatenated with "_" and the asset type names (see https://cloud.google.com/asset-inventory/docs/supported-asset-types for
             * supported asset types) to construct per-asset-type table names, in which all non-alphanumeric characters like "." and "/" will be substituted by "_". Example: if field [table] is
             * "mytable" and snapshot results contain "storage.googleapis.com/Bucket" assets, the corresponding table name will be "mytable_storage_googleapis_com_Bucket". If any of these tables
             * does not exist, a new table with the concatenated name will be created. When [content_type] in the ExportAssetsRequest is `RESOURCE`, the schema of each table will include
             * RECORD-type columns mapped to the nested fields in the Asset.resource.data field of that asset type (up to the 15 nested level BigQuery supports
             * (https://cloud.google.com/bigquery/docs/nested-repeated#limitations)). The fields in >15 nested levels will be stored in JSON format string as a child column of its parent RECORD
             * column. If error occurs when exporting to any table, the whole export call will return an error but the export results that already succeed will persist. Example: if exporting to
             * table_type_A succeeds when exporting to table_type_B fails during one export call, the results in table_type_A will persist and there will not be partial results persisting in a
             * table.
             */
            separateTablesPerAssetType?: boolean;
            /** Required. The BigQuery table to which the snapshot result should be written. If this table does not exist, a new table with the given name will be created. */
            table?: string;
        }
        interface Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`,
             * then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which
             * resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?: Expr;
            /**
             * Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is
             * on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service
             * account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that
             * represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example,
             * `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example,
             * `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. *
             * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example,
             * `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service
             * account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently
             * deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in
             * the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
             */
            members?: string[];
            /** Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
            role?: string;
        }
        interface ConditionContext {
            /** The hypothetical access timestamp to evaluate IAM conditions. Note that this value must not be earlier than the current time; otherwise, an INVALID_ARGUMENT error will be returned. */
            accessTime?: string;
        }
        interface ConditionEvaluation {
            /** The evaluation result. */
            evaluationValue?: string;
        }
        interface CreateFeedRequest {
            /**
             * Required. The feed details. The field `name` must be empty and it will be generated in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
             * organizations/organization_number/feeds/feed_id
             */
            feed?: Feed;
            /** Required. This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization. */
            feedId?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface Empty {
        }
        interface Explanation {
            /**
             * The map from roles to their included permissions that match the permission query (i.e., a query containing `policy.role.permissions:`). Example: if query
             * `policy.role.permissions:compute.disk.get` matches a policy binding that contains owner role, the matched_permissions will be `{"roles/owner": ["compute.disk.get"]}`. The roles can
             * also be found in the returned `policy` bindings. Note that the map is populated only for requests with permission queries.
             */
            matchedPermissions?: { [P in string]: Permissions };
        }
        interface ExportAssetsRequest {
            /**
             * A list of asset types to take a snapshot for. For example: "compute.googleapis.com/Disk". Regular expressions are also supported. For example: * "compute.googleapis.com.*" snapshots
             * resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset type ends with "Instance". * ".*Instance.*" snapshots resources whose
             * asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any
             * supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction
             * to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.
             */
            assetTypes?: string[];
            /** Asset content type. If not specified, no content but the asset name will be returned. */
            contentType?: string;
            /** Required. Output configuration indicating where the results will be output to. */
            outputConfig?: OutputConfig;
            /**
             * Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time
             * will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.
             */
            readTime?: string;
        }
        interface Expr {
            /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
            description?: string;
            /** Textual representation of an expression in Common Expression Language syntax. */
            expression?: string;
            /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
            location?: string;
            /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
            title?: string;
        }
        interface Feed {
            /**
             * A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or
             * asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource
             * Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info.
             */
            assetNames?: string[];
            /**
             * A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types
             * are exported to the feed. Example: `"compute.googleapis.com/Disk"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported
             * asset types.
             */
            assetTypes?: string[];
            /**
             * A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression`
             * field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression
             * ("temporal_asset.deleted == true") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user
             * guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions.
             */
            condition?: Expr;
            /** Asset content type. If not specified, no content but the asset name and type will be returned. */
            contentType?: string;
            /** Required. Feed output configuration defining where the asset updates are published to. */
            feedOutputConfig?: FeedOutputConfig;
            /**
             * Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
             * organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
             */
            name?: string;
        }
        interface FeedOutputConfig {
            /** Destination on Pub/Sub. */
            pubsubDestination?: PubsubDestination;
        }
        interface GcsDestination {
            /**
             * The uri of the Cloud Storage object. It's the same uri that is used by gsutil. Example: "gs://bucket_name/object_name". See [Viewing and Editing Object
             * Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no
             * [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the exported result.
             */
            uri?: string;
            /**
             * The uri prefix of all generated Cloud Storage objects. Example: "gs://bucket_name/object_name_prefix". Each object uri is in format: "gs://bucket_name/object_name_prefix// and only
             * contains assets for that type. starts from 0. Example: "gs://bucket_name/object_name_prefix/compute.googleapis.com/Disk/0" is the first shard of output objects containing all
             * compute.googleapis.com/Disk assets. An INVALID_ARGUMENT error will be returned if file with the same name "gs://bucket_name/object_name_prefix" already exists.
             */
            uriPrefix?: string;
        }
        interface GoogleCloudAssetV1Access {
            /** The analysis state of this access. */
            analysisState?: IamPolicyAnalysisState;
            /** The permission. */
            permission?: string;
            /** The role. */
            role?: string;
        }
        interface GoogleCloudAssetV1AccessControlList {
            /**
             * The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding's
             * role.
             */
            accesses?: GoogleCloudAssetV1Access[];
            /** Condition evaluation for this AccessControlList, if there is a condition defined in the above IAM policy binding. */
            conditionEvaluation?: ConditionEvaluation;
            /**
             * Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and
             * Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.
             */
            resourceEdges?: GoogleCloudAssetV1Edge[];
            /** The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource. */
            resources?: GoogleCloudAssetV1Resource[];
        }
        interface GoogleCloudAssetV1BigQueryDestination {
            /**
             * Required. The BigQuery dataset in format "projects/projectId/datasets/datasetId", to which the analysis results should be exported. If this dataset does not exist, the export call
             * will return an INVALID_ARGUMENT error.
             */
            dataset?: string;
            /** The partition key for BigQuery partitioned table. */
            partitionKey?: string;
            /**
             * Required. The prefix of the BigQuery tables to which the analysis results will be written. Tables will be created based on this table_prefix if not exist: * _analysis table will
             * contain export operation's metadata. * _analysis_result will contain all the IamPolicyAnalysisResult. When [partition_key] is specified, both tables will be partitioned based on the
             * [partition_key].
             */
            tablePrefix?: string;
            /**
             * Optional. Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition
             * already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or
             * the latest partition. * WRITE_EMPTY: If the table already exists and contains data, an error is returned. The default value is WRITE_APPEND. Each action is atomic and only occurs if
             * BigQuery is able to complete the job successfully. Details are at https://cloud.google.com/bigquery/docs/loading-data-local#appending_to_or_overwriting_a_table_using_a_local_file.
             */
            writeDisposition?: string;
        }
        interface GoogleCloudAssetV1Edge {
            /** The source node of the edge. For example, it could be a full resource name for a resource node or an email of an identity. */
            sourceNode?: string;
            /** The target node of the edge. For example, it could be a full resource name for a resource node or an email of an identity. */
            targetNode?: string;
        }
        interface GoogleCloudAssetV1GcsDestination {
            /**
             * Required. The uri of the Cloud Storage object. It's the same uri that is used by gsutil. Example: "gs://bucket_name/object_name". See [Viewing and Editing Object
             * Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no
             * [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the analysis result.
             */
            uri?: string;
        }
        interface GoogleCloudAssetV1Identity {
            /** The analysis state of this identity. */
            analysisState?: IamPolicyAnalysisState;
            /**
             * The identity name in any form of members appear in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding), such as: - user:foo@google.com -
             * group:group1@google.com - serviceAccount:s1@prj1.iam.gserviceaccount.com - projectOwner:some_project_id - domain:google.com - allUsers - etc.
             */
            name?: string;
        }
        interface GoogleCloudAssetV1IdentityList {
            /**
             * Group identity edges of the graph starting from the binding's group members to any node of the identities. The Edge.source_node contains a group, such as `group:parent@google.com`.
             * The Edge.target_node contains a member of the group, such as `group:child@google.com` or `user:foo@google.com`. This field is present only if the output_group_edges option is
             * enabled in request.
             */
            groupEdges?: GoogleCloudAssetV1Edge[];
            /**
             * Only the identities that match one of the following conditions will be presented: - The identity_selector, if it is specified in request; - Otherwise, identities reachable from the
             * policy binding's members.
             */
            identities?: GoogleCloudAssetV1Identity[];
        }
        interface GoogleCloudAssetV1p7beta1Asset {
            /** Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels). */
            accessLevel?: GoogleIdentityAccesscontextmanagerV1AccessLevel;
            /** Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies). */
            accessPolicy?: GoogleIdentityAccesscontextmanagerV1AccessPolicy;
            /**
             * The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of
             * relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path
             * starts from the asset itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
             */
            ancestors?: string[];
            /** The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information. */
            assetType?: string;
            /**
             * A representation of the Cloud IAM policy set on a Google Cloud resource. There can be a maximum of one Cloud IAM policy set on any given resource. In addition, Cloud IAM policies
             * inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this
             * resource and each policy set on all of the resource's ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for more
             * information.
             */
            iamPolicy?: Policy;
            /**
             * The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource
             * names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
             */
            name?: string;
            /**
             * A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one
             * organization policy with different constraints set on a given resource.
             */
            orgPolicy?: GoogleCloudOrgpolicyV1Policy[];
            /** The related assets of the asset of one relationship type. One asset only represents one type of relationship. */
            relatedAssets?: GoogleCloudAssetV1p7beta1RelatedAssets;
            /** A representation of the resource. */
            resource?: GoogleCloudAssetV1p7beta1Resource;
            /** Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview). */
            servicePerimeter?: GoogleIdentityAccesscontextmanagerV1ServicePerimeter;
            /** The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed. */
            updateTime?: string;
        }
        interface GoogleCloudAssetV1p7beta1RelatedAsset {
            /**
             * The ancestors of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative
             * resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
             */
            ancestors?: string[];
            /**
             * The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource
             * names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
             */
            asset?: string;
            /** The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information. */
            assetType?: string;
        }
        interface GoogleCloudAssetV1p7beta1RelatedAssets {
            /** The peer resources of the relationship. */
            assets?: GoogleCloudAssetV1p7beta1RelatedAsset[];
            /** The detailed relation attributes. */
            relationshipAttributes?: GoogleCloudAssetV1p7beta1RelationshipAttributes;
        }
        interface GoogleCloudAssetV1p7beta1RelationshipAttributes {
            /** The detail of the relationship, e.g. `contains`, `attaches` */
            action?: string;
            /** The source asset type. Example: `compute.googleapis.com/Instance` */
            sourceResourceType?: string;
            /** The target asset type. Example: `compute.googleapis.com/Disk` */
            targetResourceType?: string;
            /** The unique identifier of the relationship type. Example: `INSTANCE_TO_INSTANCEGROUP` */
            type?: string;
        }
        interface GoogleCloudAssetV1p7beta1Resource {
            /** The content of the resource, in which some sensitive fields are removed and may not be present. */
            data?: { [P in string]: any };
            /**
             * The URL of the discovery document containing the resource's JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for
             * resources that do not have an API based on a discovery document, such as Cloud Bigtable.
             */
            discoveryDocumentUri?: string;
            /**
             * The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as
             * Cloud Bigtable.
             */
            discoveryName?: string;
            /** The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/. */
            location?: string;
            /**
             * The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google
             * Cloud assets, this value is the parent resource defined in the [Cloud IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example:
             * `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently.
             */
            parent?: string;
            /**
             * The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example:
             * `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API.
             */
            resourceUrl?: string;
            /** The API version. Example: `v1` */
            version?: string;
        }
        interface GoogleCloudAssetV1Resource {
            /** The analysis state of this resource. */
            analysisState?: IamPolicyAnalysisState;
            /** The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) */
            fullResourceName?: string;
        }
        interface GoogleCloudOrgpolicyV1BooleanPolicy {
            /**
             * If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. Suppose you have a `Constraint` `constraints/compute.disableSerialPortAccess` with
             * `constraint_default` set to `ALLOW`. A `Policy` for that `Constraint` exhibits the following behavior: - If the `Policy` at this resource has enforced set to `false`, serial port
             * connection attempts will be allowed. - If the `Policy` at this resource has enforced set to `true`, serial port connection attempts will be refused. - If the `Policy` at this
             * resource is `RestoreDefault`, serial port connection attempts will be allowed. - If no `Policy` is set at this resource or anywhere higher in the resource hierarchy, serial port
             * connection attempts will be allowed. - If no `Policy` is set at this resource, but one exists higher in the resource hierarchy, the behavior is as if the`Policy` were set at this
             * resource. The following examples demonstrate the different possible layerings: Example 1 (nearest `Constraint` wins): `organizations/foo` has a `Policy` with: {enforced: false}
             * `projects/bar` has no `Policy` set. The constraint at `projects/bar` and `organizations/foo` will not be enforced. Example 2 (enforcement gets replaced): `organizations/foo` has a
             * `Policy` with: {enforced: false} `projects/bar` has a `Policy` with: {enforced: true} The constraint at `organizations/foo` is not enforced. The constraint at `projects/bar` is
             * enforced. Example 3 (RestoreDefault): `organizations/foo` has a `Policy` with: {enforced: true} `projects/bar` has a `Policy` with: {RestoreDefault: {}} The constraint at
             * `organizations/foo` is enforced. The constraint at `projects/bar` is not enforced, because `constraint_default` for the `Constraint` is `ALLOW`.
             */
            enforced?: boolean;
        }
        interface GoogleCloudOrgpolicyV1ListPolicy {
            /** List of values allowed at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`. */
            allowedValues?: string[];
            /** The policy all_values state. */
            allValues?: string;
            /** List of values denied at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`. */
            deniedValues?: string[];
            /**
             * Determines the inheritance behavior for this `Policy`. By default, a `ListPolicy` set at a resource supersedes any `Policy` set anywhere up the resource hierarchy. However, if
             * `inherit_from_parent` is set to `true`, then the values from the effective `Policy` of the parent resource are inherited, meaning the values set in this `Policy` are added to the
             * values inherited up the hierarchy. Setting `Policy` hierarchies that inherit both allowed values and denied values isn't recommended in most circumstances to keep the configuration
             * simple and understandable. However, it is possible to set a `Policy` with `allowed_values` set that inherits a `Policy` with `denied_values` set. In this case, the values that are
             * allowed must be in `allowed_values` and not present in `denied_values`. For example, suppose you have a `Constraint` `constraints/serviceuser.services`, which has a
             * `constraint_type` of `list_constraint`, and with `constraint_default` set to `ALLOW`. Suppose that at the Organization level, a `Policy` is applied that restricts the allowed API
             * activations to {`E1`, `E2`}. Then, if a `Policy` is applied to a project below the Organization that has `inherit_from_parent` set to `false` and field all_values set to DENY, then
             * an attempt to activate any API will be denied. The following examples demonstrate different possible layerings for `projects/bar` parented by `organizations/foo`: Example 1 (no
             * inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has `inherit_from_parent` `false` and values:
             * {allowed_values: "E3" allowed_values: "E4"} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E3`, and `E4`. Example 2 (inherited
             * values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has a `Policy` with values: {value: "E3" value: "E4"
             * inherit_from_parent: true} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`. Example 3 (inheriting
             * both allowed and denied values): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values: "E2"} `projects/bar` has a `Policy` with: {denied_values:
             * "E1"} The accepted values at `organizations/foo` are `E1`, `E2`. The value accepted at `projects/bar` is `E2`. Example 4 (RestoreDefault): `organizations/foo` has a `Policy` with
             * values: {allowed_values: "E1" allowed_values:"E2"} `projects/bar` has a `Policy` with values: {RestoreDefault: {}} The accepted values at `organizations/foo` are `E1`, `E2`. The
             * accepted values at `projects/bar` are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 5 (no policy inherits parent
             * policy): `organizations/foo` has no `Policy` set. `projects/bar` has no `Policy` set. The accepted values at both levels are either all or none depending on the value of
             * `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 6 (ListConstraint allowing all): `organizations/foo` has a `Policy` with values: {allowed_values: "E1"
             * allowed_values: "E2"} `projects/bar` has a `Policy` with: {all: ALLOW} The accepted values at `organizations/foo` are `E1`, E2`. Any value is accepted at `projects/bar`. Example 7
             * (ListConstraint allowing none): `organizations/foo` has a `Policy` with values: {allowed_values: "E1" allowed_values: "E2"} `projects/bar` has a `Policy` with: {all: DENY} The
             * accepted values at `organizations/foo` are `E1`, E2`. No value is accepted at `projects/bar`. Example 10 (allowed and denied subtrees of Resource Manager hierarchy): Given the
             * following resource hierarchy O1->{F1, F2}; F1->{P1}; F2->{P2, P3}, `organizations/foo` has a `Policy` with values: {allowed_values: "under:organizations/O1"} `projects/bar` has a
             * `Policy` with: {allowed_values: "under:projects/P3"} {denied_values: "under:folders/F2"} The accepted values at `organizations/foo` are `organizations/O1`, `folders/F1`,
             * `folders/F2`, `projects/P1`, `projects/P2`, `projects/P3`. The accepted values at `projects/bar` are `organizations/O1`, `folders/F1`, `projects/P1`.
             */
            inheritFromParent?: boolean;
            /**
             * Optional. The Google Cloud Console will try to default to a configuration that matches the value specified in this `Policy`. If `suggested_value` is not set, it will inherit the
             * value specified higher in the hierarchy, unless `inherit_from_parent` is `false`.
             */
            suggestedValue?: string;
        }
        interface GoogleCloudOrgpolicyV1Policy {
            /** For boolean `Constraints`, whether to enforce the `Constraint` or not. */
            booleanPolicy?: GoogleCloudOrgpolicyV1BooleanPolicy;
            /**
             * The name of the `Constraint` the `Policy` is configuring, for example, `constraints/serviceuser.services`. A [list of available
             * constraints](/resource-manager/docs/organization-policy/org-policy-constraints) is available. Immutable after creation.
             */
            constraint?: string;
            /**
             * An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from either a `GetPolicy` or a `ListOrgPolicy` request,
             * this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the
             * `etag` will be unset. When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value that was returned from a `GetOrgPolicy` request as part of a read-modify-write loop
             * for concurrency control. Not setting the `etag`in a `SetOrgPolicy` request will result in an unconditional write of the `Policy`.
             */
            etag?: string;
            /** List of values either allowed or disallowed. */
            listPolicy?: GoogleCloudOrgpolicyV1ListPolicy;
            /** Restores the default behavior of the constraint; independent of `Constraint` type. */
            restoreDefault?: any;
            /**
             * The time stamp the `Policy` was previously updated. This is set by the server, not specified by the caller, and represents the last time a call to `SetOrgPolicy` was made for that
             * `Policy`. Any value set by the client will be ignored.
             */
            updateTime?: string;
            /** Version of the `Policy`. Default version is 0; */
            version?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudOrgpolicyV1RestoreDefault {
        }
        interface GoogleIdentityAccesscontextmanagerV1AccessLevel {
            /** A `BasicLevel` composed of `Conditions`. */
            basic?: GoogleIdentityAccesscontextmanagerV1BasicLevel;
            /** A `CustomLevel` written in the Common Expression Language. */
            custom?: GoogleIdentityAccesscontextmanagerV1CustomLevel;
            /** Description of the `AccessLevel` and its use. Does not affect behavior. */
            description?: string;
            /**
             * Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format:
             * `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length of the `short_name` component is 50 characters.
             */
            name?: string;
            /** Human readable title. Must be unique within the Policy. */
            title?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1AccessPolicy {
            /**
             * Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if
             * and only if their etags are identical. Clients should not expect this to be in any specific format.
             */
            etag?: string;
            /** Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}` */
            name?: string;
            /** Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}` */
            parent?: string;
            /** Required. Human readable title. Does not affect behavior. */
            title?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1ApiOperation {
            /**
             * API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the
             * `method` field will allow all methods AND permissions for the service specified in `service_name`.
             */
            methodSelectors?: GoogleIdentityAccesscontextmanagerV1MethodSelector[];
            /**
             * The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods
             * AND permissions for all services.
             */
            serviceName?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1BasicLevel {
            /**
             * How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the
             * `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.
             */
            combiningFunction?: string;
            /** Required. A list of requirements for the `AccessLevel` to be granted. */
            conditions?: GoogleIdentityAccesscontextmanagerV1Condition[];
        }
        interface GoogleIdentityAccesscontextmanagerV1Condition {
            /** Device specific restrictions, all restrictions must hold for the Condition to be true. If not specified, all devices are allowed. */
            devicePolicy?: GoogleIdentityAccesscontextmanagerV1DevicePolicy;
            /**
             * CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host
             * bits must be zero) or the input is considered malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
             * "2001:db8::1/32" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed.
             */
            ipSubnetworks?: string[];
            /**
             * The request must be made by one of the provided user or service accounts. Groups are not supported. Syntax: `user:{emailid}` `serviceAccount:{emailid}` If not specified, a request
             * may come from any user.
             */
            members?: string[];
            /**
             * Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields, each field must be false for the Condition overall to be satisfied. Defaults to
             * false.
             */
            negate?: boolean;
            /** The request must originate from one of the provided countries/regions. Must be valid ISO 3166-1 alpha-2 codes. */
            regions?: string[];
            /**
             * A list of other access levels defined in the same `Policy`, referenced by resource name. Referencing an `AccessLevel` which does not exist is an error. All access levels listed must
             * be granted for the Condition to be true. Example: "`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME"`
             */
            requiredAccessLevels?: string[];
        }
        interface GoogleIdentityAccesscontextmanagerV1CustomLevel {
            /** Required. A Cloud CEL expression evaluating to a boolean. */
            expr?: Expr;
        }
        interface GoogleIdentityAccesscontextmanagerV1DevicePolicy {
            /** Allowed device management levels, an empty list allows all management levels. */
            allowedDeviceManagementLevels?: string[];
            /** Allowed encryptions statuses, an empty list allows all statuses. */
            allowedEncryptionStatuses?: string[];
            /** Allowed OS versions, an empty list allows all types and all versions. */
            osConstraints?: GoogleIdentityAccesscontextmanagerV1OsConstraint[];
            /** Whether the device needs to be approved by the customer admin. */
            requireAdminApproval?: boolean;
            /** Whether the device needs to be corp owned. */
            requireCorpOwned?: boolean;
            /** Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`. */
            requireScreenlock?: boolean;
        }
        interface GoogleIdentityAccesscontextmanagerV1EgressFrom {
            /**
             * A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service
             * account only.
             */
            identities?: string[];
            /** Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access. */
            identityType?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1EgressPolicy {
            /** Defines conditions on the source of a request causing this EgressPolicy to apply. */
            egressFrom?: GoogleIdentityAccesscontextmanagerV1EgressFrom;
            /** Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply. */
            egressTo?: GoogleIdentityAccesscontextmanagerV1EgressTo;
        }
        interface GoogleIdentityAccesscontextmanagerV1EgressTo {
            /** A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list. */
            operations?: GoogleIdentityAccesscontextmanagerV1ApiOperation[];
            /**
             * A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it
             * contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
             */
            resources?: string[];
        }
        interface GoogleIdentityAccesscontextmanagerV1IngressFrom {
            /**
             * A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service
             * account only.
             */
            identities?: string[];
            /** Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access. */
            identityType?: string;
            /** Sources that this IngressPolicy authorizes access from. */
            sources?: GoogleIdentityAccesscontextmanagerV1IngressSource[];
        }
        interface GoogleIdentityAccesscontextmanagerV1IngressPolicy {
            /** Defines the conditions on the source of a request causing this IngressPolicy to apply. */
            ingressFrom?: GoogleIdentityAccesscontextmanagerV1IngressFrom;
            /** Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply. */
            ingressTo?: GoogleIdentityAccesscontextmanagerV1IngressTo;
        }
        interface GoogleIdentityAccesscontextmanagerV1IngressSource {
            /**
             * An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this
             * ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud
             * calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources
             * will be allowed.
             */
            accessLevel?: string;
            /**
             * A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed.
             * Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of
             * allowing all Google Cloud resources only is not supported.
             */
            resource?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1IngressTo {
            /** A list of ApiOperations allowed to be performed by the sources specified in corresponding IngressFrom in this ServicePerimeter. */
            operations?: GoogleIdentityAccesscontextmanagerV1ApiOperation[];
            /**
             * A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding
             * IngressFrom. If a single `*` is specified, then access to all resources inside the perimeter are allowed.
             */
            resources?: string[];
        }
        interface GoogleIdentityAccesscontextmanagerV1MethodSelector {
            /**
             * Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are
             * allowed.
             */
            method?: string;
            /** Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation. */
            permission?: string;
        }
        interface GoogleIdentityAccesscontextmanagerV1OsConstraint {
            /** The minimum allowed OS version. If not set, any version of this OS satisfies the constraint. Format: `"major.minor.patch"`. Examples: `"10.5.301"`, `"9.2.1"`. */
            minimumVersion?: string;
            /** Required. The allowed OS type. */
            osType?: string;
            /**
             * Only allows requests from devices with a verified Chrome OS. Verifications includes requirements that the device is enterprise-managed, conformant to domain policies, and the caller
             * has permission to call the API targeted by the request.
             */
            requireVerifiedChromeOs?: boolean;
        }
        interface GoogleIdentityAccesscontextmanagerV1ServicePerimeter {
            /** Description of the `ServicePerimeter` and its use. Does not affect behavior. */
            description?: string;
            /**
             * Required. Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format:
             * `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
             */
            name?: string;
            /**
             * Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a
             * perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.
             */
            perimeterType?: string;
            /**
             * Proposed (or dry run) ServicePerimeter configuration. This configuration allows to specify and test ServicePerimeter configuration without enforcing actual access restrictions. Only
             * allowed to be set when the "use_explicit_dry_run_spec" flag is set.
             */
            spec?: GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig;
            /** Current ServicePerimeter configuration. Specifies sets of resources, restricted services and access levels that determine perimeter content and boundaries. */
            status?: GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig;
            /** Human readable title. Must be unique within the Policy. */
            title?: string;
            /**
             * Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When
             * this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration ("spec") to use in a dry-run version of the
             * Service Perimeter. This allows the user to test changes to the enforced config ("status") without actually enforcing them. This testing is done through analyzing the differences
             * between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values.
             */
            useExplicitDryRunSpec?: boolean;
        }
        interface GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig {
            /**
             * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this
             * `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google
             * Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.
             */
            accessLevels?: string[];
            /**
             * List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants
             * it. Must be empty for a perimeter bridge.
             */
            egressPolicies?: GoogleIdentityAccesscontextmanagerV1EgressPolicy[];
            /**
             * List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy
             * grants it. Must be empty for a perimeter bridge.
             */
            ingressPolicies?: GoogleIdentityAccesscontextmanagerV1IngressPolicy[];
            /** A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}` */
            resources?: string[];
            /**
             * Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the
             * perimeter must meet the perimeter's access restrictions.
             */
            restrictedServices?: string[];
            /** Configuration for APIs allowed within Perimeter. */
            vpcAccessibleServices?: GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices;
        }
        interface GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices {
            /**
             * The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the
             * 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter.
             */
            allowedServices?: string[];
            /** Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'. */
            enableRestriction?: boolean;
        }
        interface IamPolicyAnalysis {
            /** The analysis query. */
            analysisQuery?: IamPolicyAnalysisQuery;
            /** A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found. */
            analysisResults?: IamPolicyAnalysisResult[];
            /** Represents whether all entries in the analysis_results have been fully explored to answer the query. */
            fullyExplored?: boolean;
            /** A list of non-critical errors happened during the query handling. */
            nonCriticalErrors?: IamPolicyAnalysisState[];
        }
        interface IamPolicyAnalysisOutputConfig {
            /** Destination on BigQuery. */
            bigqueryDestination?: GoogleCloudAssetV1BigQueryDestination;
            /** Destination on Cloud Storage. */
            gcsDestination?: GoogleCloudAssetV1GcsDestination;
        }
        interface IamPolicyAnalysisQuery {
            /** Optional. Specifies roles or permissions for analysis. This is optional. */
            accessSelector?: AccessSelector;
            /** Optional. The hypothetical context for IAM conditions evaluation. */
            conditionContext?: ConditionContext;
            /** Optional. Specifies an identity for analysis. */
            identitySelector?: IdentitySelector;
            /** Optional. The query options. */
            options?: Options;
            /** Optional. Specifies a resource for analysis. */
            resourceSelector?: ResourceSelector;
            /**
             * Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as
             * "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to get
             * organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project
             * id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
             */
            scope?: string;
        }
        interface IamPolicyAnalysisResult {
            /** The access control lists derived from the iam_binding that match or potentially match resource and access selectors specified in the request. */
            accessControlLists?: GoogleCloudAssetV1AccessControlList[];
            /** The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of the resource to which the iam_binding policy attaches. */
            attachedResourceFullName?: string;
            /** Represents whether all analyses on the iam_binding have successfully finished. */
            fullyExplored?: boolean;
            /** The Cloud IAM policy binding under analysis. */
            iamBinding?: Binding;
            /** The identity list derived from members of the iam_binding that match or potentially match identity selector specified in the request. */
            identityList?: GoogleCloudAssetV1IdentityList;
        }
        interface IamPolicyAnalysisState {
            /** The human-readable description of the cause of failure. */
            cause?: string;
            /**
             * The Google standard error code that best describes the state. For example: - OK means the analysis on this entity has been successfully finished; - PERMISSION_DENIED means an access
             * denied error is encountered; - DEADLINE_EXCEEDED means the analysis on this entity hasn't been started in time;
             */
            code?: string;
        }
        interface IamPolicySearchResult {
            /** Explanation about the IAM policy search result. It contains additional information to explain why the search result matches the query. */
            explanation?: Explanation;
            /**
             * The IAM policy directly set on the given resource. Note that the original IAM policy can contain multiple bindings. This only contains the bindings that match the given query. For
             * queries that don't contain a constrain on policies (e.g., an empty query), this contains all the bindings. To search against the `policy` bindings: * use a field query: - query by
             * the policy contained members. Example: `policy:amy@gmail.com` - query by the policy contained roles. Example: `policy:roles/compute.admin` - query by the policy contained roles'
             * included permissions. Example: `policy.role.permissions:compute.instances.create`
             */
            policy?: Policy;
            /**
             * The project that the associated GCP resource belongs to, in the form of projects/{PROJECT_NUMBER}. If an IAM policy is set on a resource (like VM instance, Cloud Storage bucket),
             * the project field will indicate the project that contains the resource. If an IAM policy is set on a folder or orgnization, this field will be empty. To search against the
             * `project`: * specify the `scope` field as this project in your search request.
             */
            project?: string;
            /**
             * The full resource name of the resource associated with this IAM policy. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset
             * Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `resource`: * use a field query.
             * Example: `resource:organizations/123`
             */
            resource?: string;
        }
        interface IdentitySelector {
            /**
             * Required. The identity appear in the form of members in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are:
             * "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com". Notice that wildcard characters (such as * and
             * ?) are not supported. You must give a specific identity.
             */
            identity?: string;
        }
        interface Inventory {
            /**
             * Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will
             * change, when there is a new package version.
             */
            items?: { [P in string]: Item };
            /** Base level operating system information for the VM. */
            osInfo?: OsInfo;
        }
        interface Item {
            /** Software package available to be installed on the VM instance. */
            availablePackage?: SoftwarePackage;
            /** When this inventory item was first detected. */
            createTime?: string;
            /** Identifier for this item, unique across items for this VM. */
            id?: string;
            /** Software package present on the VM instance. */
            installedPackage?: SoftwarePackage;
            /** The origin of this inventory item. */
            originType?: string;
            /** The specific type of inventory, correlating to its specific details. */
            type?: string;
            /** When this inventory item was last modified. */
            updateTime?: string;
        }
        interface ListAssetsResponse {
            /** Assets. */
            assets?: Asset[];
            /** Token to retrieve the next page of results. It expires 72 hours after the page token for the first page is generated. Set to empty if there are no remaining results. */
            nextPageToken?: string;
            /** Time the snapshot was taken. */
            readTime?: string;
        }
        interface ListFeedsResponse {
            /** A list of feeds. */
            feeds?: Feed[];
        }
        interface MoveAnalysis {
            /** Analysis result of moving the target resource. */
            analysis?: MoveAnalysisResult;
            /** The user friendly display name of the analysis. E.g. IAM, Organization Policy etc. */
            displayName?: string;
            /** Description of error encountered when performing the analysis. */
            error?: Status;
        }
        interface MoveAnalysisResult {
            /** Blocking information that would prevent the target resource from moving to the specified destination at runtime. */
            blockers?: MoveImpact[];
            /**
             * Warning information indicating that moving the target resource to the specified destination might be unsafe. This can include important policy information and configuration changes,
             * but will not block moves at runtime.
             */
            warnings?: MoveImpact[];
        }
        interface MoveImpact {
            /** User friendly impact detail in a free form message. */
            detail?: string;
        }
        interface Operation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: Status;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        interface Options {
            /**
             * Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many derived
             * queries will be executed. We highly recommend you use AssetService.AnalyzeIamPolicyLongrunning rpc instead. For example, if the request analyzes for which resources user A has
             * permission P, and there's an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there's another IAM policy states service
             * account SA has permission P to a GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in
             * AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a GCP folder F, and there's an IAM policy
             * states user A has iam.serviceAccounts.actAs permission to a service account SA, and there's another IAM policy states service account SA has permission P to the GCP folder F, then
             * user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Default
             * is false.
             */
            analyzeServiceAccountImpersonation?: boolean;
            /**
             * Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If IamPolicyAnalysisQuery.identity_selector is specified,
             * the identity in the result will be determined by the selector, and this flag is not allowed to set. Default is false.
             */
            expandGroups?: boolean;
            /**
             * Optional. If true and IamPolicyAnalysisQuery.resource_selector is not specified, the resource section of the result will expand any resource attached to an IAM policy to include
             * resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a GCP
             * folder, the results will also include resources in that folder with permission P. If true and IamPolicyAnalysisQuery.resource_selector is specified, the resource section of the
             * result will expand the specified resource to include resources lower in the resource hierarchy. Only project or lower resources are supported. Folder and organization resource
             * cannot be used together with this option. For example, if the request analyzes for which users have permission P on a GCP project with this option enabled, the results will include
             * all users who have permission P on that project or any lower resource. Default is false.
             */
            expandResources?: boolean;
            /**
             * Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If IamPolicyAnalysisQuery.access_selector is
             * specified, the access section of the result will be determined by the selector, and this flag is not allowed to set. Default is false.
             */
            expandRoles?: boolean;
            /** Optional. If true, the result will output group identity edges, starting from the binding's group members, to any expanded identities. Default is false. */
            outputGroupEdges?: boolean;
            /** Optional. If true, the result will output resource edges, starting from the policy attached resource, to any expanded resources. Default is false. */
            outputResourceEdges?: boolean;
        }
        interface OsInfo {
            /** The system architecture of the operating system. */
            architecture?: string;
            /** The VM hostname. */
            hostname?: string;
            /** The kernel release of the operating system. */
            kernelRelease?: string;
            /** The kernel version of the operating system. */
            kernelVersion?: string;
            /** The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'. */
            longName?: string;
            /** The current version of the OS Config agent running on the VM. */
            osconfigAgentVersion?: string;
            /** The operating system short name. For example, 'windows' or 'debian'. */
            shortName?: string;
            /** The version of the operating system. */
            version?: string;
        }
        interface OutputConfig {
            /** Destination on BigQuery. The output table stores the fields in asset proto as columns in BigQuery. */
            bigqueryDestination?: BigQueryDestination;
            /** Destination on Cloud Storage. */
            gcsDestination?: GcsDestination;
        }
        interface PartitionSpec {
            /** The partition key for BigQuery partitioned table. */
            partitionKey?: string;
        }
        interface Permissions {
            /** A list of permissions. A sample permission string: `compute.disk.get`. */
            permissions?: string[];
        }
        interface Policy {
            /** Specifies cloud audit logging configuration for this policy. */
            auditConfigs?: AuditConfig[];
            /**
             * Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at
             * least one member.
             */
            bindings?: Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make
             * use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems
             * are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM
             * Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?: string;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings
             * must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a
             * policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use
             * IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave
             * the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?: number;
        }
        interface PubsubDestination {
            /** The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`. */
            topic?: string;
        }
        interface Resource {
            /** The content of the resource, in which some sensitive fields are removed and may not be present. */
            data?: { [P in string]: any };
            /**
             * The URL of the discovery document containing the resource's JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for
             * resources that do not have an API based on a discovery document, such as Cloud Bigtable.
             */
            discoveryDocumentUri?: string;
            /**
             * The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as
             * Cloud Bigtable.
             */
            discoveryName?: string;
            /** The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/. */
            location?: string;
            /**
             * The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google
             * Cloud assets, this value is the parent resource defined in the [Cloud IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example:
             * `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently.
             */
            parent?: string;
            /**
             * The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example:
             * `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API.
             */
            resourceUrl?: string;
            /** The API version. Example: `v1` */
            version?: string;
        }
        interface ResourceSearchResult {
            /**
             * The additional searchable attributes of this resource. The attributes may vary from one resource type to another. Examples: `projectId` for Project, `dnsName` for DNS ManagedZone.
             * This field contains a subset of the resource metadata fields that are returned by the List or Get APIs provided by the corresponding GCP service (e.g., Compute Engine). see [API
             * references and supported searchable attributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types) to see which fields are included. You can
             * search values of these fields through free text search. However, you should not consume the field programically as the field names and values may change as the GCP service updates
             * to a new incompatible API version. To search against the `additional_attributes`: * use a free text query to match the attributes values. Example: to search `additional_attributes =
             * { dnsName: "foobar" }`, you can issue a query `foobar`.
             */
            additionalAttributes?: { [P in string]: any };
            /** The type of this resource. Example: `compute.googleapis.com/Disk`. To search against the `asset_type`: * specify the `asset_type` field in your search request. */
            assetType?: string;
            /**
             * The create timestamp of this resource, at which the resource was created. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the
             * resource's proto contains it. To search against `create_time`: * use a field query. - value in seconds since unix epoch. Example: `createTime > 1609459200` - value in date string.
             * Example: `createTime > 2021-01-01` - value in date-time string (must be quoted). Example: `createTime > "2021-01-01T00:00:00"`
             */
            createTime?: string;
            /**
             * One or more paragraphs of text description of this resource. Maximum length could be up to 1M bytes. This field is available only when the resource's proto contains it. To search
             * against the `description`: * use a field query. Example: `description:"important instance"` * use a free text query. Example: `"important instance"`
             */
            description?: string;
            /**
             * The display name of this resource. This field is available only when the resource's proto contains it. To search against the `display_name`: * use a field query. Example:
             * `displayName:"My Instance"` * use a free text query. Example: `"My Instance"`
             */
            displayName?: string;
            /**
             * The folder(s) that this resource belongs to, in the form of folders/{FOLDER_NUMBER}. This field is available when the resource belongs to one or more folders. To search against
             * `folders`: * use a field query. Example: `folders:(123 OR 456)` * use a free text query. Example: `123` * specify the `scope` field as this folder in your search request.
             */
            folders?: string[];
            /**
             * The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys?hl=en) name or
             * [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en) name. This field is available only when the
             * resource's proto contains it. To search against the `kms_key`: * use a field query. Example: `kmsKey:key` * use a free text query. Example: `key`
             */
            kmsKey?: string;
            /**
             * Labels associated with this resource. See [Labelling and grouping GCP
             * resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the
             * resource's proto contains it. To search against the `labels`: * use a field query: - query on any label's key or value. Example: `labels:prod` - query by a given label. Example:
             * `labels.env:prod` - query by a given label's existence. Example: `labels.env:*` * use a free text query. Example: `prod`
             */
            labels?: { [P in string]: string };
            /**
             * Location can be `global`, regional like `us-east1`, or zonal like `us-west1-b`. This field is available only when the resource's proto contains it. To search against the `location`:
             * * use a field query. Example: `location:us-west*` * use a free text query. Example: `us-west*`
             */
            location?: string;
            /**
             * The full resource name of this resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name
             * Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `name`: * use a field query. Example: `name:instance1` * use
             * a free text query. Example: `instance1`
             */
            name?: string;
            /**
             * Network tags associated with this resource. Like labels, network tags are a type of annotations used to group GCP resources. See [Labelling GCP
             * resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the
             * resource's proto contains it. To search against the `network_tags`: * use a field query. Example: `networkTags:internal` * use a free text query. Example: `internal`
             */
            networkTags?: string[];
            /**
             * The organization that this resource belongs to, in the form of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs to an organization. To search
             * against `organization`: * use a field query. Example: `organization:123` * use a free text query. Example: `123` * specify the `scope` field as this organization in your search
             * request.
             */
            organization?: string;
            /**
             * The type of this resource's immediate parent, if there is one. To search against the `parent_asset_type`: * use a field query. Example:
             * `parentAssetType:"cloudresourcemanager.googleapis.com/Project"` * use a free text query. Example: `cloudresourcemanager.googleapis.com/Project`
             */
            parentAssetType?: string;
            /**
             * The full resource name of this resource's parent, if it has one. To search against the `parent_full_resource_name`: * use a field query. Example:
             * `parentFullResourceName:"project-name"` * use a free text query. Example: `project-name`
             */
            parentFullResourceName?: string;
            /**
             * The project that this resource belongs to, in the form of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project. To search against `project`: *
             * use a field query. Example: `project:12345` * use a free text query. Example: `12345` * specify the `scope` field as this project in your search request.
             */
            project?: string;
            /**
             * The state of this resource. Different resources types have different state definitions that are mapped from various fields of different resource types. This field is available only
             * when the resource's proto contains it. Example: If the resource is an instance provided by Compute Engine, its state will include PROVISIONING, STAGING, RUNNING, STOPPING,
             * SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. See `status` definition in [API Reference](https://cloud.google.com/compute/docs/reference/rest/v1/instances). If the resource is a
             * project provided by Cloud Resource Manager, its state will include LIFECYCLE_STATE_UNSPECIFIED, ACTIVE, DELETE_REQUESTED and DELETE_IN_PROGRESS. See `lifecycleState` definition in
             * [API Reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects). To search against the `state`: * use a field query. Example: `state:RUNNING` * use a free text
             * query. Example: `RUNNING`
             */
            state?: string;
            /**
             * The last update timestamp of this resource, at which the resource was last modified or deleted. The granularity is in seconds. Timestamp.nanos will always be 0. This field is
             * available only when the resource's proto contains it. To search against `update_time`: * use a field query. - value in seconds since unix epoch. Example: `updateTime < 1609459200` -
             * value in date string. Example: `updateTime < 2021-01-01` - value in date-time string (must be quoted). Example: `updateTime < "2021-01-01T00:00:00"`
             */
            updateTime?: string;
        }
        interface ResourceSelector {
            /**
             * Required. The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource
             * types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types).
             */
            fullResourceName?: string;
        }
        interface SearchAllIamPoliciesResponse {
            /** Set if there are more results than those appearing in this response; to get the next set of results, call this method again, using this value as the `page_token`. */
            nextPageToken?: string;
            /** A list of IamPolicy that match the search query. Related information such as the associated resource is returned along with the policy. */
            results?: IamPolicySearchResult[];
        }
        interface SearchAllResourcesResponse {
            /**
             * If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of
             * `next_page_token` as `page_token`.
             */
            nextPageToken?: string;
            /** A list of Resources that match the search query. It contains the resource standard metadata information. */
            results?: ResourceSearchResult[];
        }
        interface SoftwarePackage {
            /** Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt. */
            aptPackage?: VersionedPackage;
            /** Details of a COS package. */
            cosPackage?: VersionedPackage;
            /** Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet. */
            googetPackage?: VersionedPackage;
            /**
             * Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix
             * Engineering.
             */
            qfePackage?: WindowsQuickFixEngineeringPackage;
            /** Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update. */
            wuaPackage?: WindowsUpdatePackage;
            /** Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum. */
            yumPackage?: VersionedPackage;
            /** Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual. */
            zypperPackage?: VersionedPackage;
            /** Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual. */
            zypperPatch?: ZypperPatch;
        }
        interface Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface TemporalAsset {
            /** An asset in Google Cloud. */
            asset?: Asset;
            /** Whether the asset has been deleted or not. */
            deleted?: boolean;
            /** Prior copy of the asset. Populated if prior_asset_state is PRESENT. Currently this is only set for responses in Real-Time Feed. */
            priorAsset?: Asset;
            /** State of prior_asset. */
            priorAssetState?: string;
            /** The time window when the asset data and state was observed. */
            window?: TimeWindow;
        }
        interface TimeWindow {
            /** End time of the time window (inclusive). If not specified, the current timestamp is used instead. */
            endTime?: string;
            /** Start time of the time window (exclusive). */
            startTime?: string;
        }
        interface UpdateFeedRequest {
            /**
             * Required. The new values of feed details. It must match an existing feed and the field `name` must be in the format of: projects/project_number/feeds/feed_id or
             * folders/folder_number/feeds/feed_id or organizations/organization_number/feeds/feed_id.
             */
            feed?: Feed;
            /** Required. Only updates the `feed` fields indicated by this mask. The field mask must not be empty, and it must not contain fields that are immutable or only set by the server. */
            updateMask?: string;
        }
        interface VersionedPackage {
            /** The system architecture this package is intended for. */
            architecture?: string;
            /** The name of the package. */
            packageName?: string;
            /** The version of the package. */
            version?: string;
        }
        interface WindowsQuickFixEngineeringPackage {
            /** A short textual description of the QFE update. */
            caption?: string;
            /** A textual description of the QFE update. */
            description?: string;
            /** Unique identifier associated with a particular QFE update. */
            hotFixId?: string;
            /** Date that the QFE update was installed. Mapped from installed_on field. */
            installTime?: string;
        }
        interface WindowsUpdateCategory {
            /** The identifier of the windows update category. */
            id?: string;
            /** The name of the windows update category. */
            name?: string;
        }
        interface WindowsUpdatePackage {
            /** The categories that are associated with this update package. */
            categories?: WindowsUpdateCategory[];
            /** The localized description of the update package. */
            description?: string;
            /** A collection of Microsoft Knowledge Base article IDs that are associated with the update package. */
            kbArticleIds?: string[];
            /** The last published date of the update, in (UTC) date and time. */
            lastDeploymentChangeTime?: string;
            /** A collection of URLs that provide more information about the update package. */
            moreInfoUrls?: string[];
            /** The revision number of this update package. */
            revisionNumber?: number;
            /** A hyperlink to the language-specific support information for the update. */
            supportUrl?: string;
            /** The localized title of the update package. */
            title?: string;
            /** Gets the identifier of an update package. Stays the same across revisions. */
            updateId?: string;
        }
        interface ZypperPatch {
            /** The category of the patch. */
            category?: string;
            /** The name of the patch. */
            patchName?: string;
            /** The severity specified for this patch */
            severity?: string;
            /** Any summary information provided about this patch. */
            summary?: string;
        }
        interface AssetsResource {
            /** Lists assets with time and resource types and returns paged results in response. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /**
                 * A list of asset types to take a snapshot for. For example: "compute.googleapis.com/Disk". Regular expression is also supported. For example: * "compute.googleapis.com.*"
                 * snapshots resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset type ends with "Instance". * ".*Instance.*" snapshots
                 * resources whose asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does
                 * not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types.
                 * See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.
                 */
                assetTypes?: string | string[];
                /** JSONP */
                callback?: string;
                /** Asset content type. If not specified, no content but the asset name will be returned. */
                contentType?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of assets to be returned in a single response. Default is 100, minimum is 1, and maximum is 1000. */
                pageSize?: number;
                /**
                 * The `next_page_token` returned from the previous `ListAssetsResponse`, or unspecified for the first `ListAssetsRequest`. It is a continuation of a prior `ListAssets` call, and
                 * the API should return the next page of assets.
                 */
                pageToken?: string;
                /**
                 * Required. Name of the organization or project the assets belong to. Format: "organizations/[organization-number]" (such as "organizations/123"), "projects/[project-id]" (such as
                 * "projects/my-project-id"), or "projects/[project-number]" (such as "projects/12345").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current
                 * time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.
                 */
                readTime?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListAssetsResponse>;
        }
        interface FeedsResource {
            /** Creates a feed in a parent project/folder/organization to listen to its asset updates. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the project/folder/organization where this feed should be created in. It can only be an organization number (such as "organizations/123"), a folder number
                 * (such as "folders/123"), a project ID (such as "projects/my-project-id")", or a project number (such as "projects/12345").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CreateFeedRequest;
            }): Request<Feed>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the project/folder/organization where this feed should be created in. It can only be an organization number (such as "organizations/123"), a folder number
                 * (such as "folders/123"), a project ID (such as "projects/my-project-id")", or a project number (such as "projects/12345").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CreateFeedRequest): Request<Feed>;
            /** Deletes an asset feed. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the feed and it must be in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
                 * organizations/organization_number/feeds/feed_id
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets details about an asset feed. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the Feed and it must be in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id
                 * organizations/organization_number/feeds/feed_id
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Feed>;
            /** Lists all asset feeds in a parent project/folder/organization. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent project/folder/organization whose feeds are to be listed. It can only be using project/folder/organization number (such as "folders/12345")", or a project
                 * ID (such as "projects/my-project-id").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListFeedsResponse>;
            /** Updates an asset feed configuration. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
                 * organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: UpdateFeedRequest;
            }): Request<Feed>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or
                 * organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: UpdateFeedRequest): Request<Feed>;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Operation>;
        }
        interface V1Resource {
            /** Analyzes IAM policies to answer which identities have what accesses on which resources. */
            analyzeIamPolicy(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Optional. The permissions to appear in result. */
                "analysisQuery.accessSelector.permissions"?: string | string[];
                /** Optional. The roles to appear in result. */
                "analysisQuery.accessSelector.roles"?: string | string[];
                /**
                 * The hypothetical access timestamp to evaluate IAM conditions. Note that this value must not be earlier than the current time; otherwise, an INVALID_ARGUMENT error will be
                 * returned.
                 */
                "analysisQuery.conditionContext.accessTime"?: string;
                /**
                 * Required. The identity appear in the form of members in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are:
                 * "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com". Notice that wildcard characters (such as *
                 * and ?) are not supported. You must give a specific identity.
                 */
                "analysisQuery.identitySelector.identity"?: string;
                /**
                 * Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many
                 * derived queries will be executed. We highly recommend you use AssetService.AnalyzeIamPolicyLongrunning rpc instead. For example, if the request analyzes for which resources user
                 * A has permission P, and there's an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there's another IAM policy states
                 * service account SA has permission P to a GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in
                 * AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a GCP folder F, and there's an IAM policy
                 * states user A has iam.serviceAccounts.actAs permission to a service account SA, and there's another IAM policy states service account SA has permission P to the GCP folder F,
                 * then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis.
                 * Default is false.
                 */
                "analysisQuery.options.analyzeServiceAccountImpersonation"?: boolean;
                /**
                 * Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If IamPolicyAnalysisQuery.identity_selector is
                 * specified, the identity in the result will be determined by the selector, and this flag is not allowed to set. Default is false.
                 */
                "analysisQuery.options.expandGroups"?: boolean;
                /**
                 * Optional. If true and IamPolicyAnalysisQuery.resource_selector is not specified, the resource section of the result will expand any resource attached to an IAM policy to include
                 * resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a
                 * GCP folder, the results will also include resources in that folder with permission P. If true and IamPolicyAnalysisQuery.resource_selector is specified, the resource section of
                 * the result will expand the specified resource to include resources lower in the resource hierarchy. Only project or lower resources are supported. Folder and organization
                 * resource cannot be used together with this option. For example, if the request analyzes for which users have permission P on a GCP project with this option enabled, the results
                 * will include all users who have permission P on that project or any lower resource. Default is false.
                 */
                "analysisQuery.options.expandResources"?: boolean;
                /**
                 * Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If IamPolicyAnalysisQuery.access_selector is
                 * specified, the access section of the result will be determined by the selector, and this flag is not allowed to set. Default is false.
                 */
                "analysisQuery.options.expandRoles"?: boolean;
                /** Optional. If true, the result will output group identity edges, starting from the binding's group members, to any expanded identities. Default is false. */
                "analysisQuery.options.outputGroupEdges"?: boolean;
                /** Optional. If true, the result will output resource edges, starting from the policy attached resource, to any expanded resources. Default is false. */
                "analysisQuery.options.outputResourceEdges"?: boolean;
                /**
                 * Required. The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource
                 * types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types).
                 */
                "analysisQuery.resourceSelector.fullResourceName"?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Optional. Amount of time executable has to complete. See JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json). If this field is set
                 * with a value less than the RPC deadline, and the execution of your query hasn't finished in the specified execution timeout, you will get a response with partial result.
                 * Otherwise, your query's execution will continue until the RPC deadline. If it's not finished until then, you will get a DEADLINE_EXCEEDED error. Default is empty.
                 */
                executionTimeout?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as
                 * "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to
                 * get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or
                 * project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
                 */
                scope: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<AnalyzeIamPolicyResponse>;
            /**
             * Analyzes IAM policies asynchronously to answer which identities have what accesses on which resources, and writes the analysis results to a Google Cloud Storage or a BigQuery
             * destination. For Cloud Storage destination, the output format is the JSON format that represents a AnalyzeIamPolicyResponse. This method implements the google.longrunning.Operation,
             * which allows you to track the operation status. We recommend intervals of at least 2 seconds with exponential backoff retry to poll the operation result. The metadata contains the
             * request to help callers to map responses to requests.
             */
            analyzeIamPolicyLongrunning(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as
                 * "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to
                 * get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or
                 * project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
                 */
                scope: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: AnalyzeIamPolicyLongrunningRequest;
            }): Request<Operation>;
            analyzeIamPolicyLongrunning(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as
                 * "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to
                 * get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or
                 * project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
                 */
                scope: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: AnalyzeIamPolicyLongrunningRequest): Request<Operation>;
            /**
             * Analyze moving a resource to a specified destination without kicking off the actual move. The analysis is best effort depending on the user's permissions of viewing different
             * hierarchical policies and configurations. The policies and configuration are subject to change before the actual resource migration takes place.
             */
            analyzeMove(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Required. Name of the GCP Folder or Organization to reparent the target resource. The analysis will be performed against hypothetically moving the resource to this specified
                 * desitination parent. This can only be a Folder number (such as "folders/123") or an Organization number (such as "organizations/123").
                 */
                destinationParent?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. Name of the resource to perform the analysis against. Only GCP Project are supported as of today. Hence, this can only be Project ID (such as "projects/my-project-id")
                 * or a Project Number (such as "projects/12345").
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Analysis view indicating what information should be included in the analysis response. If unspecified, the default view is FULL. */
                view?: string;
            }): Request<AnalyzeMoveResponse>;
            /**
             * Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can
             * create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an
             * INVALID_ARGUMENT error.
             */
            batchGetAssetsHistory(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /**
                 * A list of the full names of the assets. See: https://cloud.google.com/asset-inventory/docs/resource-name-format Example:
                 * `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. The request becomes a no-op if the asset name list is empty, and the max size of the asset
                 * name list is 100 in one request.
                 */
                assetNames?: string | string[];
                /** JSONP */
                callback?: string;
                /** Optional. The content type. */
                contentType?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The relative name of the root asset. It can only be an organization number (such as "organizations/123"), a project ID (such as "projects/my-project-id")", or a
                 * project number (such as "projects/12345").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** End time of the time window (inclusive). If not specified, the current timestamp is used instead. */
                "readTimeWindow.endTime"?: string;
                /** Start time of the time window (exclusive). */
                "readTimeWindow.startTime"?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<BatchGetAssetsHistoryResponse>;
            /**
             * Exports assets with time and resource types to a given Cloud Storage location/BigQuery table. For Cloud Storage location destinations, the output format is newline-delimited JSON.
             * Each line represents a google.cloud.asset.v1.Asset in the JSON format; for BigQuery table destinations, the output table stores the fields in asset proto as columns. This API
             * implements the google.longrunning.Operation API , which allows you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the
             * export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes.
             */
            exportAssets(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The relative name of the root asset. This can only be an organization number (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
                 * project number (such as "projects/12345"), or a folder number (such as "folders/123").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ExportAssetsRequest;
            }): Request<Operation>;
            exportAssets(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The relative name of the root asset. This can only be an organization number (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
                 * project number (such as "projects/12345"), or a folder number (such as "folders/123").
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ExportAssetsRequest): Request<Operation>;
            /**
             * Searches all IAM policies within the specified scope, such as a project, folder, or organization. The caller must be granted the `cloudasset.assets.searchAllIamPolicies` permission
             * on the desired scope, otherwise the request will be rejected.
             */
            searchAllIamPolicies(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The page size for search result pagination. Page size is capped at 500 even if a larger value is given. If set to zero, server will pick an appropriate default.
                 * Returned results may be fewer than requested. When this happens, there could be more results as long as `next_page_token` is returned.
                 */
                pageSize?: number;
                /**
                 * Optional. If present, retrieve the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response.
                 * The values of all other method parameters must be identical to those in the previous call.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Optional. The query statement. See [how to construct a query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query) for more
                 * information. If not specified or empty, it will search all the IAM policies within the specified `scope`. Note that the query string is compared against each Cloud IAM policy
                 * binding, including its members, roles, and Cloud IAM conditions. The returned Cloud IAM policies will only contain the bindings that match your query. To learn more about the
                 * IAM policy structure, see [IAM policy doc](https://cloud.google.com/iam/docs/policies#structure). Examples: * `policy:amy@gmail.com` to find IAM policy bindings that specify
                 * user "amy@gmail.com". * `policy:roles/compute.admin` to find IAM policy bindings that specify the Compute Admin role. * `policy:comp*` to find IAM policy bindings that contain
                 * "comp" as a prefix of any word in the binding. * `policy.role.permissions:storage.buckets.update` to find IAM policy bindings that specify a role containing
                 * "storage.buckets.update" permission. Note that if callers don't have `iam.roles.get` access to a role's included permissions, policy bindings that specify this role will be
                 * dropped from the search results. * `policy.role.permissions:upd*` to find IAM policy bindings that specify a role containing "upd" as a prefix of any word in the role
                 * permission. Note that if callers don't have `iam.roles.get` access to a role's included permissions, policy bindings that specify this role will be dropped from the search
                 * results. * `resource:organizations/123456` to find IAM policy bindings that are set on "organizations/123456". *
                 * `resource=//cloudresourcemanager.googleapis.com/projects/myproject` to find IAM policy bindings that are set on the project named "myproject". * `Important` to find IAM policy
                 * bindings that contain "Important" as a word in any of the searchable fields (except for the included permissions). * `resource:(instance1 OR instance2) policy:amy` to find IAM
                 * policy bindings that are set on resources "instance1" or "instance2" and also specify user "amy".
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. A scope can be a project, a folder, or an organization. The search is limited to the IAM policies within the `scope`. The caller must be granted the
                 * [`cloudasset.assets.searchAllIamPolicies`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions) permission on the desired scope. The allowed values
                 * are: * projects/{PROJECT_ID} (e.g., "projects/foo-bar") * projects/{PROJECT_NUMBER} (e.g., "projects/12345678") * folders/{FOLDER_NUMBER} (e.g., "folders/1234567") *
                 * organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
                 */
                scope: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SearchAllIamPoliciesResponse>;
            /**
             * Searches all Cloud resources within the specified scope, such as a project, folder, or organization. The caller must be granted the `cloudasset.assets.searchAllResources` permission
             * on the desired scope, otherwise the request will be rejected.
             */
            searchAllResources(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /**
                 * Optional. A list of asset types that this request searches for. If empty, it will search all the [searchable asset
                 * types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types). Regular expressions are also supported. For example: *
                 * "compute.googleapis.com.*" snapshots resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset type ends with "Instance". *
                 * ".*Instance.*" snapshots resources whose asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the
                 * regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned.
                 */
                assetTypes?: string | string[];
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. A comma-separated list of fields specifying the sorting order of the results. The default order is ascending. Add " DESC" after the field name to indicate descending
                 * order. Redundant space characters are ignored. Example: "location DESC, name". Only singular primitive fields in the response are sortable: * name * assetType * project *
                 * displayName * description * location * kmsKey * createTime * updateTime * state * parentFullResourceName * parentAssetType All the other fields such as repeated fields (e.g.,
                 * `networkTags`), map fields (e.g., `labels`) and struct fields (e.g., `additionalAttributes`) are not supported.
                 */
                orderBy?: string;
                /**
                 * Optional. The page size for search result pagination. Page size is capped at 500 even if a larger value is given. If set to zero, server will pick an appropriate default.
                 * Returned results may be fewer than requested. When this happens, there could be more results as long as `next_page_token` is returned.
                 */
                pageSize?: number;
                /**
                 * Optional. If present, then retrieve the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous
                 * response. The values of all other method parameters, must be identical to those in the previous call.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Optional. The query statement. See [how to construct a query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query) for more information.
                 * If not specified or empty, it will search all the resources within the specified `scope`. Examples: * `name:Important` to find Cloud resources whose name contains "Important" as
                 * a word. * `name=Important` to find the Cloud resource whose name is exactly "Important". * `displayName:Impor*` to find Cloud resources whose display name contains "Impor" as a
                 * prefix of any word in the field. * `location:us-west*` to find Cloud resources whose location contains both "us" and "west" as prefixes. * `labels:prod` to find Cloud resources
                 * whose labels contain "prod" as a key or value. * `labels.env:prod` to find Cloud resources that have a label "env" and its value is "prod". * `labels.env:*` to find Cloud
                 * resources that have a label "env". * `kmsKey:key` to find Cloud resources encrypted with a customer-managed encryption key whose name contains the word "key". * `state:ACTIVE`
                 * to find Cloud resources whose state contains "ACTIVE" as a word. * `NOT state:ACTIVE` to find {{gcp_name}} resources whose state doesn't contain "ACTIVE" as a word. *
                 * `createTime<1609459200` to find Cloud resources that were created before "2021-01-01 00:00:00 UTC". 1609459200 is the epoch timestamp of "2021-01-01 00:00:00 UTC" in seconds. *
                 * `updateTime>1609459200` to find Cloud resources that were updated after "2021-01-01 00:00:00 UTC". 1609459200 is the epoch timestamp of "2021-01-01 00:00:00 UTC" in seconds. *
                 * `Important` to find Cloud resources that contain "Important" as a word in any of the searchable fields. * `Impor*` to find Cloud resources that contain "Impor" as a prefix of
                 * any word in any of the searchable fields. * `Important location:(us-west1 OR global)` to find Cloud resources that contain "Important" as a word in any of the searchable fields
                 * and are also located in the "us-west1" region or the "global" location.
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. A scope can be a project, a folder, or an organization. The search is limited to the resources within the `scope`. The caller must be granted the
                 * [`cloudasset.assets.searchAllResources`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions) permission on the desired scope. The allowed values
                 * are: * projects/{PROJECT_ID} (e.g., "projects/foo-bar") * projects/{PROJECT_NUMBER} (e.g., "projects/12345678") * folders/{FOLDER_NUMBER} (e.g., "folders/1234567") *
                 * organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
                 */
                scope: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SearchAllResourcesResponse>;
        }

        const assets: AssetsResource;

        const feeds: FeedsResource;

        const operations: OperationsResource;

        const v1: V1Resource;
    }
}
