/* Type definitions for non-npm package Drive Labels API v2 0.0 */
// Project: https://developers.google.com/drive/labels
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://drivelabels.googleapis.com/$discovery/rest?version=v2
// Revision: 20220826

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Drive Labels API v2 */
    function load(urlOrObject: "https://drivelabels.googleapis.com/$discovery/rest?version=v2"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "drivelabels", version: "v2"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "drivelabels", version: "v2", callback: () => any): void;

    namespace drivelabels {
        interface GoogleAppsDriveLabelsV2BadgeColors {
            /** Output only. Badge background that pairs with the foreground. */
            backgroundColor?: GoogleTypeColor;
            /** Output only. Badge foreground that pairs with the background. */
            foregroundColor?: GoogleTypeColor;
            /** Output only. Color that can be used for text without a background. */
            soloColor?: GoogleTypeColor;
        }
        interface GoogleAppsDriveLabelsV2BadgeConfig {
            /**
             * The color of the badge. When not specified, no badge is rendered. The background, foreground, and solo (light and dark mode) colors set here are changed in the Drive UI into the
             * closest recommended supported color.
             */
            color?: GoogleTypeColor;
            /** Override the default global priority of this badge. When set to 0, the default priority heuristic is used. */
            priorityOverride?: string;
        }
        interface GoogleAppsDriveLabelsV2Field {
            /** Output only. The capabilities this user has on this field and its value when the label is applied on Drive items. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2FieldAppliedCapabilities;
            /** Output only. The time this field was created. */
            createTime?: string;
            /** Output only. The user who created this field. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Date field options. */
            dateOptions?: GoogleAppsDriveLabelsV2FieldDateOptions;
            /** Output only. The user who disabled this field. This value has no meaning when the field is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this field was disabled. This value has no meaning when the field is not disabled. */
            disableTime?: string;
            /** Output only. UI display hints for rendering a field. */
            displayHints?: GoogleAppsDriveLabelsV2FieldDisplayHints;
            /** Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+` */
            id?: string;
            /** Integer field options. */
            integerOptions?: GoogleAppsDriveLabelsV2FieldIntegerOptions;
            /** Output only. The lifecycle of this field. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this field. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** The basic properties of the field. */
            properties?: GoogleAppsDriveLabelsV2FieldProperties;
            /** Output only. The user who published this field. This value has no meaning when the field is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, "`{query_key}` > 2001-01-01". */
            queryKey?: string;
            /** Output only. The capabilities this user has when editing this field. */
            schemaCapabilities?: GoogleAppsDriveLabelsV2FieldSchemaCapabilities;
            /** Selection field options. */
            selectionOptions?: GoogleAppsDriveLabelsV2FieldSelectionOptions;
            /** Text field options. */
            textOptions?: GoogleAppsDriveLabelsV2FieldTextOptions;
            /** Output only. The user who modified this field. */
            updater?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this field was updated. */
            updateTime?: string;
            /** User field options. */
            userOptions?: GoogleAppsDriveLabelsV2FieldUserOptions;
        }
        interface GoogleAppsDriveLabelsV2FieldAppliedCapabilities {
            /** Whether the user can read related applied metadata on items. */
            canRead?: boolean;
            /** Whether the user can search for Drive items referencing this field. */
            canSearch?: boolean;
            /** Whether the user can set this field on Drive items. */
            canWrite?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldDateOptions {
            /** Output only. ICU date format. */
            dateFormat?: string;
            /** Localized date formatting option. Field values are rendered in this format according to their locale. */
            dateFormatType?: string;
            /** Output only. Maximum valid value (year, month, day). */
            maxValue?: GoogleTypeDate;
            /** Output only. Minimum valid value (year, month, day). */
            minValue?: GoogleTypeDate;
        }
        interface GoogleAppsDriveLabelsV2FieldDisplayHints {
            /** Whether the field should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This field should be hidden in the search menu when searching for Drive items. */
            hiddenInSearch?: boolean;
            /** Whether the field should be shown as required in the UI. */
            required?: boolean;
            /** This field should be shown in the apply menu when applying values to a Drive item. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldIntegerOptions {
            /** Output only. The maximum valid value for the integer field. */
            maxValue?: string;
            /** Output only. The minimum valid value for the integer field. */
            minValue?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldListOptions {
            /** Maximum number of entries permitted. */
            maxEntries?: number;
        }
        interface GoogleAppsDriveLabelsV2FieldProperties {
            /** Required. The display text to show in the UI identifying this field. */
            displayName?: string;
            /** Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list. */
            insertBeforeField?: string;
            /** Whether the field should be marked as required. */
            required?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSchemaCapabilities {
            /** Whether the user can delete this field. The user must have permission and the field must be deprecated. */
            canDelete?: boolean;
            /** Whether the user can disable this field. The user must have permission and this field must not already be disabled. */
            canDisable?: boolean;
            /** Whether the user can enable this field. The user must have permission and this field must be disabled. */
            canEnable?: boolean;
            /** Whether the user can change this field. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptions {
            /** The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`. */
            choices?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice[];
            /** When specified, indicates this field supports a list of values. Once the field is published, this cannot be changed. */
            listOptions?: GoogleAppsDriveLabelsV2FieldListOptions;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice {
            /** Output only. The capabilities related to this choice on applied metadata. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities;
            /** Output only. The time this choice was created. */
            createTime?: string;
            /** Output only. The user who created this choice. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The user who disabled this choice. This value has no meaning when the option is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled. */
            disableTime?: string;
            /** Output only. UI display hints for rendering a choice. */
            displayHints?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints;
            /** The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`. */
            id?: string;
            /** Output only. Lifecycle of the choice. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this choice. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** Basic properties of the choice. */
            properties?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties;
            /** Output only. The user who published this choice. This value has no meaning when the choice is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this choice was published. This value has no meaning when the choice is not published. */
            publishTime?: string;
            /** Output only. The capabilities related to this option when editing the option. */
            schemaCapabilities?: GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities;
            /** Output only. The user who updated this choice last. */
            updater?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this choice was updated last. */
            updateTime?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities {
            /** Whether the user can read related applied metadata on items. */
            canRead?: boolean;
            /** Whether the user can use this choice in search queries. */
            canSearch?: boolean;
            /** Whether the user can select this choice on an item. */
            canSelect?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints {
            /** The colors to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`. */
            badgeColors?: GoogleAppsDriveLabelsV2BadgeColors;
            /**
             * The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this
             * will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.
             */
            badgePriority?: string;
            /** The dark-mode color to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`. */
            darkBadgeColors?: GoogleAppsDriveLabelsV2BadgeColors;
            /** Whether the option should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This option should be hidden in the search menu when searching for Drive items. */
            hiddenInSearch?: boolean;
            /** This option should be shown in the apply menu when applying values to a Drive item. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties {
            /** The badge configuration for this choice. When set, the label that owns this choice is considered a "badged label". */
            badgeConfig?: GoogleAppsDriveLabelsV2BadgeConfig;
            /** The description of this label. */
            description?: string;
            /** Required. The display text to show in the UI identifying this field. */
            displayName?: string;
            /** Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list. */
            insertBeforeChoice?: string;
        }
        interface GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities {
            /** Whether the user can delete this choice. */
            canDelete?: boolean;
            /** Whether the user can disable this choice. */
            canDisable?: boolean;
            /** Whether the user can enable this choice. */
            canEnable?: boolean;
            /** Whether the user can update this choice. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2FieldTextOptions {
            /** Output only. The maximum valid length of values for the text field. */
            maxLength?: number;
            /** Output only. The minimum valid length of values for the text field. */
            minLength?: number;
        }
        interface GoogleAppsDriveLabelsV2FieldUserOptions {
            /** When specified, indicates that this field supports a list of values. Once the field is published, this cannot be changed. */
            listOptions?: GoogleAppsDriveLabelsV2FieldListOptions;
        }
        interface GoogleAppsDriveLabelsV2Label {
            /** Output only. The capabilities related to this label on applied metadata. */
            appliedCapabilities?: GoogleAppsDriveLabelsV2LabelAppliedCapabilities;
            /** Output only. Behavior of this label when it's applied to Drive items. */
            appliedLabelPolicy?: GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy;
            /** Output only. The time this label was created. */
            createTime?: string;
            /** Output only. The user who created this label. */
            creator?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The user who disabled this label. This value has no meaning when the label is not disabled. */
            disabler?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this label was disabled. This value has no meaning when the label is not disabled. */
            disableTime?: string;
            /** Output only. UI display hints for rendering the label. */
            displayHints?: GoogleAppsDriveLabelsV2LabelDisplayHints;
            /** List of fields in descending priority order. */
            fields?: GoogleAppsDriveLabelsV2Field[];
            /**
             * Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex:
             * `([a-zA-Z0-9])+`
             */
            id?: string;
            /** Required. The type of label. */
            labelType?: string;
            /** Custom URL to present to users to allow them to learn more about this label and how it should be used. */
            learnMoreUri?: string;
            /** Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes. */
            lifecycle?: GoogleAppsDriveLabelsV2Lifecycle;
            /** Output only. The LockStatus of this label. */
            lockStatus?: GoogleAppsDriveLabelsV2LockStatus;
            /** Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below. */
            name?: string;
            /** Required. The basic properties of the label. */
            properties?: GoogleAppsDriveLabelsV2LabelProperties;
            /** Output only. The user who published this label. This value has no meaning when the label is not published. */
            publisher?: GoogleAppsDriveLabelsV2UserInfo;
            /** Output only. The time this label was published. This value has no meaning when the label is not published. */
            publishTime?: string;
            /** Output only. The time this label revision was created. */
            revisionCreateTime?: string;
            /** Output only. The user who created this label revision. */
            revisionCreator?: GoogleAppsDriveLabelsV2UserInfo;
            /**
             * Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a
             * label are changed. Matches the regex: `([a-zA-Z0-9])+`
             */
            revisionId?: string;
            /** Output only. The capabilities the user has on this label. */
            schemaCapabilities?: GoogleAppsDriveLabelsV2LabelSchemaCapabilities;
        }
        interface GoogleAppsDriveLabelsV2LabelAppliedCapabilities {
            /** Whether the user can apply this label to items. */
            canApply?: boolean;
            /** Whether the user can read applied metadata related to this label. */
            canRead?: boolean;
            /** Whether the user can remove this label from items. */
            canRemove?: boolean;
        }
        interface GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy {
            /** Indicates how the applied label and field values should be copied when a Drive item is copied. */
            copyMode?: string;
        }
        interface GoogleAppsDriveLabelsV2LabelDisplayHints {
            /** Whether the label should be shown in the UI as disabled. */
            disabled?: boolean;
            /** This label should be hidden in the search menu when searching for Drive items. */
            hiddenInSearch?: boolean;
            /** Order to display label in a list. */
            priority?: string;
            /** This label should be shown in the apply menu when applying values to a Drive item. */
            shownInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2LabelProperties {
            /** The description of the label. */
            description?: string;
            /** Required. Title of the label. */
            title?: string;
        }
        interface GoogleAppsDriveLabelsV2LabelSchemaCapabilities {
            /** Whether the user can delete this label. The user must have permission and the label must be disabled. */
            canDelete?: boolean;
            /** Whether the user can disable this label. The user must have permission and this label must not already be disabled. */
            canDisable?: boolean;
            /** Whether the user can enable this label. The user must have permission and this label must be disabled. */
            canEnable?: boolean;
            /** Whether the user can change this label. */
            canUpdate?: boolean;
        }
        interface GoogleAppsDriveLabelsV2Lifecycle {
            /** The policy that governs how to show a disabled label, field, or selection choice. */
            disabledPolicy?: GoogleAppsDriveLabelsV2LifecycleDisabledPolicy;
            /** Output only. Whether the object associated with this lifecycle has unpublished changes. */
            hasUnpublishedChanges?: boolean;
            /** Output only. The state of the object associated with this lifecycle. */
            state?: string;
        }
        interface GoogleAppsDriveLabelsV2LifecycleDisabledPolicy {
            /**
             * Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results
             * when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.
             */
            hideInSearch?: boolean;
            /**
             * Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the
             * object is generally hidden in the UI.
             */
            showInApply?: boolean;
        }
        interface GoogleAppsDriveLabelsV2ListLabelsResponse {
            /** Labels. */
            labels?: GoogleAppsDriveLabelsV2Label[];
            /** The token of the next page in the response. */
            nextPageToken?: string;
        }
        interface GoogleAppsDriveLabelsV2LockStatus {
            /**
             * Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a
             * LabelLock, in which case this field is set to false.
             */
            locked?: boolean;
        }
        interface GoogleAppsDriveLabelsV2UserInfo {
            /** The identifier for this user that can be used with the People API to get more information. For example, people/12345678. */
            person?: string;
        }
        interface GoogleTypeColor {
            /**
             * The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) *
             * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message
             * rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color
             * (as if the alpha value had been explicitly given a value of 1.0).
             */
            alpha?: number;
            /** The amount of blue in the color as a value in the interval [0, 1]. */
            blue?: number;
            /** The amount of green in the color as a value in the interval [0, 1]. */
            green?: number;
            /** The amount of red in the color as a value in the interval [0, 1]. */
            red?: number;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?: number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?: number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?: number;
        }
        interface LabelsResource {
            /**
             * Get a label by its resource name. Resource name may be any of: * `labels/{id}` - See `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the label. *
             * `labels/{id}@published` - Gets the current published revision of the label. * `labels/{id}@{revision_id}` - Gets the label at the specified revision ID.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used. */
                languageCode?: string;
                /** Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access. */
                useAdminAccess?: boolean;
                /** When specified, only certain fields belonging to the indicated view are returned. */
                view?: string;
            }): Request<GoogleAppsDriveLabelsV2Label>;
            /** List labels. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used. */
                languageCode?: string;
                /** Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`. */
                minimumRole?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum number of labels to return per page. Default: 50. Max: 200. */
                pageSize?: number;
                /** The token of the page to return. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label
                 * resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned
                 * label resource names don't reference a specific revision (`labels/{id}`).
                 */
                publishedOnly?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer. */
                useAdminAccess?: boolean;
                /** When specified, only certain fields belonging to the indicated view are returned. */
                view?: string;
            }): Request<GoogleAppsDriveLabelsV2ListLabelsResponse>;
        }

        const labels: LabelsResource;
    }
}
