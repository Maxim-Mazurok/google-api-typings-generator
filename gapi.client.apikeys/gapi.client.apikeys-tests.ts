/* This is stub file for gapi.client.apikeys definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20210830

gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('apikeys', 'v2', () => {
        /** now we can use gapi.client.apikeys */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
            'https://www.googleapis.com/auth/cloud-platform',
            /** View your data across Google Cloud services and see the email address of your Google Account */
            'https://www.googleapis.com/auth/cloud-platform.read-only',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /**
         * Find the parent project and resource name of the API key that matches the key string in the request. If the API key has been purged, resource name will not be set. The service account
         * must have the `apikeys.keys.lookup` permission on the parent project.
         */
        await gapi.client.apikeys.keys.lookupKey({
            keyString: "Test string",
        });
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.apikeys.operations.get({
            name: "Test string",
        });
    }
});
