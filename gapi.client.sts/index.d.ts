/* Type definitions for non-npm package Security Token Service API v1 1.0 */
// Project: http://cloud.google.com/iam/docs/workload-identity-federation
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://sts.googleapis.com/$discovery/rest?version=v1
// Revision: 20210109

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Security Token Service API v1 */
    function load(name: "sts", version: "v1"): PromiseLike<void>;
    function load(name: "sts", version: "v1", callback: () => any): void;

    namespace sts {
        interface GoogleIdentityStsV1ExchangeTokenRequest {
            /**
             * The full resource name of the identity provider; for example: `//iam.googleapis.com/projects//workloadIdentityPools//providers/`. Required when exchanging an external credential for
             * a Google access token.
             */
            audience?: string;
            /** Required. The grant type. Must be `urn:ietf:params:oauth:grant-type:token-exchange`, which indicates a token exchange. */
            grantType?: string;
            /** A set of features that Security Token Service supports, in addition to the standard OAuth 2.0 token exchange, formatted as a serialized JSON object of Options. */
            options?: string;
            /** Required. An identifier for the type of requested security token. Must be `urn:ietf:params:oauth:token-type:access_token`. */
            requestedTokenType?: string;
            /**
             * The OAuth 2.0 scopes to include on the resulting access token, formatted as a list of space-delimited, case-sensitive strings. Required when exchanging an external credential for a
             * Google access token.
             */
            scope?: string;
            /**
             * Required. The input token. You can use a Google-issued OAuth 2.0 access token with this field to obtain an access token with new security attributes applied, such as a Credential
             * Access Boundary. If an access token already contains security attributes, you cannot apply additional security attributes.
             */
            subjectToken?: string;
            /** Required. An identifier that indicates the type of the security token in the `subject_token` parameter. Must be `urn:ietf:params:oauth:token-type:access_token`. */
            subjectTokenType?: string;
        }
        interface GoogleIdentityStsV1ExchangeTokenResponse {
            /** An OAuth 2.0 security token, issued by Google, in response to the token exchange request. */
            access_token?: string;
            /**
             * The amount of time, in seconds, between the time when the access token was issued and the time when the access token will expire. This field is absent when the `subject_token` in
             * the request is a Google-issued, short-lived access token. In this case, the access token has the same expiration time as the `subject_token`.
             */
            expires_in?: number;
            /** The token type. Always matches the value of `requested_token_type` from the request. */
            issued_token_type?: string;
            /** The type of access token. Always has the value `Bearer`. */
            token_type?: string;
        }
        interface V1Resource {
            /** Exchanges a credential for a Google OAuth 2.0 access token. */
            token(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleIdentityStsV1ExchangeTokenRequest;
            }): Request<GoogleIdentityStsV1ExchangeTokenResponse>;
            token(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleIdentityStsV1ExchangeTokenRequest): Request<GoogleIdentityStsV1ExchangeTokenResponse>;
        }

        const v1: V1Resource;
    }
}
